var hM=Object.defineProperty;var mM=(t,s,n)=>s in t?hM(t,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[s]=n;var Te=(t,s,n)=>mM(t,typeof s!="symbol"?s+"":s,n);import{a as $1,t as F1}from"../chunks/disclose-version.D319JrU8.js";import{i as O1}from"../chunks/legacy.B9XqU2Kp.js";import{s as Ws,g as Pt,a4 as fM,p as z1,at as Ro,au as L1,c as D1,av as _n,aw as Ns,f as gM,b as Hg,e as Xg,d as lf,r as cf,ax as _M}from"../chunks/runtime.UF19vjoT.js";import{s as Qg}from"../chunks/render.CsfKZDYv.js";import{c as yM,o as j1,b as wM}from"../chunks/index-client.crK-3qIT.js";import{w as bM,g as us}from"../chunks/index.CIEmX6Pw.js";const vM=()=>performance.now(),ji={tick:t=>requestAnimationFrame(t),now:()=>vM(),tasks:new Set};function B1(){const t=ji.now();ji.tasks.forEach(s=>{s.c(t)||(ji.tasks.delete(s),s.f())}),ji.tasks.size!==0&&ji.tick(B1)}function MM(t){let s;return ji.tasks.size===0&&ji.tick(B1),{promise:new Promise(n=>{ji.tasks.add(s={c:t,f:n})}),abort(){ji.tasks.delete(s)}}}function xM(t){var s=fM(0);return function(){return arguments.length===1?(Ws(s,Pt(s)+1),arguments[0]):(Pt(s),t())}}function yw(t){return Object.prototype.toString.call(t)==="[object Date]"}function h_(t){return t}function m_(t,s){if(t===s||t!==t)return()=>t;const n=typeof t;if(n!==typeof s||Array.isArray(t)!==Array.isArray(s))throw new Error("Cannot interpolate values of different type");if(Array.isArray(t)){const o=s.map((u,h)=>m_(t[h],u));return u=>o.map(h=>h(u))}if(n==="object"){if(!t||!s)throw new Error("Object cannot be null");if(yw(t)&&yw(s)){const h=t.getTime(),P=s.getTime()-h;return f=>new Date(h+f*P)}const o=Object.keys(s),u={};return o.forEach(h=>{u[h]=m_(t[h],s[h])}),h=>{const v={};return o.forEach(P=>{v[P]=u[P](h)}),v}}if(n==="number"){const o=s-t;return u=>t+u*o}throw new Error(`Cannot interpolate ${n} values`)}function uf(t,s={}){const n=bM(t);let o,u=t;function h(v,P){if(u=v,t==null)return n.set(t=v),Promise.resolve();let f=o,b=!1,{delay:x=0,duration:k=400,easing:C=h_,interpolate:N=m_}={...s,...P};if(k===0)return f&&(f.abort(),f=null),n.set(t=u),Promise.resolve();const X=ji.now()+x;let oe;return o=MM(re=>{if(re<X)return!0;b||(oe=N(t,v),typeof k=="function"&&(k=k(t,v)),b=!0),f&&(f.abort(),f=null);const V=re-X;return V>k?(n.set(t=v),!1):(n.set(t=oe(C(V/k))),!0)}),o.promise}return{set:h,update:(v,P)=>h(v(u,t),P),subscribe:n.subscribe}}var Va=typeof self<"u"?self:{};function f_(t,s){e:{for(var n=["CLOSURE_FLAGS"],o=Va,u=0;u<n.length;u++)if((o=o[n[u]])==null){n=null;break e}n=o}return(t=n&&n[t])!=null?t:s}function Da(){throw Error("Invalid UTF8")}function ww(t,s){return s=String.fromCharCode.apply(null,s),t==null?s:t+s}let df,Yg;const TM=typeof TextDecoder<"u";let kM;const EM=typeof TextEncoder<"u";function R1(t){if(EM)t=(kM||(kM=new TextEncoder)).encode(t);else{let n=0;const o=new Uint8Array(3*t.length);for(let u=0;u<t.length;u++){var s=t.charCodeAt(u);if(s<128)o[n++]=s;else{if(s<2048)o[n++]=s>>6|192;else{if(s>=55296&&s<=57343){if(s<=56319&&u<t.length){const h=t.charCodeAt(++u);if(h>=56320&&h<=57343){s=1024*(s-55296)+h-56320+65536,o[n++]=s>>18|240,o[n++]=s>>12&63|128,o[n++]=s>>6&63|128,o[n++]=63&s|128;continue}u--}s=65533}o[n++]=s>>12|224,o[n++]=s>>6&63|128}o[n++]=63&s|128}}t=n===o.length?o:o.subarray(0,n)}return t}var Kh,N1=f_(610401301,!1),PM=f_(653718497,f_(1,!0));const bw=Va.navigator;function g_(t){return!!N1&&!!Kh&&Kh.brands.some(({brand:s})=>s&&s.indexOf(t)!=-1)}function Yn(t){var s;return(s=Va.navigator)&&(s=s.userAgent)||(s=""),s.indexOf(t)!=-1}function No(){return!!N1&&!!Kh&&Kh.brands.length>0}function Jg(){return No()?g_("Chromium"):(Yn("Chrome")||Yn("CriOS"))&&!(!No()&&Yn("Edge"))||Yn("Silk")}function z_(t){return z_[" "](t),t}Kh=bw&&bw.userAgentData||null,z_[" "]=function(){};var CM=!No()&&(Yn("Trident")||Yn("MSIE"));!Yn("Android")||Jg(),Jg(),Yn("Safari")&&(Jg()||!No()&&Yn("Coast")||!No()&&Yn("Opera")||!No()&&Yn("Edge")||(No()?g_("Microsoft Edge"):Yn("Edg/"))||No()&&g_("Opera"));var U1={},Rh=null;function SM(t){var s=t.length,n=3*s/4;n%3?n=Math.floor(n):"=.".indexOf(t[s-1])!=-1&&(n="=.".indexOf(t[s-2])!=-1?n-2:n-1);var o=new Uint8Array(n),u=0;return function(h,v){function P(N){for(;f<h.length;){var X=h.charAt(f++),oe=Rh[X];if(oe!=null)return oe;if(!/^[\s\xa0]*$/.test(X))throw Error("Unknown base64 encoding at char: "+X)}return N}V1();for(var f=0;;){var b=P(-1),x=P(0),k=P(64),C=P(64);if(C===64&&b===-1)break;v(b<<2|x>>4),k!=64&&(v(x<<4&240|k>>2),C!=64&&v(k<<6&192|C))}}(t,function(h){o[u++]=h}),u!==n?o.subarray(0,u):o}function V1(){if(!Rh){Rh={};for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),s=["+/=","+/","-_=","-_.","-_"],n=0;n<5;n++){var o=t.concat(s[n].split(""));U1[n]=o;for(var u=0;u<o.length;u++){var h=o[u];Rh[h]===void 0&&(Rh[h]=u)}}}}var W1=typeof Uint8Array<"u",G1=!CM&&typeof btoa=="function";function vw(t){if(!G1){var s;s===void 0&&(s=0),V1(),s=U1[s];var n=Array(Math.floor(t.length/3)),o=s[64]||"";let f=0,b=0;for(;f<t.length-2;f+=3){var u=t[f],h=t[f+1],v=t[f+2],P=s[u>>2];u=s[(3&u)<<4|h>>4],h=s[(15&h)<<2|v>>6],v=s[63&v],n[b++]=P+u+h+v}switch(P=0,v=o,t.length-f){case 2:v=s[(15&(P=t[f+1]))<<2]||o;case 1:t=t[f],n[b]=s[t>>2]+s[(3&t)<<4|P>>4]+v+o}return n.join("")}for(s="",n=0,o=t.length-10240;n<o;)s+=String.fromCharCode.apply(null,t.subarray(n,n+=10240));return s+=String.fromCharCode.apply(null,n?t.subarray(n):t),btoa(s)}const Mw=/[-_.]/g,AM={"-":"+",_:"/",".":"="};function IM(t){return AM[t]||""}function q1(t){if(!G1)return SM(t);Mw.test(t)&&(t=t.replace(Mw,IM)),t=atob(t);const s=new Uint8Array(t.length);for(let n=0;n<t.length;n++)s[n]=t.charCodeAt(n);return s}function Yh(t){return W1&&t!=null&&t instanceof Uint8Array}var Dc={};let $M;function K1(t){if(t!==Dc)throw Error("illegal external caller")}function Wa(){return $M||($M=new ao(null,Dc))}function L_(t){K1(Dc);var s=t.g;return(s=s==null||Yh(s)?s:typeof s=="string"?q1(s):null)==null?s:t.g=s}var ao=class{constructor(t,s){if(K1(s),this.g=t,t!=null&&t.length===0)throw Error("ByteString should be constructed with non-empty values")}h(){return new Uint8Array(L_(this)||0)}};function H1(t,s){t.__closure__error__context__984382||(t.__closure__error__context__984382={}),t.__closure__error__context__984382.severity=s}let FM;function jf(){const t=Error();H1(t,"incident"),function(s){Va.setTimeout(()=>{throw s},0)}(t)}function __(t){return H1(t=Error(t),"warning"),t}function D_(){return typeof BigInt=="function"}function An(t){return Array.prototype.slice.call(t)}var Gc=typeof Symbol=="function"&&typeof Symbol()=="symbol";function Bf(t){return typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():t}var Jh=Bf(),xw=Bf("0di"),Zg=Bf("2ex"),Lh=Bf("1oa"),Rf=Gc?(t,s)=>{t[Jh]|=s}:(t,s)=>{t.G!==void 0?t.G|=s:Object.defineProperties(t,{G:{value:s,configurable:!0,writable:!0,enumerable:!1}})},Tf=Gc?(t,s)=>{t[Jh]&=~s}:(t,s)=>{t.G!==void 0&&(t.G&=~s)},ms=Gc?t=>0|t[Jh]:t=>0|t.G,Wr=Gc?t=>t[Jh]:t=>t.G,hs=Gc?(t,s)=>{t[Jh]=s}:(t,s)=>{t.G!==void 0?t.G=s:Object.defineProperties(t,{G:{value:s,configurable:!0,writable:!0,enumerable:!1}})};function qa(t){return Rf(t,34),t}function OM(t,s){hs(s,-30975&(0|t))}function y_(t,s){hs(s,-30941&(34|t))}var j_,Zh={},X1={};function Tw(t){return!(!t||typeof t!="object"||t.Ja!==X1)}function Nf(t){return t!==null&&typeof t=="object"&&!Array.isArray(t)&&t.constructor===Object}function B_(t,s,n){if(t!=null){if(typeof t=="string")t=t?new ao(t,Dc):Wa();else if(t.constructor!==ao)if(Yh(t))t=t.length?new ao(n?t:new Uint8Array(t),Dc):Wa();else{if(!s)throw Error();t=void 0}}return t}function kf(t){return!(!Array.isArray(t)||t.length)&&!!(1&ms(t))}const kw=[];function uo(t){if(2&t)throw Error()}hs(kw,55),j_=Object.freeze(kw);class Ef{constructor(s,n,o){this.l=0,this.g=s,this.h=n,this.m=o}next(){if(this.l<this.g.length){const s=this.g[this.l++];return{done:!1,value:this.h?this.h.call(this.m,s):s}}return{done:!0,value:void 0}}[Symbol.iterator](){return new Ef(this.g,this.h,this.m)}}let Vo;function Q1(t,s){(s=Vo?s[Vo]:void 0)&&(t[Vo]=An(s))}var zM=Object.freeze({}),LM=Object.freeze({}),DM=Object.freeze({});function Uf(t){return t.Qa=!0,t}var jM=Uf(t=>typeof t=="number"),Ew=Uf(t=>typeof t=="string"),BM=Uf(t=>typeof t=="boolean"),Vf=typeof Va.BigInt=="function"&&typeof Va.BigInt(0)=="bigint",w_=Uf(t=>Vf?t>=NM&&t<=VM:t[0]==="-"?Pw(t,RM):Pw(t,UM));const RM=Number.MIN_SAFE_INTEGER.toString(),NM=Vf?BigInt(Number.MIN_SAFE_INTEGER):void 0,UM=Number.MAX_SAFE_INTEGER.toString(),VM=Vf?BigInt(Number.MAX_SAFE_INTEGER):void 0;function Pw(t,s){if(t.length>s.length)return!1;if(t.length<s.length||t===s)return!0;for(let n=0;n<t.length;n++){const o=t[n],u=s[n];if(o>u)return!1;if(o<u)return!0}}const WM=typeof Uint8Array.prototype.slice=="function";let Y1,Qr=0,ws=0;function Cw(t){const s=t>>>0;Qr=s,ws=(t-s)/4294967296>>>0}function jc(t){if(t<0){Cw(-t);const[s,n]=V_(Qr,ws);Qr=s>>>0,ws=n>>>0}else Cw(t)}function R_(t){const s=Y1||(Y1=new DataView(new ArrayBuffer(8)));s.setFloat32(0,+t,!0),ws=0,Qr=s.getUint32(0,!0)}function N_(t,s){return 4294967296*s+(t>>>0)}function U_(t,s){const n=2147483648&s;return n&&(s=~s>>>0,(t=1+~t>>>0)==0&&(s=s+1>>>0)),t=N_(t,s),n?-t:t}function Pf(t,s){if(t>>>=0,(s>>>=0)<=2097151)var n=""+(4294967296*s+t);else D_()?n=""+(BigInt(s)<<BigInt(32)|BigInt(t)):(t=(16777215&t)+6777216*(n=16777215&(t>>>24|s<<8))+6710656*(s=s>>16&65535),n+=8147497*s,s*=2,t>=1e7&&(n+=t/1e7>>>0,t%=1e7),n>=1e7&&(s+=n/1e7>>>0,n%=1e7),n=s+Sw(n)+Sw(t));return n}function Sw(t){return t=String(t),"0000000".slice(t.length)+t}function Wf(t){if(t.length<16)jc(Number(t));else if(D_())t=BigInt(t),Qr=Number(t&BigInt(4294967295))>>>0,ws=Number(t>>BigInt(32)&BigInt(4294967295));else{const s=+(t[0]==="-");ws=Qr=0;const n=t.length;for(let o=s,u=(n-s)%6+s;u<=n;o=u,u+=6){const h=Number(t.slice(o,u));ws*=1e6,Qr=1e6*Qr+h,Qr>=4294967296&&(ws+=Math.trunc(Qr/4294967296),ws>>>=0,Qr>>>=0)}if(s){const[o,u]=V_(Qr,ws);Qr=o,ws=u}}}function V_(t,s){return s=~s,t?t=1+~t:s+=1,[t,s]}function Qo(t){return t==null||typeof t=="number"?t:t==="NaN"||t==="Infinity"||t==="-Infinity"?Number(t):void 0}function J1(t){return t==null||typeof t=="boolean"?t:typeof t=="number"?!!t:void 0}const GM=/^-?([1-9][0-9]*|0)(\.[0-9]+)?$/;function Gf(t){const s=typeof t;switch(s){case"bigint":return!0;case"number":return Number.isFinite(t)}return s==="string"&&GM.test(t)}function qc(t){if(t==null)return t;if(typeof t=="string"){if(!t)return;t=+t}return typeof t=="number"&&Number.isFinite(t)?0|t:void 0}function qM(t){if(t==null)return t;if(typeof t=="string"){if(!t)return;t=+t}return typeof t=="number"&&Number.isFinite(t)?t>>>0:void 0}function Aw(t){return t[0]!=="-"&&(t.length<20||t.length===20&&Number(t.substring(0,6))<184467)}function W_(t){return t=Math.trunc(t),Number.isSafeInteger(t)||(jc(t),t=U_(Qr,ws)),t}function G_(t){var s=Math.trunc(Number(t));if(Number.isSafeInteger(s))return String(s);if((s=t.indexOf("."))!==-1&&(t=t.substring(0,s)),!(t[0]==="-"?t.length<20||t.length===20&&Number(t.substring(0,7))>-922337:t.length<19||t.length===19&&Number(t.substring(0,6))<922337))if(Wf(t),t=Qr,2147483648&(s=ws))if(D_())t=""+(BigInt(0|s)<<BigInt(32)|BigInt(t>>>0));else{const[n,o]=V_(t,s);t="-"+Pf(n,o)}else t=Pf(t,s);return t}function Cf(t){return t==null?t:typeof t=="bigint"?(w_(t)?t=Number(t):(t=BigInt.asIntN(64,t),t=w_(t)?Number(t):String(t)),t):Gf(t)?typeof t=="number"?W_(t):G_(t):void 0}function KM(t){if(t==null)return t;var s=typeof t;if(s==="bigint")return String(BigInt.asUintN(64,t));if(Gf(t)){if(s==="string")return s=Math.trunc(Number(t)),Number.isSafeInteger(s)&&s>=0?t=String(s):((s=t.indexOf("."))!==-1&&(t=t.substring(0,s)),Aw(t)||(Wf(t),t=Pf(Qr,ws))),t;if(s==="number")return(t=Math.trunc(t))>=0&&Number.isSafeInteger(t)?t:function(n){if(n<0){jc(n);const o=Pf(Qr,ws);return n=Number(o),Number.isSafeInteger(n)?n:o}return Aw(String(n))?n:(jc(n),N_(Qr,ws))}(t)}}function Z1(t){if(typeof t!="string")throw Error();return t}function Kc(t){if(t!=null&&typeof t!="string")throw Error();return t}function Wo(t){return t==null||typeof t=="string"?t:void 0}function q_(t,s,n,o){if(t!=null&&typeof t=="object"&&t.X===Zh)return t;if(!Array.isArray(t))return n?2&o?(t=s[xw])?s=t:(qa((t=new s).u),s=s[xw]=t):s=new s:s=void 0,s;let u=n=ms(t);return u===0&&(u|=32&o),u|=2&o,u!==n&&hs(t,u),new s(t)}function HM(t,s,n){if(s)e:{if(!Gf(s=t))throw __("int64");switch(typeof s){case"string":s=G_(s);break e;case"bigint":if(t=s=BigInt.asIntN(64,s),Ew(t)){if(!/^\s*(?:-?[1-9]\d*|0)?\s*$/.test(t))throw Error(String(t))}else if(jM(t)&&!Number.isSafeInteger(t))throw Error(String(t));s=Vf?BigInt(s):BM(s)?s?"1":"0":Ew(s)?s.trim()||"0":String(s);break e;default:s=W_(s)}}else s=Cf(t);return typeof(n=(t=s)==null?n?0:void 0:t)=="string"&&(s=+n,Number.isSafeInteger(s))?s:n}function eb(t){if(Dh===void 0&&(Dh=typeof Proxy=="function"?sb(Proxy):null),!Dh||!rb())return t;let s=en==null?void 0:en.get(t);return s||(Math.random()>.01?t:(function(n){if(e_===void 0){const o=new Dh([],{});e_=Array.prototype.concat.call([],o).length===1}e_&&typeof Symbol=="function"&&Symbol.isConcatSpreadable&&(n[Symbol.isConcatSpreadable]=!0)}(t),s=new Dh(t,{set:(n,o,u)=>(jf(),n[o]=u,!0)}),function(n,o){(en||(en=new Na)).set(n,o),(gf||(gf=new Na)).set(o,n)}(t,s),s))}let en,gf,Dh,Na,e_,Sn,Sf,tb,XM;function rb(){return Na===void 0&&(Na=typeof WeakMap=="function"?sb(WeakMap):null),Na}function sb(t){try{return t.toString().indexOf("[native code]")!==-1?t:null}catch{return null}}function K_(t,s,n){var v;if(rb()){if((v=Sn==null?void 0:Sn.get(s))!=null&&v.get(t)){if(n)return}else if(Math.random()>.01)return;var o=t.length;n={length:o};for(var u=0;u<Math.min(o,10);u++){if(o<=10)var h=u;else{h=o/10;const P=Math.floor(u*h);h=P+Math.floor(Math.random()*(Math.floor((u+1)*h)-P))}n[h]=t[h]}nb(t,n)?((u=(o=Sn||(Sn=new Na)).get(s))||(u=new Na,o.set(s,u)),u.set(t,n)):(jf(),Hh(t,s))}}function Af(t,s){var o;const n=(o=Sn==null?void 0:Sn.get(s))==null?void 0:o.get(t);n&&!nb(t,n)&&(jf(),Hh(t,s))}function nb(t,s){if(t.length!==s.length)return!1;for(const u in s){var n,o=Number(u);if((n=Number.isInteger(o))&&(n=t[o],o=s[o],n=!(Number.isNaN(n)?Number.isNaN(o):n===o)),n)return!1}return!0}function qf(t){if(t&&(Sn!=null&&Sn.has(t))){var s=t.u;if(s)for(let n=0;n<s.length;n++){const o=s[n];if(n===s.length-1&&Nf(o))for(const u in o){const h=o[u];Array.isArray(h)&&Af(h,t)}else Array.isArray(o)&&Af(o,t)}}}function Hh(t,s){var n;(n=Sn==null?void 0:Sn.get(s))==null||n.delete(t)}function Go(t,s,n){return t=ib(t,s[0],s[1],n?1:2),s!==tb&&n&&Rf(t,16384),t}function ib(t,s,n,o){if(o=o??0,t==null&&(t=Sf),Sf=void 0,t==null){var u=96;n?(t=[n],u|=512):t=[],s&&(u=-33521665&u|(1023&s)<<15)}else{if(!Array.isArray(t))throw Error("narr");if(2048&(u=ms(t)))throw Error("farr");if(64&u)return t;if(o===1||o===2||(u|=64),n&&(u|=512,n!==t[0]))throw Error("mid");e:{if(o=(n=t).length){const h=o-1;if(Nf(n[h])){if((s=h-(+!!(512&(u|=256))-1))>=1024)throw Error("pvtlmt");u=-33521665&u|(1023&s)<<15;break e}}if(s){if((s=Math.max(s,o-(+!!(512&u)-1)))>1024)throw Error("spvt");u=-33521665&u|(1023&s)<<15}}}return hs(t,u),t}const QM={};let YM=function(){try{return z_(new class extends Map{constructor(){super()}}),!1}catch{return!0}}();class t_{constructor(){this.g=new Map}get(s){return this.g.get(s)}set(s,n){return this.g.set(s,n),this.size=this.g.size,this}delete(s){return s=this.g.delete(s),this.size=this.g.size,s}clear(){this.g.clear(),this.size=this.g.size}has(s){return this.g.has(s)}entries(){return this.g.entries()}keys(){return this.g.keys()}values(){return this.g.values()}forEach(s,n){return this.g.forEach(s,n)}[Symbol.iterator](){return this.entries()}}const JM=YM?(Object.setPrototypeOf(t_.prototype,Map.prototype),Object.defineProperties(t_.prototype,{size:{value:0,configurable:!0,enumerable:!0,writable:!0}}),t_):class extends Map{constructor(){super()}};function Iw(t){return t}function r_(t){if(2&t.M)throw Error("Cannot mutate an immutable Map")}var Zn=class extends JM{constructor(t,s,n=Iw,o=Iw){super();let u=ms(t);u|=64,hs(t,u),this.M=u,this.T=s,this.S=n,this.Z=this.T?ZM:o;for(let h=0;h<t.length;h++){const v=t[h],P=n(v[0],!1,!0);let f=v[1];s?f===void 0&&(f=null):f=o(v[1],!1,!0,void 0,void 0,u),super.set(P,f)}}pa(t=$w){if(this.size!==0)return this.Y(t)}Y(t=$w){const s=[],n=super.entries();for(var o;!(o=n.next()).done;)(o=o.value)[0]=t(o[0]),o[1]=t(o[1]),s.push(o);return s}clear(){r_(this),super.clear()}delete(t){return r_(this),super.delete(this.S(t,!0,!1))}entries(){var t=this.oa();return new Ef(t,ex,this)}keys(){return this.Ia()}values(){var t=this.oa();return new Ef(t,Zn.prototype.get,this)}forEach(t,s){super.forEach((n,o)=>{t.call(s,this.get(o),o,this)})}set(t,s){return r_(this),(t=this.S(t,!0,!1))==null?this:s==null?(super.delete(t),this):super.set(t,this.Z(s,!0,!0,this.T,!1,this.M))}Oa(t){const s=this.S(t[0],!1,!0);t=t[1],t=this.T?t===void 0?null:t:this.Z(t,!1,!0,void 0,!1,this.M),super.set(s,t)}has(t){return super.has(this.S(t,!1,!1))}get(t){t=this.S(t,!1,!1);const s=super.get(t);if(s!==void 0){var n=this.T;return n?((n=this.Z(s,!1,!0,n,this.ta,this.M))!==s&&super.set(t,n),n):s}}oa(){return Array.from(super.keys())}Ia(){return super.keys()}[Symbol.iterator](){return this.entries()}};function ZM(t,s,n,o,u,h){return t=q_(t,o,n,h),u&&(t=Hf(t)),t}function $w(t){return t}function ex(t){return[t,this.get(t)]}let tx;function Fw(){return tx||(tx=new Zn(qa([]),void 0,void 0,void 0,QM))}function H_(t,s,n,o,u){if(t!=null){if(Array.isArray(t))t=kf(t)?void 0:u&&2&ms(t)?t:Kf(t,s,n,o!==void 0,u);else if(Nf(t)){const h={};for(let v in t)h[v]=H_(t[v],s,n,o,u);t=h}else t=s(t,o);return t}}function Kf(t,s,n,o,u){const h=o||n?ms(t):0;o=o?!!(32&h):void 0;const v=An(t);for(let P=0;P<v.length;P++)v[P]=H_(v[P],s,n,o,u);return n&&(Q1(v,t),n(h,v)),v}function rx(t){return H_(t,X_,void 0,void 0,!1)}function X_(t){return t.X===Zh?t.toJSON():t instanceof Zn?t.pa(rx):function(s){switch(typeof s){case"number":return isFinite(s)?s:String(s);case"bigint":return w_(s)?Number(s):String(s);case"boolean":return s?1:0;case"object":if(s)if(Array.isArray(s)){if(kf(s))return}else{if(Yh(s))return vw(s);if(s instanceof ao){const n=s.g;return n==null?"":typeof n=="string"?n:s.g=vw(n)}if(s instanceof Zn)return s.pa()}}return s}(t)}function b_(t,s,n=y_){if(t!=null){if(W1&&t instanceof Uint8Array)return s?t:new Uint8Array(t);if(Array.isArray(t)){var o=ms(t);return 2&o?t:(s&&(s=o===0||!!(32&o)&&!(64&o||!(16&o))),s?(hs(t,-12293&(34|o)),t):Kf(t,b_,4&o?y_:n,!0,!0))}return t.X===Zh?(n=t.u,t=2&(o=Wr(n))?t:Q_(t,n,o,!0)):t instanceof Zn&&!(2&t.M)&&(n=qa(t.Y(b_)),t=new Zn(n,t.T,t.S,t.Z)),t}}function Q_(t,s,n,o){return qf(t),t=t.constructor,Sf=s=ob(s,n,o),s=new t(s),Sf=void 0,s}function ob(t,s,n){const o=n||2&s?y_:OM,u=!!(32&s);return t=function(h,v,P){const f=An(h);var b=f.length;const x=256&v?f[b-1]:void 0;for(b+=x?-1:0,v=512&v?1:0;v<b;v++)f[v]=P(f[v]);if(x){v=f[v]={};for(const k in x)v[k]=P(x[k])}return Q1(f,h),f}(t,s,h=>b_(h,u,o)),Rf(t,32|(n?2:0)),t}function Hf(t){const s=t.u,n=Wr(s);return 2&n?Q_(t,s,n,!1):t}function ab(t,s,n,o){return!(4&s)||n!=null}function qo(t,s){return Ni(t=t.u,Wr(t),s)}function Ow(t,s,n,o){if(!((s=o+(+!!(512&s)-1))<0||s>=t.length||s>=n))return t[s]}function Ni(t,s,n,o){if(n===-1)return null;const u=s>>15&1023||536870912;if(!(n>=u)){var h=t.length;return o&&256&s&&(o=t[h-1][n])!=null?(Ow(t,s,u,n)&&Zg!=null&&((s=(t=FM??(FM={}))[Zg]||0)>=4||(t[Zg]=s+1,jf())),o):Ow(t,s,u,n)}return 256&s?t[t.length-1][n]:void 0}function Zr(t,s,n){const o=t.u;let u=Wr(o);return uo(u),is(o,u,s,n),t}function is(t,s,n,o){const u=s>>15&1023||536870912;if(n>=u){let h,v=s;if(256&s)h=t[t.length-1];else{if(o==null)return v;h=t[u+(+!!(512&s)-1)]={},v|=256}return h[n]=o,n<u&&(t[n+(+!!(512&s)-1)]=void 0),v!==s&&hs(t,v),v}return t[n+(+!!(512&s)-1)]=o,256&s&&n in(t=t[t.length-1])&&delete t[n],s}function Hc(t,s,n,o,u){var h=2&s;u=Ni(t,s,n,u),Array.isArray(u)||(u=j_);const v=!(2&o);o=!(1&o);const P=!!(32&s);let f=ms(u);return f!==0||!P||h||v?1&f||(f|=1,hs(u,f)):(f|=33,hs(u,f)),h?(t=!1,2&f||(qa(u),t=!!(4&f)),(o||t)&&Object.freeze(u)):(h=!!(2&f)||!!(2048&f),o&&h?(u=An(u),h=1,P&&!v&&(h|=32),hs(u,h),is(t,s,n,u)):v&&32&f&&!h&&Tf(u,32)),u}function _f(t,s){t=t.u;let n=Wr(t);const o=Ni(t,n,s),u=Qo(o);return u!=null&&u!==o&&is(t,n,s,u),u}function lb(t){t=t.u;let s=Wr(t);const n=Ni(t,s,1),o=B_(n,!0,!!(34&s));return o!=null&&o!==n&&is(t,s,1,o),o}function Ba(){return zM===void 0?2:5}function Ra(t,s,n,o,u,h){const v=t.u;let P=Wr(v);o=2&P?1:o,h=!!h,u=cb(v,P,s,u);var f=ms(u),b=u;if(Af(b,t),o!==2&&o!==1||Hh(b,t),ab(t,f,void 0)){4&f&&(u=An(u),f=Ga(f,P),P=is(v,P,s,u));let k=b=0;for(;b<u.length;b++){const C=n(u[b]);C!=null&&(u[k++]=C)}k<b&&(u.length=k),f=-4097&(20|(f=ub(f,P))),hs(u,f&=-8193),2&f&&Object.freeze(u)}let x;return o===1||o===4&&32&f?io(f)||(t=f,(f|=2)!==t&&hs(u,f),Object.freeze(u)):(n=o===5&&(!!(32&f)||io(f)||!!(en!=null&&en.get(u))),(o===2||n)&&io(f)&&(u=An(u),f=Bc(f=Ga(f,P),P,h),hs(u,f),P=is(v,P,s,u)),io(f)||(s=f,(f=Bc(f,P,h))!==s&&hs(u,f)),n?(x=eb(u),K_(u,t,!0)):o!==2||h||(en==null||en.delete(u))),x||u}function cb(t,s,n,o){return t=Ni(t,s,n,o),Array.isArray(t)?t:j_}function ub(t,s){return t===0&&(t=Ga(t,s)),1|t}function io(t){return!!(2&t)&&!!(4&t)||!!(2048&t)}function db(t){t=An(t);for(let s=0;s<t.length;s++){const n=t[s]=An(t[s]);Array.isArray(n[1])&&(n[1]=qa(n[1]))}return t}function v_(t,s,n,o){t=t.u;let u=Wr(t);uo(u),is(t,u,s,(o==="0"?Number(n)===0:n===o)?void 0:n)}function s_(t,s){var n=Zb;return J_(Y_(t=t.u),t,Wr(t),n)===s?s:-1}function Y_(t){if(Gc)return t[Lh]??(t[Lh]=new Map);if(Lh in t)return t[Lh];const s=new Map;return Object.defineProperty(t,Lh,{value:s}),s}function pb(t,s,n,o){const u=Y_(t),h=J_(u,t,s,n);return h!==o&&(h&&(s=is(t,s,h)),u.set(n,o)),s}function J_(t,s,n,o){let u=t.get(o);if(u!=null)return u;u=0;for(let h=0;h<o.length;h++){const v=o[h];Ni(s,n,v)!=null&&(u!==0&&(n=is(s,n,u)),u=v)}return t.set(o,u),u}function Z_(t,s,n,o){let u,h=Wr(t);if((o=Ni(t,h,n,o))!=null&&o.X===Zh)return(s=Hf(o))!==o&&is(t,h,n,s),s.u;if(Array.isArray(o)){const v=ms(o);u=2&v?Go(ob(o,v,!1),s,!0):64&v?o:Go(u,s,!0)}else u=Go(void 0,s,!0);return u!==o&&is(t,h,n,u),u}function hb(t,s,n,o){t=t.u;let u=Wr(t);return(s=q_(o=Ni(t,u,n,o),s,!1,u))!==o&&s!=null&&is(t,u,n,s),s}function Fr(t,s,n,o=!1){if((s=hb(t,s,n,o))==null)return s;if(t=t.u,!(2&(o=Wr(t)))){const u=Hf(s);u!==s&&is(t,o,n,s=u)}return s}function mb(t,s,n,o,u,h,v){const P=t.u;var f=!!(2&s);u=f?1:u,h=!!h,v&&(v=!f),f=cb(P,s,o);var b=ms(f),x=f;if(Af(x,t),u!==2&&u!==1||Hh(x,t),!(x=!!(4&b))){var k=f,C=s;const X=!!(2&(b=ub(b,s)));X&&(C|=2);let oe=!X,re=!0,V=0,H=0;for(;V<k.length;V++){const te=q_(k[V],n,!1,C);if(te instanceof n){if(!X){const G=!!(2&ms(te.u));oe&&(oe=!G),re&&(re=G)}k[H++]=te}}H<V&&(k.length=H),b|=4,b=re?16|b:-17&b,hs(k,b=oe?8|b:-9&b),X&&Object.freeze(k)}if(v&&!(8&b||!f.length&&(u===1||u===4&&32&b))){for(io(b)?(f=An(f),b=Ga(b,s),s=is(P,s,o,f)):Hh(f,t),n=f,v=b,k=0;k<n.length;k++)(b=n[k])!==(C=Hf(b))&&(n[k]=C);v|=8,v=n.length?-17&v:16|v,hs(n,v),b=v}let N;return u===1||u===4&&32&b?io(b)||(t=b,(b|=!f.length||16&b&&(!x||32&b)?2:2048)!==t&&hs(f,b),Object.freeze(f)):(x=u===5&&(!!(32&b)||io(b)||!!(en!=null&&en.get(f))),(u===2||x)&&io(b)&&(f=An(f),b=Bc(b=Ga(b,s),s,h),hs(f,b),s=is(P,s,o,f)),io(b)||(o=b,(b=Bc(b,s,h))!==o&&hs(f,b)),x?(N=eb(f),K_(f,t,!0)):u!==2||h||(en==null||en.delete(f))),N||f}function co(t,s,n){const o=Wr(t.u);return mb(t,o,s,n,Ba(),!1,!(2&o))}function Xt(t,s,n,o){return o==null&&(o=void 0),Zr(t,n,o)}function Vh(t,s,n,o){o==null&&(o=void 0);e:{t=t.u;let u=Wr(t);if(uo(u),o==null){const h=Y_(t);if(J_(h,t,u,n)!==s)break e;h.set(n,0)}else u=pb(t,u,n,s);is(t,u,s,o)}}function Ga(t,s){return-2049&(t=32|(2&s?2|t:-3&t))}function Bc(t,s,n){return 32&s&&n||(t&=-33),t}function If(t,s,n,o){const u=Wr(t.u);uo(u),t=mb(t,u,n,s,2,!0),o=o??new n,t.push(o),2&ms(o.u)?Tf(t,8):Tf(t,16)}function gi(t,s){return t??s}function Jn(t,s){return qc(qo(t,s))}function xs(t,s){return gi(_f(t,s),0)}function Bi(t,s){return gi(Wo(qo(t,s)),"")}function Xh(t,s,n){if(n!=null&&typeof n!="boolean")throw t=typeof n,Error(`Expected boolean but got ${t!="object"?t:n?Array.isArray(n)?"array":t:"null"}: ${n}`);Zr(t,s,n)}function Ri(t,s,n){if(n!=null){if(typeof n!="number"||!Number.isFinite(n))throw __("int32");n|=0}Zr(t,s,n)}function Rt(t,s,n){if(n!=null&&typeof n!="number")throw Error(`Value of float/double field must be a number, found ${typeof n}: ${n}`);Zr(t,s,n)}function $f(t,s,n){{const P=t.u;let f=Wr(P);if(uo(f),n==null)is(P,f,s);else{n=(gf==null?void 0:gf.get(n))||n;var o,u=ms(n),h=u,v=!!(2&u)||Object.isFrozen(n);if((o=!v)&&((o=DM===void 0)||(o=!!PM&&LM!==void 0)),ab(t,u)){u=21,v&&(n=An(n),h=0,u=Bc(u=Ga(u,f),f,!0));for(let b=0;b<n.length;b++)n[b]=Z1(n[b])}o?(n=An(n),h=0,u=Bc(u=Ga(u,f),f,!0)):v||K_(n,t),u!==h&&hs(n,u),is(P,f,s,n)}}}function Xf(t,s,n){uo(Wr(t.u)),Ra(t,s,Wo,2,void 0,!0).push(Z1(n))}function fb(t,s){return Error(`Invalid wire type: ${t} (at position ${s})`)}function ey(){return Error("Failed to read varint, encoding is invalid.")}function gb(t,s){return Error(`Tried to read past the end of the data ${s} > ${t}`)}function ty(t){if(typeof t=="string")return{buffer:q1(t),O:!1};if(Array.isArray(t))return{buffer:new Uint8Array(t),O:!1};if(t.constructor===Uint8Array)return{buffer:t,O:!1};if(t.constructor===ArrayBuffer)return{buffer:new Uint8Array(t),O:!1};if(t.constructor===ao)return{buffer:L_(t)||new Uint8Array(0),O:!0};if(t instanceof Uint8Array)return{buffer:new Uint8Array(t.buffer,t.byteOffset,t.byteLength),O:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function ry(t,s){let n,o=0,u=0,h=0;const v=t.h;let P=t.g;do n=v[P++],o|=(127&n)<<h,h+=7;while(h<32&&128&n);for(h>32&&(u|=(127&n)>>4),h=3;h<32&&128&n;h+=7)n=v[P++],u|=(127&n)<<h;if(Ua(t,P),n<128)return s(o>>>0,u>>>0);throw ey()}function sy(t){let s=0,n=t.g;const o=n+10,u=t.h;for(;n<o;){const h=u[n++];if(s|=h,(128&h)==0)return Ua(t,n),!!(127&s)}throw ey()}function Ko(t){const s=t.h;let n=t.g,o=s[n++],u=127&o;if(128&o&&(o=s[n++],u|=(127&o)<<7,128&o&&(o=s[n++],u|=(127&o)<<14,128&o&&(o=s[n++],u|=(127&o)<<21,128&o&&(o=s[n++],u|=o<<28,128&o&&128&s[n++]&&128&s[n++]&&128&s[n++]&&128&s[n++]&&128&s[n++])))))throw ey();return Ua(t,n),u}function Ho(t){return Ko(t)>>>0}function M_(t){var s=t.h;const n=t.g,o=s[n],u=s[n+1],h=s[n+2];return s=s[n+3],Ua(t,t.g+4),(o<<0|u<<8|h<<16|s<<24)>>>0}function x_(t){var s=M_(t);t=2*(s>>31)+1;const n=s>>>23&255;return s&=8388607,n==255?s?NaN:t*(1/0):n==0?1401298464324817e-60*t*s:t*Math.pow(2,n-150)*(s+8388608)}function sx(t){return Ko(t)}function n_(t,s,{ca:n=!1}={}){t.ca=n,s&&(s=ty(s),t.h=s.buffer,t.m=s.O,t.j=0,t.l=t.h.length,t.g=t.j)}function Ua(t,s){if(t.g=s,s>t.l)throw gb(t.l,s)}function _b(t,s){if(s<0)throw Error(`Tried to read a negative byte length: ${s}`);const n=t.g,o=n+s;if(o>t.l)throw gb(s,t.l-n);return t.g=o,n}function yb(t,s){if(s==0)return Wa();var n=_b(t,s);return t.ca&&t.m?n=t.h.subarray(n,n+s):(t=t.h,n=n===(s=n+s)?new Uint8Array(0):WM?t.slice(n,s):new Uint8Array(t.subarray(n,s))),n.length==0?Wa():new ao(n,Dc)}Zn.prototype.toJSON=void 0,Zn.prototype.Ja=X1;var zw=[];function wb(t){var s=t.g;if(s.g==s.l)return!1;t.l=t.g.g;var n=Ho(t.g);if(s=n>>>3,!((n&=7)>=0&&n<=5))throw fb(n,t.l);if(s<1)throw Error(`Invalid field number: ${s} (at position ${t.l})`);return t.m=s,t.h=n,!0}function yf(t){switch(t.h){case 0:t.h!=0?yf(t):sy(t.g);break;case 1:Ua(t=t.g,t.g+8);break;case 2:if(t.h!=2)yf(t);else{var s=Ho(t.g);Ua(t=t.g,t.g+s)}break;case 5:Ua(t=t.g,t.g+4);break;case 3:for(s=t.m;;){if(!wb(t))throw Error("Unmatched start-group tag: stream EOF");if(t.h==4){if(t.m!=s)throw Error("Unmatched end-group tag");break}yf(t)}break;default:throw fb(t.h,t.l)}}function em(t,s,n){const o=t.g.l,u=Ho(t.g),h=t.g.g+u;let v=h-o;if(v<=0&&(t.g.l=h,n(s,t,void 0,void 0,void 0),v=h-t.g.g),v)throw Error(`Message parsing ended unexpectedly. Expected to read ${u} bytes, instead read ${u-v} bytes, either the data ended unexpectedly or the message misreported its own length`);return t.g.g=h,t.g.l=o,s}function ny(t){var s=Ho(t.g),n=_b(t=t.g,s);if(t=t.h,TM){var o,u=t;(o=Yg)||(o=Yg=new TextDecoder("utf-8",{fatal:!0})),s=n+s,u=n===0&&s===u.length?u:u.subarray(n,s);try{var h=o.decode(u)}catch(P){if(df===void 0){try{o.decode(new Uint8Array([128]))}catch{}try{o.decode(new Uint8Array([97])),df=!0}catch{df=!1}}throw!df&&(Yg=void 0),P}}else{s=(h=n)+s,n=[];let P,f=null;for(;h<s;){var v=t[h++];v<128?n.push(v):v<224?h>=s?Da():(P=t[h++],v<194||(192&P)!=128?(h--,Da()):n.push((31&v)<<6|63&P)):v<240?h>=s-1?Da():(P=t[h++],(192&P)!=128||v===224&&P<160||v===237&&P>=160||(192&(o=t[h++]))!=128?(h--,Da()):n.push((15&v)<<12|(63&P)<<6|63&o)):v<=244?h>=s-2?Da():(P=t[h++],(192&P)!=128||P-144+(v<<28)>>30||(192&(o=t[h++]))!=128||(192&(u=t[h++]))!=128?(h--,Da()):(v=(7&v)<<18|(63&P)<<12|(63&o)<<6|63&u,v-=65536,n.push(55296+(v>>10&1023),56320+(1023&v)))):Da(),n.length>=8192&&(f=ww(f,n),n.length=0)}h=ww(f,n)}return h}function bb(t){const s=Ho(t.g);return yb(t.g,s)}function Qf(t,s,n){var o=Ho(t.g);for(o=t.g.g+o;t.g.g<o;)n.push(s(t.g))}var pf=[];let Ff;function yi(t,s,n){s.g?s.m(t,s.g,s.h,n,!0):s.m(t,s.h,n,!0)}var Lt=class{constructor(t,s){this.u=ib(t,s)}toJSON(){return vb(this)}l(){var t=jx;return t.g?t.l(this,t.g,t.h,!0):t.l(this,t.h,t.defaultValue,!0)}clone(){const t=this.u;return Q_(this,t,Wr(t),!1)}O(){return!!(2&ms(this.u))}};function vb(t){qf(t),t=Ff?t.u:Kf(t.u,X_,void 0,void 0,!1);{var s=!Ff;let b=t.length;if(b){var n=t[b-1],o=Nf(n);o?b--:n=void 0;var u=t;if(o){e:{var h,v=n,P=!1;if(v)for(let x in v)isNaN(+x)?(h??(h={}))[x]=v[x]:(o=v[x],Array.isArray(o)&&(kf(o)||Tw(o)&&o.size===0)&&(o=null),o==null&&(P=!0),o!=null&&((h??(h={}))[x]=o));if(P||(h=v),h)for(let x in h){P=h;break e}P=null}v=P==null?n!=null:P!==n}for(;b>0&&((h=u[b-1])==null||kf(h)||Tw(h)&&h.size===0);b--)var f=!0;(u!==t||v||f)&&(s?(f||v||P)&&(u.length=b):u=Array.prototype.slice.call(u,0,b),P&&u.push(P)),f=u}else f=t}return f}function Lw(t){return t?/^\d+$/.test(t)?(Wf(t),new T_(Qr,ws)):null:nx||(nx=new T_(0,0))}Lt.prototype.X=Zh,Lt.prototype.toString=function(){try{return Ff=!0,vb(this).toString()}finally{Ff=!1}};var T_=class{constructor(t,s){this.h=t>>>0,this.g=s>>>0}};let nx;function Dw(t){return t?/^-?\d+$/.test(t)?(Wf(t),new k_(Qr,ws)):null:ix||(ix=new k_(0,0))}var k_=class{constructor(t,s){this.h=t>>>0,this.g=s>>>0}};let ix;function zc(t,s,n){for(;n>0||s>127;)t.g.push(127&s|128),s=(s>>>7|n<<25)>>>0,n>>>=7;t.g.push(s)}function tm(t,s){for(;s>127;)t.g.push(127&s|128),s>>>=7;t.g.push(s)}function Yf(t,s){if(s>=0)tm(t,s);else{for(let n=0;n<9;n++)t.g.push(127&s|128),s>>=7;t.g.push(1)}}function Qh(t,s){t.g.push(s>>>0&255),t.g.push(s>>>8&255),t.g.push(s>>>16&255),t.g.push(s>>>24&255)}function Rc(t,s){s.length!==0&&(t.l.push(s),t.h+=s.length)}function ei(t,s,n){tm(t.g,8*s+n)}function iy(t,s){return ei(t,s,2),s=t.g.end(),Rc(t,s),s.push(t.h),s}function oy(t,s){var n=s.pop();for(n=t.h+t.g.length()-n;n>127;)s.push(127&n|128),n>>>=7,t.h++;s.push(n),t.h++}function Jf(t,s,n){ei(t,s,2),tm(t.g,n.length),Rc(t,t.g.end()),Rc(t,n)}function Of(t,s,n,o){n!=null&&(s=iy(t,s),o(n,t),oy(t,s))}function wi(){const t=class{constructor(){throw Error()}};return Object.setPrototypeOf(t,t.prototype),t}var ay=wi(),Mb=wi(),ly=wi(),cy=wi(),xb=wi(),uy=wi(),Tb=wi(),kb=wi(),Xc=class{constructor(t,s,n){this.g=t,this.h=s,t=ay,this.l=!!t&&n===t||!1}};function Zf(t,s){return new Xc(t,s,ay)}function Eb(t,s,n,o,u){Of(t,n,Ab(s,o),u)}const ox=Zf(function(t,s,n,o,u){return t.h===2&&(em(t,Z_(s,o,n),u),!0)},Eb),ax=Zf(function(t,s,n,o,u){return t.h===2&&(em(t,Z_(s,o,n,!0),u),!0)},Eb);var eg=Symbol(),dy=Symbol(),jw=Symbol(),Bw=Symbol();let Pb,Cb;function Ka(t,s,n,o){var u=o[t];if(u)return u;(u={}).W=function(k){switch(typeof k){case"boolean":return tb||(tb=[0,void 0,!0]);case"number":return k>0?void 0:k===0?XM||(XM=[0,void 0]):[-k,void 0];case"string":return[0,k];case"object":return k}}(o[0]);var h=o[1];let v=1;h&&h.constructor===Object&&(u.ia=h,typeof(h=o[++v])=="function"&&(u.na=!0,Pb??(Pb=h),Cb??(Cb=o[v+1]),h=o[v+=2]));const P={};for(;h&&Array.isArray(h)&&h.length&&typeof h[0]=="number"&&h[0]>0;){for(var f=0;f<h.length;f++)P[h[f]]=h;h=o[++v]}for(f=1;h!==void 0;){let k;typeof h=="number"&&(f+=h,h=o[++v]);var b=void 0;if(h instanceof Xc?k=h:(k=ox,v--),k==null?void 0:k.l){h=o[++v],b=o;var x=v;typeof h=="function"&&(h=h(),b[x]=h),b=h}for(x=f+1,typeof(h=o[++v])=="number"&&h<0&&(x-=h,h=o[++v]);f<x;f++){const C=P[f];b?n(u,f,k,b,C):s(u,f,k,C)}}return o[t]=u}function Sb(t){return Array.isArray(t)?t[0]instanceof Xc?t:[ax,t]:[t,void 0]}function Ab(t,s){return t instanceof Lt?(qf(t),t.u):Array.isArray(t)?Go(t,s,!1):void 0}function py(t,s,n,o){const u=n.g;t[s]=o?(h,v,P)=>u(h,v,P,o):u}function hy(t,s,n,o,u){const h=n.g;let v,P;t[s]=(f,b,x)=>h(f,b,x,P||(P=Ka(dy,py,hy,o).W),v||(v=my(o)),u)}function my(t){let s=t[jw];if(s!=null)return s;const n=Ka(dy,py,hy,t);return s=n.na?(o,u)=>Pb(o,u,n):(o,u)=>{const h=Wr(o);for(;wb(u)&&u.h!=4;){var v=u.m,P=n[v];if(P==null){var f=n.ia;f&&(f=f[v])&&(f=lx(f))!=null&&(P=n[v]=f)}P!=null&&P(u,o,v)||(v=(P=u).l,yf(P),P.ha?P=void 0:(f=P.g.g-v,P.g.g=v,P=yb(P.g,f)),v=o,P&&(Vo||(Vo=Symbol()),(f=v[Vo])?f.push(P):v[Vo]=[P]))}return 16384&h&&qa(o),!0},t[jw]=s}function lx(t){const s=(t=Sb(t))[0].g;if(t=t[1]){const n=my(t),o=Ka(dy,py,hy,t).W;return(u,h,v)=>s(u,h,v,o,n)}return s}function tg(t,s,n){t[s]=n.h}function rg(t,s,n,o){let u,h;const v=n.h;t[s]=(P,f,b)=>v(P,f,b,h||(h=Ka(eg,tg,rg,o).W),u||(u=Ib(o)))}function Ib(t){let s=t[Bw];if(!s){const n=Ka(eg,tg,rg,t);s=(o,u)=>$b(o,u,n),t[Bw]=s}return s}function $b(t,s,n){for(var o=ms(t),u=+!!(512&o)-1,h=t.length,v=512&o?1:0,P=h+(256&o?-1:0);v<P;v++){const f=t[v];if(f==null)continue;const b=v-u,x=Rw(n,b);x&&x(s,f,b)}if(256&o){o=t[h-1];for(const f in o)u=+f,Number.isNaN(u)||(h=o[u])!=null&&(P=Rw(n,u))&&P(s,h,u)}if(t=Vo?t[Vo]:void 0)for(Rc(s,s.g.end()),n=0;n<t.length;n++)Rc(s,L_(t[n])||new Uint8Array(0))}function Rw(t,s){var n=t[s];if(n)return n;if((n=t.ia)&&(n=n[s])){var o=(n=Sb(n))[0].h;if(n=n[1]){const u=Ib(n),h=Ka(eg,tg,rg,n).W;n=t.na?Cb(h,u):(v,P,f)=>o(v,P,f,h,u)}else n=o;return t[s]=n}}function Qc(t,s){if(Array.isArray(s)){var n=ms(s);if(4&n)return s;for(var o=0,u=0;o<s.length;o++){const h=t(s[o]);h!=null&&(s[u++]=h)}return u<o&&(s.length=u),hs(s,-12289&(5|n)),2&n&&Object.freeze(s),s}}function wn(t,s,n){return new Xc(t,s,n)}function Yc(t,s,n){return new Xc(t,s,n)}function bn(t,s,n){is(t,Wr(t),s,n)}var cx=Zf(function(t,s,n,o,u){return t.h===2&&(t=em(t,Go([void 0,void 0],o,!0),u),uo(o=Wr(s)),(u=Ni(s,o,n))instanceof Zn?2&u.M?((u=u.Y()).push(t),is(s,o,n,u)):u.Oa(t):Array.isArray(u)?(2&ms(u)&&is(s,o,n,u=db(u)),u.push(t)):is(s,o,n,[t]),!0)},function(t,s,n,o,u){if(s instanceof Zn)s.forEach((h,v)=>{Of(t,n,Go([v,h],o,!1),u)});else if(Array.isArray(s))for(let h=0;h<s.length;h++){const v=s[h];Array.isArray(v)&&Of(t,n,Go(v,o,!1),u)}});function Fb(t,s,n){if(s=function(o){if(o==null)return o;const u=typeof o;if(u==="bigint")return String(BigInt.asIntN(64,o));if(Gf(o)){if(u==="string")return G_(o);if(u==="number")return W_(o)}}(s),s!=null&&(typeof s=="string"&&Dw(s),s!=null))switch(ei(t,n,0),typeof s){case"number":t=t.g,jc(s),zc(t,Qr,ws);break;case"bigint":n=BigInt.asUintN(64,s),n=new k_(Number(n&BigInt(4294967295)),Number(n>>BigInt(32))),zc(t.g,n.h,n.g);break;default:n=Dw(s),zc(t.g,n.h,n.g)}}function Ob(t,s,n){(s=qc(s))!=null&&s!=null&&(ei(t,n,0),Yf(t.g,s))}function zb(t,s,n){(s=J1(s))!=null&&(ei(t,n,0),t.g.g.push(s?1:0))}function Lb(t,s,n){(s=Wo(s))!=null&&Jf(t,n,R1(s))}function Db(t,s,n,o,u){Of(t,n,Ab(s,o),u)}function jb(t,s,n){(s=s==null||typeof s=="string"||Yh(s)||s instanceof ao?s:void 0)!=null&&Jf(t,n,ty(s).buffer)}function Bb(t,s,n){return(t.h===5||t.h===2)&&(s=Hc(s,Wr(s),n,2,!1),t.h==2?Qf(t,x_,s):s.push(x_(t.g)),!0)}var no=wn(function(t,s,n){if(t.h!==1)return!1;var o=t.g;t=M_(o);const u=M_(o);o=2*(u>>31)+1;const h=u>>>20&2047;return t=4294967296*(1048575&u)+t,bn(s,n,h==2047?t?NaN:o*(1/0):h==0?5e-324*o*t:o*Math.pow(2,h-1075)*(t+4503599627370496)),!0},function(t,s,n){(s=Qo(s))!=null&&(ei(t,n,1),t=t.g,(n=Y1||(Y1=new DataView(new ArrayBuffer(8)))).setFloat64(0,+s,!0),Qr=n.getUint32(0,!0),ws=n.getUint32(4,!0),Qh(t,Qr),Qh(t,ws))},wi()),js=wn(function(t,s,n){return t.h===5&&(bn(s,n,x_(t.g)),!0)},function(t,s,n){(s=Qo(s))!=null&&(ei(t,n,5),t=t.g,R_(s),Qh(t,Qr))},uy),ux=Yc(Bb,function(t,s,n){if((s=Qc(Qo,s))!=null)for(let v=0;v<s.length;v++){var o=t,u=n,h=s[v];h!=null&&(ei(o,u,5),o=o.g,R_(h),Qh(o,Qr))}},uy),fy=Yc(Bb,function(t,s,n){if((s=Qc(Qo,s))!=null&&s.length){ei(t,n,2),tm(t.g,4*s.length);for(let o=0;o<s.length;o++)n=t.g,R_(s[o]),Qh(n,Qr)}},uy),Xo=wn(function(t,s,n){return t.h===0&&(bn(s,n,ry(t.g,U_)),!0)},Fb,xb),i_=wn(function(t,s,n){return t.h===0&&(bn(s,n,(t=ry(t.g,U_))===0?void 0:t),!0)},Fb,xb),dx=wn(function(t,s,n){return t.h===0&&(bn(s,n,ry(t.g,N_)),!0)},function(t,s,n){if((s=KM(s))!=null&&(typeof s=="string"&&Lw(s),s!=null))switch(ei(t,n,0),typeof s){case"number":t=t.g,jc(s),zc(t,Qr,ws);break;case"bigint":n=BigInt.asUintN(64,s),n=new T_(Number(n&BigInt(4294967295)),Number(n>>BigInt(32))),zc(t.g,n.h,n.g);break;default:n=Lw(s),zc(t.g,n.h,n.g)}},wi()),bs=wn(function(t,s,n){return t.h===0&&(bn(s,n,Ko(t.g)),!0)},Ob,cy),sg=Yc(function(t,s,n){return(t.h===0||t.h===2)&&(s=Hc(s,Wr(s),n,2,!1),t.h==2?Qf(t,Ko,s):s.push(Ko(t.g)),!0)},function(t,s,n){if((s=Qc(qc,s))!=null&&s.length){n=iy(t,n);for(let o=0;o<s.length;o++)Yf(t.g,s[o]);oy(t,n)}},cy),Oc=wn(function(t,s,n){return t.h===0&&(bn(s,n,(t=Ko(t.g))===0?void 0:t),!0)},Ob,cy),ps=wn(function(t,s,n){return t.h===0&&(bn(s,n,sy(t.g)),!0)},zb,Mb),Wh=wn(function(t,s,n){return t.h===0&&(bn(s,n,(t=sy(t.g))===!1?void 0:t),!0)},zb,Mb),Zs=Yc(function(t,s,n){if(t.h!==2)return!1;t=ny(t);const o=Wr(s);return uo(o),Hc(s,o,n,2).push(t),!0},function(t,s,n){if((s=Qc(Wo,s))!=null)for(let v=0;v<s.length;v++){var o=t,u=n,h=s[v];h!=null&&Jf(o,u,R1(h))}},ly),Uo=wn(function(t,s,n){return t.h===2&&(bn(s,n,(t=ny(t))===""?void 0:t),!0)},Lb,ly),Vr=wn(function(t,s,n){return t.h===2&&(bn(s,n,ny(t)),!0)},Lb,ly),Ds=function(t,s,n=ay){return new Xc(t,s,n)}(function(t,s,n,o,u){if(t.h!==2)return!1;o=Go(void 0,o,!0);let h=Wr(s);uo(h);let v=Hc(s,h,n,3);return h=Wr(s),4&ms(v)&&(v=An(v),hs(v,-2079&(1|ms(v))),is(s,h,n,v)),v.push(o),em(t,o,u),!0},function(t,s,n,o,u){if(Array.isArray(s))for(let h=0;h<s.length;h++)Db(t,s[h],n,o,u)}),Kr=Zf(function(t,s,n,o,u,h){return t.h===2&&(pb(s,ms(s),h,n),em(t,s=Z_(s,o,n),u),!0)},Db),Rb=wn(function(t,s,n){return t.h===2&&(bn(s,n,bb(t)),!0)},jb,Tb),px=Yc(function(t,s,n){return(t.h===0||t.h===2)&&(s=Hc(s,Wr(s),n,2,!1),t.h==2?Qf(t,Ho,s):s.push(Ho(t.g)),!0)},function(t,s,n){if((s=Qc(qM,s))!=null)for(let v=0;v<s.length;v++){var o=t,u=n,h=s[v];h!=null&&(ei(o,u,0),tm(o.g,h))}},wi()),_i=wn(function(t,s,n){return t.h===0&&(bn(s,n,Ko(t.g)),!0)},function(t,s,n){(s=qc(s))!=null&&(s=parseInt(s,10),ei(t,n,0),Yf(t.g,s))},kb);class hx{constructor(s,n){this.h=s,this.g=n,this.l=Fr,this.m=Xt,this.defaultValue=void 0}}function bi(t,s){return new hx(t,s)}function Yo(t,s){return(n,o)=>{if(pf.length){const h=pf.pop();h.o(o),n_(h.g,n,o),n=h}else n=new class{constructor(h,v){if(zw.length){const P=zw.pop();n_(P,h,v),h=P}else h=new class{constructor(P,f){this.h=null,this.m=!1,this.g=this.l=this.j=0,n_(this,P,f)}clear(){this.h=null,this.m=!1,this.g=this.l=this.j=0,this.ca=!1}}(h,v);this.g=h,this.l=this.g.g,this.h=this.m=-1,this.o(v)}o({ha:h=!1}={}){this.ha=h}}(n,o);try{const h=new t,v=h.u;my(s)(v,n);var u=h}finally{n.g.clear(),n.m=-1,n.h=-1,pf.length<100&&pf.push(n)}return u}}function ng(t){return function(){qf(this);const s=new class{constructor(){this.l=[],this.h=0,this.g=new class{constructor(){this.g=[]}length(){return this.g.length}end(){const v=this.g;return this.g=[],v}}}};$b(this.u,s,Ka(eg,tg,rg,t)),Rc(s,s.g.end());const n=new Uint8Array(s.h),o=s.l,u=o.length;let h=0;for(let v=0;v<u;v++){const P=o[v];n.set(P,h),h+=P.length}return s.l=[n],n}}var Nw=class extends Lt{constructor(t){super(t)}},Uw=[0,Uo,wn(function(t,s,n){return t.h===2&&(bn(s,n,(t=bb(t))===Wa()?void 0:t),!0)},function(t,s,n){if(s!=null){if(s instanceof Lt){const o=s.Ra;return void(o&&(s=o(s),s!=null&&Jf(t,n,ty(s).buffer)))}if(Array.isArray(s))return}jb(t,s,n)},Tb)];let o_,Vw=globalThis.trustedTypes;function Ww(t){o_===void 0&&(o_=function(){let n=null;if(!Vw)return n;try{const o=u=>u;n=Vw.createPolicy("goog#html",{createHTML:o,createScript:o,createScriptURL:o})}catch{}return n}());var s=o_;return new class{constructor(n){this.g=n}toString(){return this.g+""}}(s?s.createScriptURL(t):t)}function mx(t,...s){if(s.length===0)return Ww(t[0]);let n=t[0];for(let o=0;o<s.length;o++)n+=encodeURIComponent(s[o])+t[o+1];return Ww(n)}var Nb=[0,bs,_i,ps,-1,sg,_i,-1],fx=class extends Lt{constructor(){super()}},Ub=[0,ps,Vr,ps,_i,-1,Yc(function(t,s,n){return(t.h===0||t.h===2)&&(s=Hc(s,Wr(s),n,2,!1),t.h==2?Qf(t,sx,s):s.push(Ko(t.g)),!0)},function(t,s,n){if((s=Qc(qc,s))!=null&&s.length){n=iy(t,n);for(let o=0;o<s.length;o++)Yf(t.g,s[o]);oy(t,n)}},kb),Vr,-1,[0,ps,-1],_i,ps,-1],Vb=[0,Vr,-2],Gw=class extends Lt{constructor(){super()}},Wb=[0],Gb=[0,bs,ps,1,ps,-3],In=class extends Lt{constructor(t){super(t,2)}},As={};As[336783863]=[0,Vr,ps,-1,bs,[0,[1,2,3,4,5,6,7],Kr,Wb,Kr,Ub,Kr,Vb,Kr,Gb,Kr,Nb,Kr,[0,Vr,-2],Kr,[0,Vr,_i]],[0,Vr],ps,[0,[1,3],[2,4],Kr,[0,sg],-1,Kr,[0,Zs],-1,Ds,[0,Vr,-1]],Vr];var qw=[0,i_,-1,Wh,-3,i_,sg,Uo,Oc,i_,-1,Wh,Oc,Wh,-2,Uo];function $n(t,s){v_(t,2,Kc(s),"")}function es(t,s){Xf(t,3,s)}function Er(t,s){Xf(t,4,s)}var on=class extends Lt{constructor(t){super(t,500)}o(t){return Xt(this,0,7,t)}},Gh=[-1,{}],Kw=[0,Vr,1,Gh],Hw=[0,Vr,Zs,Gh];function Fn(t,s){If(t,1,on,s)}function rs(t,s){Xf(t,10,s)}function Lr(t,s){Xf(t,15,s)}var vn=class extends Lt{constructor(t){super(t,500)}o(t){return Xt(this,0,1001,t)}},qb=[-500,Ds,[-500,Uo,-1,Zs,-3,[-2,As,ps],Ds,Uw,Oc,-1,Kw,Hw,Ds,[0,Uo,Wh],Uo,qw,Oc,Zs,987,Zs],4,Ds,[-500,Vr,-1,[-1,{}],998,Vr],Ds,[-500,Vr,Zs,-1,[-2,{},ps],997,Zs,-1],Oc,Ds,[-500,Vr,Zs,Gh,998,Zs],Zs,Oc,Kw,Hw,Ds,[0,Uo,-1,Gh],Zs,-2,qw,Uo,-1,Wh,979,Gh,Ds,Uw];vn.prototype.g=ng(qb);var gx=Yo(vn,qb),_x=class extends Lt{constructor(t){super(t)}},Kb=class extends Lt{constructor(t){super(t)}g(){return co(this,_x,1)}},Hb=[0,Ds,[0,bs,js,Vr,-1]],ig=Yo(Kb,Hb),yx=class extends Lt{constructor(t){super(t)}},wx=class extends Lt{constructor(t){super(t)}},a_=class extends Lt{constructor(t){super(t)}h(){return Fr(this,yx,2)}g(){return co(this,wx,5)}},Xb=Yo(class extends Lt{constructor(t){super(t)}},[0,Zs,sg,fy,[0,_i,[0,bs,-3],[0,js,-3],[0,bs,-1,[0,Ds,[0,bs,-2]]],Ds,[0,js,-1,Vr,js]],Vr,-1,Xo,Ds,[0,bs,js],Zs,Xo]),Qb=class extends Lt{constructor(t){super(t)}},Lc=Yo(class extends Lt{constructor(t){super(t)}},[0,Ds,[0,js,-4]]),Yb=class extends Lt{constructor(t){super(t)}},rm=Yo(class extends Lt{constructor(t){super(t)}},[0,Ds,[0,js,-4]]),bx=class extends Lt{constructor(t){super(t)}},vx=[0,bs,-1,fy,_i],Jb=class extends Lt{constructor(){super()}};Jb.prototype.g=ng([0,js,-4,Xo]);var Mx=class extends Lt{constructor(t){super(t)}},xx=Yo(class extends Lt{constructor(t){super(t)}},[0,Ds,[0,1,bs,Vr,Hb],Xo]),Xw=class extends Lt{constructor(t){super(t)}},Tx=class extends Lt{constructor(t){super(t)}qa(){const t=lb(this);return t??Wa()}},kx=class extends Lt{constructor(t){super(t)}},Zb=[1,2],Ex=Yo(class extends Lt{constructor(t){super(t)}},[0,Ds,[0,Zb,Kr,[0,fy],Kr,[0,Rb],bs,Vr],Xo]),gy=class extends Lt{constructor(t){super(t)}},ev=[0,Vr,bs,js,Zs,-1],Qw=class extends Lt{constructor(t){super(t)}},Px=[0,ps,-1],Yw=class extends Lt{constructor(t){super(t)}},wf=[1,2,3,4,5],zf=class extends Lt{constructor(t){super(t)}g(){return lb(this)!=null}h(){return Wo(qo(this,2))!=null}},os=class extends Lt{constructor(t){super(t)}g(){return J1(qo(this,2))??!1}},tv=[0,Rb,Vr,[0,bs,Xo,-1],[0,dx,Xo]],Ts=[0,tv,ps,[0,wf,Kr,Gb,Kr,Ub,Kr,Nb,Kr,Wb,Kr,Vb],_i],og=class extends Lt{constructor(t){super(t)}},_y=[0,Ts,js,-1,bs],Cx=bi(502141897,og);As[502141897]=_y;var Sx=Yo(class extends Lt{constructor(t){super(t)}},[0,[0,_i,-1,ux,px],vx]),rv=class extends Lt{constructor(t){super(t)}},sv=class extends Lt{constructor(t){super(t)}},yy=[0,Ts,js,[0,Ts],ps],nv=[0,Ts,_y,yy,js,[0,[0,tv]]],Ax=bi(508968150,sv);As[508968150]=nv,As[508968149]=yy;var iv=class extends Lt{constructor(t){super(t)}},Ix=bi(513916220,iv);As[513916220]=[0,Ts,nv,bs];var Ic=class extends Lt{constructor(t){super(t)}h(){return Fr(this,gy,2)}g(){Zr(this,2)}},ov=[0,Ts,ev];As[478825465]=ov;var $x=class extends Lt{constructor(t){super(t)}},av=class extends Lt{constructor(t){super(t)}},wy=class extends Lt{constructor(t){super(t)}},by=class extends Lt{constructor(t){super(t)}},lv=class extends Lt{constructor(t){super(t)}},Jw=[0,Ts,[0,Ts],ov,-1],cv=[0,Ts,js,bs],vy=[0,Ts,js],uv=[0,Ts,cv,vy,js],Fx=bi(479097054,lv);As[479097054]=[0,Ts,uv,Jw],As[463370452]=Jw,As[464864288]=cv;var Ox=bi(462713202,by);As[462713202]=uv,As[474472470]=vy;var zx=class extends Lt{constructor(t){super(t)}},dv=class extends Lt{constructor(t){super(t)}},pv=class extends Lt{constructor(t){super(t)}},hv=class extends Lt{constructor(){super()}},My=[0,Ts,js,-1,bs],E_=[0,Ts,js,ps];hv.prototype.g=ng([0,Ts,vy,[0,Ts],_y,yy,My,E_]);var mv=class extends Lt{constructor(t){super(t)}},Lx=bi(456383383,mv);As[456383383]=[0,Ts,ev];var fv=class extends Lt{constructor(t){super(t)}},Dx=bi(476348187,fv);As[476348187]=[0,Ts,Px];var gv=class extends Lt{constructor(t){super(t)}},Zw=class extends Lt{constructor(t){super(t)}},_v=[0,_i,-1],jx=bi(458105876,class extends Lt{constructor(t){super(t)}g(){var t=this.u;const s=Wr(t),n=2&s;return t=function(o,u,h){var v=Zw;const P=2&u;let f=!1;if(h==null){if(P)return Fw();h=[]}else if(h.constructor===Zn){if(!(2&h.M)||P)return h;h=h.Y()}else Array.isArray(h)?f=!!(2&ms(h)):h=[];if(P){if(!h.length)return Fw();f||(f=!0,qa(h))}else f&&(f=!1,h=db(h));return f||(64&ms(h)?Tf(h,32):32&u&&Rf(h,32)),is(o,u,2,v=new Zn(h,v,HM,void 0)),v}(t,s,Ni(t,s,2)),!n&&Zw&&(t.ta=!0),t}});As[458105876]=[0,_v,cx,[!0,Xo,[0,Vr,-1,Zs]]];var xy=class extends Lt{constructor(t){super(t)}},yv=bi(458105758,xy);As[458105758]=[0,Ts,Vr,_v];var wv=class extends Lt{constructor(t){super(t)}},Bx=bi(443442058,wv);As[443442058]=[0,Ts,Vr,bs,js,Zs,-1],As[514774813]=My;var bv=class extends Lt{constructor(t){super(t)}},Rx=bi(516587230,bv);function P_(t,s){return s=s?s.clone():new gy,t.displayNamesLocale!==void 0?Zr(s,1,Kc(t.displayNamesLocale)):t.displayNamesLocale===void 0&&Zr(s,1),t.maxResults!==void 0?Ri(s,2,t.maxResults):"maxResults"in t&&Zr(s,2),t.scoreThreshold!==void 0?Rt(s,3,t.scoreThreshold):"scoreThreshold"in t&&Zr(s,3),t.categoryAllowlist!==void 0?$f(s,4,t.categoryAllowlist):"categoryAllowlist"in t&&Zr(s,4),t.categoryDenylist!==void 0?$f(s,5,t.categoryDenylist):"categoryDenylist"in t&&Zr(s,5),s}function Ty(t,s=-1,n=""){return{categories:t.map(o=>({index:gi(Jn(o,1),0)??-1,score:xs(o,2)??0,categoryName:Bi(o,3)??"",displayName:Bi(o,4)??""})),headIndex:s,headName:n}}function vv(t){var v,P;var s=Ra(t,3,Qo,Ba()),n=Ra(t,2,qc,Ba()),o=Ra(t,1,Wo,Ba()),u=Ra(t,9,Wo,Ba());const h={categories:[],keypoints:[]};for(let f=0;f<s.length;f++)h.categories.push({score:s[f],index:n[f]??-1,categoryName:o[f]??"",displayName:u[f]??""});if((s=(v=Fr(t,a_,4))==null?void 0:v.h())&&(h.boundingBox={originX:Jn(s,1)??0,originY:Jn(s,2)??0,width:Jn(s,3)??0,height:Jn(s,4)??0,angle:0}),(P=Fr(t,a_,4))==null?void 0:P.g().length)for(const f of Fr(t,a_,4).g())h.keypoints.push({x:_f(f,1)??0,y:_f(f,2)??0,score:_f(f,4)??0,label:Wo(qo(f,3))??""});return h}function ag(t){const s=[];for(const n of co(t,Yb,1))s.push({x:xs(n,1)??0,y:xs(n,2)??0,z:xs(n,3)??0,visibility:xs(n,4)??0});return s}function qh(t){const s=[];for(const n of co(t,Qb,1))s.push({x:xs(n,1)??0,y:xs(n,2)??0,z:xs(n,3)??0,visibility:xs(n,4)??0});return s}function e1(t){return Array.from(t,s=>s>127?s-256:s)}function t1(t,s){if(t.length!==s.length)throw Error(`Cannot compute cosine similarity between embeddings of different sizes (${t.length} vs. ${s.length}).`);let n=0,o=0,u=0;for(let h=0;h<t.length;h++)n+=t[h]*s[h],o+=t[h]*t[h],u+=s[h]*s[h];if(o<=0||u<=0)throw Error("Cannot compute cosine similarity on embedding with 0 norm.");return n/Math.sqrt(o*u)}let hf;As[516587230]=[0,Ts,My,E_,js],As[518928384]=E_;const Nx=new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]);async function Mv(){if(hf===void 0)try{await WebAssembly.instantiate(Nx),hf=!0}catch{hf=!1}return hf}async function jh(t,s=mx``){const n=await Mv()?"wasm_internal":"wasm_nosimd_internal";return{wasmLoaderPath:`${s}/${t}_${n}.js`,wasmBinaryPath:`${s}/${t}_${n}.wasm`}}var ja=class{};function xv(){var t=navigator;return typeof OffscreenCanvas<"u"&&(!function(s=navigator){return(s=s.userAgent).includes("Safari")&&!s.includes("Chrome")}(t)||!!((t=t.userAgent.match(/Version\/([\d]+).*Safari/))&&t.length>=1&&Number(t[1])>=17))}async function r1(t){if(typeof importScripts!="function"){const s=document.createElement("script");return s.src=t.toString(),s.crossOrigin="anonymous",new Promise((n,o)=>{s.addEventListener("load",()=>{n()},!1),s.addEventListener("error",u=>{o(u)},!1),document.body.appendChild(s)})}importScripts(t.toString())}function Tv(t){return t.videoWidth!==void 0?[t.videoWidth,t.videoHeight]:t.naturalWidth!==void 0?[t.naturalWidth,t.naturalHeight]:t.displayWidth!==void 0?[t.displayWidth,t.displayHeight]:[t.width,t.height]}function Vt(t,s,n){t.m||console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target"),n(s=t.i.stringToNewUTF8(s)),t.i._free(s)}function s1(t,s,n){if(!t.i.canvas)throw Error("No OpenGL canvas configured.");if(n?t.i._bindTextureToStream(n):t.i._bindTextureToCanvas(),!(n=t.i.canvas.getContext("webgl2")||t.i.canvas.getContext("webgl")))throw Error("Failed to obtain WebGL context from the provided canvas. `getContext()` should only be invoked with `webgl` or `webgl2`.");t.i.gpuOriginForWebTexturesIsBottomLeft&&n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!0),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,s),t.i.gpuOriginForWebTexturesIsBottomLeft&&n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1);const[o,u]=Tv(s);return!t.l||o===t.i.canvas.width&&u===t.i.canvas.height||(t.i.canvas.width=o,t.i.canvas.height=u),[o,u]}function n1(t,s,n){t.m||console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target");const o=new Uint32Array(s.length);for(let u=0;u<s.length;u++)o[u]=t.i.stringToNewUTF8(s[u]);s=t.i._malloc(4*o.length),t.i.HEAPU32.set(o,s>>2),n(s);for(const u of o)t.i._free(u);t.i._free(s)}function Oi(t,s,n){t.i.simpleListeners=t.i.simpleListeners||{},t.i.simpleListeners[s]=n}function Bo(t,s,n){let o=[];t.i.simpleListeners=t.i.simpleListeners||{},t.i.simpleListeners[s]=(u,h,v)=>{h?(n(o,v),o=[]):o.push(u)}}ja.forVisionTasks=function(t){return jh("vision",t)},ja.forTextTasks=function(t){return jh("text",t)},ja.forGenAiExperimentalTasks=function(t){return jh("genai_experimental",t)},ja.forGenAiTasks=function(t){return jh("genai",t)},ja.forAudioTasks=function(t){return jh("audio",t)},ja.isSimdSupported=function(){return Mv()};async function Ux(t,s,n,o){return t=await(async(u,h,v,P,f)=>{if(h&&await r1(h),!self.ModuleFactory||v&&(await r1(v),!self.ModuleFactory))throw Error("ModuleFactory not set.");return self.Module&&f&&((h=self.Module).locateFile=f.locateFile,f.mainScriptUrlOrBlob&&(h.mainScriptUrlOrBlob=f.mainScriptUrlOrBlob)),f=await self.ModuleFactory(self.Module||f),self.ModuleFactory=self.Module=void 0,new u(f,P)})(t,n.wasmLoaderPath,n.assetLoaderPath,s,{locateFile:u=>u.endsWith(".wasm")?n.wasmBinaryPath.toString():n.assetBinaryPath&&u.endsWith(".data")?n.assetBinaryPath.toString():u}),await t.o(o),t}function l_(t,s){const n=Fr(t.baseOptions,zf,1)||new zf;typeof s=="string"?(Zr(n,2,Kc(s)),Zr(n,1)):s instanceof Uint8Array&&(Zr(n,1,B_(s,!1,!1)),Zr(n,2)),Xt(t.baseOptions,0,1,n)}function i1(t){try{const s=t.H.length;if(s===1)throw Error(t.H[0].message);if(s>1)throw Error("Encountered multiple errors: "+t.H.map(n=>n.message).join(", "))}finally{t.H=[]}}function It(t,s){t.B=Math.max(t.B,s)}function lg(t,s){t.A=new on,$n(t.A,"PassThroughCalculator"),es(t.A,"free_memory"),Er(t.A,"free_memory_unused_out"),rs(s,"free_memory"),Fn(s,t.A)}function Nc(t,s){es(t.A,s),Er(t.A,s+"_unused_out")}function cg(t){t.g.addBoolToStream(!0,"free_memory",t.B)}var bf=class{constructor(t){this.g=t,this.H=[],this.B=0,this.g.setAutoRenderToScreen(!1)}l(t,s=!0){var n,o,u,h,v,P;if(s){const f=t.baseOptions||{};if((n=t.baseOptions)!=null&&n.modelAssetBuffer&&((o=t.baseOptions)!=null&&o.modelAssetPath))throw Error("Cannot set both baseOptions.modelAssetPath and baseOptions.modelAssetBuffer");if(!((u=Fr(this.baseOptions,zf,1))!=null&&u.g()||(h=Fr(this.baseOptions,zf,1))!=null&&h.h()||(v=t.baseOptions)!=null&&v.modelAssetBuffer||(P=t.baseOptions)!=null&&P.modelAssetPath))throw Error("Either baseOptions.modelAssetPath or baseOptions.modelAssetBuffer must be set");if(function(b,x){let k=Fr(b.baseOptions,Yw,3);if(!k){var C=k=new Yw,N=new Gw;Vh(C,4,wf,N)}"delegate"in x&&(x.delegate==="GPU"?(x=k,C=new fx,Vh(x,2,wf,C)):(x=k,C=new Gw,Vh(x,4,wf,C))),Xt(b.baseOptions,0,3,k)}(this,f),f.modelAssetPath)return fetch(f.modelAssetPath.toString()).then(b=>{if(b.ok)return b.arrayBuffer();throw Error(`Failed to fetch model: ${f.modelAssetPath} (${b.status})`)}).then(b=>{try{this.g.i.FS_unlink("/model.dat")}catch{}this.g.i.FS_createDataFile("/","model.dat",new Uint8Array(b),!0,!1,!1),l_(this,"/model.dat"),this.m(),this.J()});if(f.modelAssetBuffer instanceof Uint8Array)l_(this,f.modelAssetBuffer);else if(f.modelAssetBuffer)return async function(b){const x=[];for(var k=0;;){const{done:C,value:N}=await b.read();if(C)break;x.push(N),k+=N.length}if(x.length===0)return new Uint8Array(0);if(x.length===1)return x[0];b=new Uint8Array(k),k=0;for(const C of x)b.set(C,k),k+=C.length;return b}(f.modelAssetBuffer).then(b=>{l_(this,b),this.m(),this.J()})}return this.m(),this.J(),Promise.resolve()}J(){}ea(){let t;if(this.g.ea(s=>{t=gx(s)}),!t)throw Error("Failed to retrieve CalculatorGraphConfig");return t}setGraph(t,s){this.g.attachErrorListener((n,o)=>{this.H.push(Error(o))}),this.g.Ma(),this.g.setGraph(t,s),this.A=void 0,i1(this)}finishProcessing(){this.g.finishProcessing(),i1(this)}close(){this.A=void 0,this.g.closeGraph()}};function lo(t,s){if(!t)throw Error(`Unable to obtain required WebGL resource: ${s}`);return t}bf.prototype.close=bf.prototype.close,function(t,s){t=t.split(".");var n,o=Va;for((t[0]in o)||o.execScript===void 0||o.execScript("var "+t[0]);t.length&&(n=t.shift());)t.length||s===void 0?o=o[n]&&o[n]!==Object.prototype[n]?o[n]:o[n]={}:o[n]=s}("TaskRunner",bf);class Vx{constructor(s,n,o,u){this.g=s,this.h=n,this.m=o,this.l=u}bind(){this.g.bindVertexArray(this.h)}close(){this.g.deleteVertexArray(this.h),this.g.deleteBuffer(this.m),this.g.deleteBuffer(this.l)}}function o1(t,s,n){const o=t.g;if(n=lo(o.createShader(n),"Failed to create WebGL shader"),o.shaderSource(n,s),o.compileShader(n),!o.getShaderParameter(n,o.COMPILE_STATUS))throw Error(`Could not compile WebGL shader: ${o.getShaderInfoLog(n)}`);return o.attachShader(t.h,n),n}function a1(t,s){const n=t.g,o=lo(n.createVertexArray(),"Failed to create vertex array");n.bindVertexArray(o);const u=lo(n.createBuffer(),"Failed to create buffer");n.bindBuffer(n.ARRAY_BUFFER,u),n.enableVertexAttribArray(t.P),n.vertexAttribPointer(t.P,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW);const h=lo(n.createBuffer(),"Failed to create buffer");return n.bindBuffer(n.ARRAY_BUFFER,h),n.enableVertexAttribArray(t.J),n.vertexAttribPointer(t.J,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array(s?[0,1,0,0,1,0,1,1]:[0,0,0,1,1,1,1,0]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.bindVertexArray(null),new Vx(n,o,u,h)}function ky(t,s){if(t.g){if(s!==t.g)throw Error("Cannot change GL context once initialized")}else t.g=s}function Ey(t,s,n,o){return ky(t,s),t.h||(t.m(),t.C()),n?(t.s||(t.s=a1(t,!0)),n=t.s):(t.v||(t.v=a1(t,!1)),n=t.v),s.useProgram(t.h),n.bind(),t.l(),t=o(),n.g.bindVertexArray(null),t}function ug(t,s,n){return ky(t,s),t=lo(s.createTexture(),"Failed to create texture"),s.bindTexture(s.TEXTURE_2D,t),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,n??s.LINEAR),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MAG_FILTER,n??s.LINEAR),s.bindTexture(s.TEXTURE_2D,null),t}function dg(t,s,n){ky(t,s),t.A||(t.A=lo(s.createFramebuffer(),"Failed to create framebuffe.")),s.bindFramebuffer(s.FRAMEBUFFER,t.A),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,n,0)}function Py(t){var s;(s=t.g)==null||s.bindFramebuffer(t.g.FRAMEBUFFER,null)}var Cy=class{H(){return`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D inputTexture;
  void main() {
    gl_FragColor = texture2D(inputTexture, vTex);
  }
 `}m(){const t=this.g;if(this.h=lo(t.createProgram(),"Failed to create WebGL program"),this.ba=o1(this,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,t.VERTEX_SHADER),this.aa=o1(this,this.H(),t.FRAGMENT_SHADER),t.linkProgram(this.h),!t.getProgramParameter(this.h,t.LINK_STATUS))throw Error(`Error during program linking: ${t.getProgramInfoLog(this.h)}`);this.P=t.getAttribLocation(this.h,"aVertex"),this.J=t.getAttribLocation(this.h,"aTex")}C(){}l(){}close(){if(this.h){const t=this.g;t.deleteProgram(this.h),t.deleteShader(this.ba),t.deleteShader(this.aa)}this.A&&this.g.deleteFramebuffer(this.A),this.v&&this.v.close(),this.s&&this.s.close()}};function oo(t,s){switch(s){case 0:return t.g.find(n=>n instanceof Uint8Array);case 1:return t.g.find(n=>n instanceof Float32Array);case 2:return t.g.find(n=>typeof WebGLTexture<"u"&&n instanceof WebGLTexture);default:throw Error(`Type is not supported: ${s}`)}}function C_(t){var s=oo(t,1);if(!s){if(s=oo(t,0))s=new Float32Array(s).map(o=>o/255);else{s=new Float32Array(t.width*t.height);const o=Uc(t);var n=Sy(t);if(dg(n,o,kv(t)),"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"document"in self&&"ontouchend"in self.document){n=new Float32Array(t.width*t.height*4),o.readPixels(0,0,t.width,t.height,o.RGBA,o.FLOAT,n);for(let u=0,h=0;u<s.length;++u,h+=4)s[u]=n[h]}else o.readPixels(0,0,t.width,t.height,o.RED,o.FLOAT,s)}t.g.push(s)}return s}function kv(t){let s=oo(t,2);if(!s){const n=Uc(t);s=Pv(t);const o=C_(t),u=Ev(t);n.texImage2D(n.TEXTURE_2D,0,u,t.width,t.height,0,n.RED,n.FLOAT,o),S_(t)}return s}function Uc(t){if(!t.canvas)throw Error("Conversion to different image formats require that a canvas is passed when initializing the image.");return t.h||(t.h=lo(t.canvas.getContext("webgl2"),"You cannot use a canvas that is already bound to a different type of rendering context.")),t.h}function Ev(t){if(t=Uc(t),!mf)if(t.getExtension("EXT_color_buffer_float")&&t.getExtension("OES_texture_float_linear")&&t.getExtension("EXT_float_blend"))mf=t.R32F;else{if(!t.getExtension("EXT_color_buffer_half_float"))throw Error("GPU does not fully support 4-channel float32 or float16 formats");mf=t.R16F}return mf}function Sy(t){return t.l||(t.l=new Cy),t.l}function Pv(t){const s=Uc(t);s.viewport(0,0,t.width,t.height),s.activeTexture(s.TEXTURE0);let n=oo(t,2);return n||(n=ug(Sy(t),s,t.m?s.LINEAR:s.NEAREST),t.g.push(n),t.j=!0),s.bindTexture(s.TEXTURE_2D,n),n}function S_(t){t.h.bindTexture(t.h.TEXTURE_2D,null)}var mf,Us=class{constructor(t,s,n,o,u,h,v){this.g=t,this.m=s,this.j=n,this.canvas=o,this.l=u,this.width=h,this.height=v,this.j&&--l1===0&&console.error("You seem to be creating MPMask instances without invoking .close(). This leaks resources.")}Ha(){return!!oo(this,0)}la(){return!!oo(this,1)}R(){return!!oo(this,2)}ka(){return(s=oo(t=this,0))||(s=C_(t),s=new Uint8Array(s.map(n=>255*n)),t.g.push(s)),s;var t,s}ja(){return C_(this)}N(){return kv(this)}clone(){const t=[];for(const s of this.g){let n;if(s instanceof Uint8Array)n=new Uint8Array(s);else if(s instanceof Float32Array)n=new Float32Array(s);else{if(!(s instanceof WebGLTexture))throw Error(`Type is not supported: ${s}`);{const o=Uc(this),u=Sy(this);o.activeTexture(o.TEXTURE1),n=ug(u,o,this.m?o.LINEAR:o.NEAREST),o.bindTexture(o.TEXTURE_2D,n);const h=Ev(this);o.texImage2D(o.TEXTURE_2D,0,h,this.width,this.height,0,o.RED,o.FLOAT,null),o.bindTexture(o.TEXTURE_2D,null),dg(u,o,n),Ey(u,o,!1,()=>{Pv(this),o.clearColor(0,0,0,0),o.clear(o.COLOR_BUFFER_BIT),o.drawArrays(o.TRIANGLE_FAN,0,4),S_(this)}),Py(u),S_(this)}}t.push(n)}return new Us(t,this.m,this.R(),this.canvas,this.l,this.width,this.height)}close(){this.j&&Uc(this).deleteTexture(oo(this,2)),l1=-1}};Us.prototype.close=Us.prototype.close,Us.prototype.clone=Us.prototype.clone,Us.prototype.getAsWebGLTexture=Us.prototype.N,Us.prototype.getAsFloat32Array=Us.prototype.ja,Us.prototype.getAsUint8Array=Us.prototype.ka,Us.prototype.hasWebGLTexture=Us.prototype.R,Us.prototype.hasFloat32Array=Us.prototype.la,Us.prototype.hasUint8Array=Us.prototype.Ha;var l1=250;function Di(t,s){switch(s){case 0:return t.g.find(n=>n instanceof ImageData);case 1:return t.g.find(n=>typeof ImageBitmap<"u"&&n instanceof ImageBitmap);case 2:return t.g.find(n=>typeof WebGLTexture<"u"&&n instanceof WebGLTexture);default:throw Error(`Type is not supported: ${s}`)}}function Cv(t){var s=Di(t,0);if(!s){s=Vc(t);const n=pg(t),o=new Uint8Array(t.width*t.height*4);dg(n,s,vf(t)),s.readPixels(0,0,t.width,t.height,s.RGBA,s.UNSIGNED_BYTE,o),Py(n),s=new ImageData(new Uint8ClampedArray(o.buffer),t.width,t.height),t.g.push(s)}return s}function vf(t){let s=Di(t,2);if(!s){const n=Vc(t);s=Mf(t);const o=Di(t,1)||Cv(t);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,o),Nh(t)}return s}function Vc(t){if(!t.canvas)throw Error("Conversion to different image formats require that a canvas is passed when iniitializing the image.");return t.h||(t.h=lo(t.canvas.getContext("webgl2"),"You cannot use a canvas that is already bound to a different type of rendering context.")),t.h}function pg(t){return t.l||(t.l=new Cy),t.l}function Mf(t){const s=Vc(t);s.viewport(0,0,t.width,t.height),s.activeTexture(s.TEXTURE0);let n=Di(t,2);return n||(n=ug(pg(t),s),t.g.push(n),t.m=!0),s.bindTexture(s.TEXTURE_2D,n),n}function Nh(t){t.h.bindTexture(t.h.TEXTURE_2D,null)}function c1(t){const s=Vc(t);return Ey(pg(t),s,!0,()=>function(n,o){const u=n.canvas;if(u.width===n.width&&u.height===n.height)return o();const h=u.width,v=u.height;return u.width=n.width,u.height=n.height,n=o(),u.width=h,u.height=v,n}(t,()=>{if(s.bindFramebuffer(s.FRAMEBUFFER,null),s.clearColor(0,0,0,0),s.clear(s.COLOR_BUFFER_BIT),s.drawArrays(s.TRIANGLE_FAN,0,4),!(t.canvas instanceof OffscreenCanvas))throw Error("Conversion to ImageBitmap requires that the MediaPipe Tasks is initialized with an OffscreenCanvas");return t.canvas.transferToImageBitmap()}))}var Vs=class{constructor(t,s,n,o,u,h,v){this.g=t,this.j=s,this.m=n,this.canvas=o,this.l=u,this.width=h,this.height=v,(this.j||this.m)&&--u1===0&&console.error("You seem to be creating MPImage instances without invoking .close(). This leaks resources.")}Ga(){return!!Di(this,0)}ma(){return!!Di(this,1)}R(){return!!Di(this,2)}Ea(){return Cv(this)}Da(){var t=Di(this,1);return t||(vf(this),Mf(this),t=c1(this),Nh(this),this.g.push(t),this.j=!0),t}N(){return vf(this)}clone(){const t=[];for(const s of this.g){let n;if(s instanceof ImageData)n=new ImageData(s.data,this.width,this.height);else if(s instanceof WebGLTexture){const o=Vc(this),u=pg(this);o.activeTexture(o.TEXTURE1),n=ug(u,o),o.bindTexture(o.TEXTURE_2D,n),o.texImage2D(o.TEXTURE_2D,0,o.RGBA,this.width,this.height,0,o.RGBA,o.UNSIGNED_BYTE,null),o.bindTexture(o.TEXTURE_2D,null),dg(u,o,n),Ey(u,o,!1,()=>{Mf(this),o.clearColor(0,0,0,0),o.clear(o.COLOR_BUFFER_BIT),o.drawArrays(o.TRIANGLE_FAN,0,4),Nh(this)}),Py(u),Nh(this)}else{if(!(s instanceof ImageBitmap))throw Error(`Type is not supported: ${s}`);vf(this),Mf(this),n=c1(this),Nh(this)}t.push(n)}return new Vs(t,this.ma(),this.R(),this.canvas,this.l,this.width,this.height)}close(){this.j&&Di(this,1).close(),this.m&&Vc(this).deleteTexture(Di(this,2)),u1=-1}};Vs.prototype.close=Vs.prototype.close,Vs.prototype.clone=Vs.prototype.clone,Vs.prototype.getAsWebGLTexture=Vs.prototype.N,Vs.prototype.getAsImageBitmap=Vs.prototype.Da,Vs.prototype.getAsImageData=Vs.prototype.Ea,Vs.prototype.hasWebGLTexture=Vs.prototype.R,Vs.prototype.hasImageBitmap=Vs.prototype.ma,Vs.prototype.hasImageData=Vs.prototype.Ga;var u1=250;function vi(...t){return t.map(([s,n])=>({start:s,end:n}))}const Wx=function(t){return class extends t{Ma(){this.i._registerModelResourcesGraphService()}}}((d1=class{constructor(t,s){this.l=!0,this.i=t,this.g=null,this.h=0,this.m=typeof this.i._addIntToInputStream=="function",s!==void 0?this.i.canvas=s:xv()?this.i.canvas=new OffscreenCanvas(1,1):(console.warn("OffscreenCanvas not supported and GraphRunner constructor glCanvas parameter is undefined. Creating backup canvas."),this.i.canvas=document.createElement("canvas"))}async initializeGraph(t){const s=await(await fetch(t)).arrayBuffer();t=!(t.endsWith(".pbtxt")||t.endsWith(".textproto")),this.setGraph(new Uint8Array(s),t)}setGraphFromString(t){this.setGraph(new TextEncoder().encode(t),!1)}setGraph(t,s){const n=t.length,o=this.i._malloc(n);this.i.HEAPU8.set(t,o),s?this.i._changeBinaryGraph(n,o):this.i._changeTextGraph(n,o),this.i._free(o)}configureAudio(t,s,n,o,u){this.i._configureAudio||console.warn('Attempting to use configureAudio without support for input audio. Is build dep ":gl_graph_runner_audio" missing?'),Vt(this,o||"input_audio",h=>{Vt(this,u=u||"audio_header",v=>{this.i._configureAudio(h,v,t,s??0,n)})})}setAutoResizeCanvas(t){this.l=t}setAutoRenderToScreen(t){this.i._setAutoRenderToScreen(t)}setGpuBufferVerticalFlip(t){this.i.gpuOriginForWebTexturesIsBottomLeft=t}ea(t){Oi(this,"__graph_config__",s=>{t(s)}),Vt(this,"__graph_config__",s=>{this.i._getGraphConfig(s,void 0)}),delete this.i.simpleListeners.__graph_config__}attachErrorListener(t){this.i.errorListener=t}attachEmptyPacketListener(t,s){this.i.emptyPacketListeners=this.i.emptyPacketListeners||{},this.i.emptyPacketListeners[t]=s}addAudioToStream(t,s,n){this.addAudioToStreamWithShape(t,0,0,s,n)}addAudioToStreamWithShape(t,s,n,o,u){const h=4*t.length;this.h!==h&&(this.g&&this.i._free(this.g),this.g=this.i._malloc(h),this.h=h),this.i.HEAPF32.set(t,this.g/4),Vt(this,o,v=>{this.i._addAudioToInputStream(this.g,s,n,v,u)})}addGpuBufferToStream(t,s,n){Vt(this,s,o=>{const[u,h]=s1(this,t,o);this.i._addBoundTextureToStream(o,u,h,n)})}addBoolToStream(t,s,n){Vt(this,s,o=>{this.i._addBoolToInputStream(t,o,n)})}addDoubleToStream(t,s,n){Vt(this,s,o=>{this.i._addDoubleToInputStream(t,o,n)})}addFloatToStream(t,s,n){Vt(this,s,o=>{this.i._addFloatToInputStream(t,o,n)})}addIntToStream(t,s,n){Vt(this,s,o=>{this.i._addIntToInputStream(t,o,n)})}addUintToStream(t,s,n){Vt(this,s,o=>{this.i._addUintToInputStream(t,o,n)})}addStringToStream(t,s,n){Vt(this,s,o=>{Vt(this,t,u=>{this.i._addStringToInputStream(u,o,n)})})}addStringRecordToStream(t,s,n){Vt(this,s,o=>{n1(this,Object.keys(t),u=>{n1(this,Object.values(t),h=>{this.i._addFlatHashMapToInputStream(u,h,Object.keys(t).length,o,n)})})})}addProtoToStream(t,s,n,o){Vt(this,n,u=>{Vt(this,s,h=>{const v=this.i._malloc(t.length);this.i.HEAPU8.set(t,v),this.i._addProtoToInputStream(v,t.length,h,u,o),this.i._free(v)})})}addEmptyPacketToStream(t,s){Vt(this,t,n=>{this.i._addEmptyPacketToInputStream(n,s)})}addBoolVectorToStream(t,s,n){Vt(this,s,o=>{const u=this.i._allocateBoolVector(t.length);if(!u)throw Error("Unable to allocate new bool vector on heap.");for(const h of t)this.i._addBoolVectorEntry(u,h);this.i._addBoolVectorToInputStream(u,o,n)})}addDoubleVectorToStream(t,s,n){Vt(this,s,o=>{const u=this.i._allocateDoubleVector(t.length);if(!u)throw Error("Unable to allocate new double vector on heap.");for(const h of t)this.i._addDoubleVectorEntry(u,h);this.i._addDoubleVectorToInputStream(u,o,n)})}addFloatVectorToStream(t,s,n){Vt(this,s,o=>{const u=this.i._allocateFloatVector(t.length);if(!u)throw Error("Unable to allocate new float vector on heap.");for(const h of t)this.i._addFloatVectorEntry(u,h);this.i._addFloatVectorToInputStream(u,o,n)})}addIntVectorToStream(t,s,n){Vt(this,s,o=>{const u=this.i._allocateIntVector(t.length);if(!u)throw Error("Unable to allocate new int vector on heap.");for(const h of t)this.i._addIntVectorEntry(u,h);this.i._addIntVectorToInputStream(u,o,n)})}addUintVectorToStream(t,s,n){Vt(this,s,o=>{const u=this.i._allocateUintVector(t.length);if(!u)throw Error("Unable to allocate new unsigned int vector on heap.");for(const h of t)this.i._addUintVectorEntry(u,h);this.i._addUintVectorToInputStream(u,o,n)})}addStringVectorToStream(t,s,n){Vt(this,s,o=>{const u=this.i._allocateStringVector(t.length);if(!u)throw Error("Unable to allocate new string vector on heap.");for(const h of t)Vt(this,h,v=>{this.i._addStringVectorEntry(u,v)});this.i._addStringVectorToInputStream(u,o,n)})}addBoolToInputSidePacket(t,s){Vt(this,s,n=>{this.i._addBoolToInputSidePacket(t,n)})}addDoubleToInputSidePacket(t,s){Vt(this,s,n=>{this.i._addDoubleToInputSidePacket(t,n)})}addFloatToInputSidePacket(t,s){Vt(this,s,n=>{this.i._addFloatToInputSidePacket(t,n)})}addIntToInputSidePacket(t,s){Vt(this,s,n=>{this.i._addIntToInputSidePacket(t,n)})}addUintToInputSidePacket(t,s){Vt(this,s,n=>{this.i._addUintToInputSidePacket(t,n)})}addStringToInputSidePacket(t,s){Vt(this,s,n=>{Vt(this,t,o=>{this.i._addStringToInputSidePacket(o,n)})})}addProtoToInputSidePacket(t,s,n){Vt(this,n,o=>{Vt(this,s,u=>{const h=this.i._malloc(t.length);this.i.HEAPU8.set(t,h),this.i._addProtoToInputSidePacket(h,t.length,u,o),this.i._free(h)})})}addBoolVectorToInputSidePacket(t,s){Vt(this,s,n=>{const o=this.i._allocateBoolVector(t.length);if(!o)throw Error("Unable to allocate new bool vector on heap.");for(const u of t)this.i._addBoolVectorEntry(o,u);this.i._addBoolVectorToInputSidePacket(o,n)})}addDoubleVectorToInputSidePacket(t,s){Vt(this,s,n=>{const o=this.i._allocateDoubleVector(t.length);if(!o)throw Error("Unable to allocate new double vector on heap.");for(const u of t)this.i._addDoubleVectorEntry(o,u);this.i._addDoubleVectorToInputSidePacket(o,n)})}addFloatVectorToInputSidePacket(t,s){Vt(this,s,n=>{const o=this.i._allocateFloatVector(t.length);if(!o)throw Error("Unable to allocate new float vector on heap.");for(const u of t)this.i._addFloatVectorEntry(o,u);this.i._addFloatVectorToInputSidePacket(o,n)})}addIntVectorToInputSidePacket(t,s){Vt(this,s,n=>{const o=this.i._allocateIntVector(t.length);if(!o)throw Error("Unable to allocate new int vector on heap.");for(const u of t)this.i._addIntVectorEntry(o,u);this.i._addIntVectorToInputSidePacket(o,n)})}addUintVectorToInputSidePacket(t,s){Vt(this,s,n=>{const o=this.i._allocateUintVector(t.length);if(!o)throw Error("Unable to allocate new unsigned int vector on heap.");for(const u of t)this.i._addUintVectorEntry(o,u);this.i._addUintVectorToInputSidePacket(o,n)})}addStringVectorToInputSidePacket(t,s){Vt(this,s,n=>{const o=this.i._allocateStringVector(t.length);if(!o)throw Error("Unable to allocate new string vector on heap.");for(const u of t)Vt(this,u,h=>{this.i._addStringVectorEntry(o,h)});this.i._addStringVectorToInputSidePacket(o,n)})}attachBoolListener(t,s){Oi(this,t,s),Vt(this,t,n=>{this.i._attachBoolListener(n)})}attachBoolVectorListener(t,s){Bo(this,t,s),Vt(this,t,n=>{this.i._attachBoolVectorListener(n)})}attachIntListener(t,s){Oi(this,t,s),Vt(this,t,n=>{this.i._attachIntListener(n)})}attachIntVectorListener(t,s){Bo(this,t,s),Vt(this,t,n=>{this.i._attachIntVectorListener(n)})}attachUintListener(t,s){Oi(this,t,s),Vt(this,t,n=>{this.i._attachUintListener(n)})}attachUintVectorListener(t,s){Bo(this,t,s),Vt(this,t,n=>{this.i._attachUintVectorListener(n)})}attachDoubleListener(t,s){Oi(this,t,s),Vt(this,t,n=>{this.i._attachDoubleListener(n)})}attachDoubleVectorListener(t,s){Bo(this,t,s),Vt(this,t,n=>{this.i._attachDoubleVectorListener(n)})}attachFloatListener(t,s){Oi(this,t,s),Vt(this,t,n=>{this.i._attachFloatListener(n)})}attachFloatVectorListener(t,s){Bo(this,t,s),Vt(this,t,n=>{this.i._attachFloatVectorListener(n)})}attachStringListener(t,s){Oi(this,t,s),Vt(this,t,n=>{this.i._attachStringListener(n)})}attachStringVectorListener(t,s){Bo(this,t,s),Vt(this,t,n=>{this.i._attachStringVectorListener(n)})}attachProtoListener(t,s,n){Oi(this,t,s),Vt(this,t,o=>{this.i._attachProtoListener(o,n||!1)})}attachProtoVectorListener(t,s,n){Bo(this,t,s),Vt(this,t,o=>{this.i._attachProtoVectorListener(o,n||!1)})}attachAudioListener(t,s,n){this.i._attachAudioListener||console.warn('Attempting to use attachAudioListener without support for output audio. Is build dep ":gl_graph_runner_audio_out" missing?'),Oi(this,t,(o,u)=>{o=new Float32Array(o.buffer,o.byteOffset,o.length/4),s(o,u)}),Vt(this,t,o=>{this.i._attachAudioListener(o,n||!1)})}finishProcessing(){this.i._waitUntilIdle()}closeGraph(){this.i._closeGraph(),this.i.simpleListeners=void 0,this.i.emptyPacketListeners=void 0}},class extends d1{get ga(){return this.i}sa(t,s,n){Vt(this,s,o=>{const[u,h]=s1(this,t,o);this.ga._addBoundTextureAsImageToStream(o,u,h,n)})}V(t,s){Oi(this,t,s),Vt(this,t,n=>{this.ga._attachImageListener(n)})}da(t,s){Bo(this,t,s),Vt(this,t,n=>{this.ga._attachImageVectorListener(n)})}}));var d1,ti=class extends Wx{};async function vr(t,s,n){return async function(o,u,h,v){return Ux(o,u,h,v)}(t,n.canvas??(xv()?void 0:document.createElement("canvas")),s,n)}function Sv(t,s,n,o){if(t.U){const h=new Jb;if(n!=null&&n.regionOfInterest){if(!t.ra)throw Error("This task doesn't support region-of-interest.");var u=n.regionOfInterest;if(u.left>=u.right||u.top>=u.bottom)throw Error("Expected RectF with left < right and top < bottom.");if(u.left<0||u.top<0||u.right>1||u.bottom>1)throw Error("Expected RectF values to be in [0,1].");Rt(h,1,(u.left+u.right)/2),Rt(h,2,(u.top+u.bottom)/2),Rt(h,4,u.right-u.left),Rt(h,3,u.bottom-u.top)}else Rt(h,1,.5),Rt(h,2,.5),Rt(h,4,1),Rt(h,3,1);if(n!=null&&n.rotationDegrees){if((n==null?void 0:n.rotationDegrees)%90!=0)throw Error("Expected rotation to be a multiple of 90°.");if(Rt(h,5,-Math.PI*n.rotationDegrees/180),(n==null?void 0:n.rotationDegrees)%180!=0){const[v,P]=Tv(s);n=xs(h,3)*P/v,u=xs(h,4)*v/P,Rt(h,4,n),Rt(h,3,u)}}t.g.addProtoToStream(h.g(),"mediapipe.NormalizedRect",t.U,o)}t.g.sa(s,t.ba,o??performance.now()),t.finishProcessing()}function ri(t,s,n){var o;if((o=t.baseOptions)!=null&&o.g())throw Error("Task is not initialized with image mode. 'runningMode' must be set to 'IMAGE'.");Sv(t,s,n,t.B+1)}function Ui(t,s,n,o){var u;if(!((u=t.baseOptions)!=null&&u.g()))throw Error("Task is not initialized with video mode. 'runningMode' must be set to 'VIDEO'.");Sv(t,s,n,o)}function Wc(t,s,n,o){var u=s.data;const h=s.width,v=h*(s=s.height);if((u instanceof Uint8Array||u instanceof Float32Array)&&u.length!==v)throw Error("Unsupported channel count: "+u.length/v);return t=new Us([u],n,!1,t.g.i.canvas,t.P,h,s),o?t.clone():t}var yn=class extends bf{constructor(t,s,n,o){super(t),this.g=t,this.ba=s,this.U=n,this.ra=o,this.P=new Cy}l(t,s=!0){if("runningMode"in t&&Xh(this.baseOptions,2,!!t.runningMode&&t.runningMode!=="IMAGE"),t.canvas!==void 0&&this.g.i.canvas!==t.canvas)throw Error("You must create a new task to reset the canvas.");return super.l(t,s)}close(){this.P.close(),super.close()}};yn.prototype.close=yn.prototype.close;var Kn=class extends yn{constructor(t,s){super(new ti(t,s),"image_in","norm_rect_in",!1),this.j={detections:[]},Xt(t=this.h=new og,0,1,s=new os),Rt(this.h,2,.5),Rt(this.h,3,.3)}get baseOptions(){return Fr(this.h,os,1)}set baseOptions(t){Xt(this.h,0,1,t)}o(t){return"minDetectionConfidence"in t&&Rt(this.h,2,t.minDetectionConfidence??.5),"minSuppressionThreshold"in t&&Rt(this.h,3,t.minSuppressionThreshold??.3),this.l(t)}D(t,s){return this.j={detections:[]},ri(this,t,s),this.j}F(t,s,n){return this.j={detections:[]},Ui(this,t,n,s),this.j}m(){var t=new vn;rs(t,"image_in"),rs(t,"norm_rect_in"),Lr(t,"detections");const s=new In;yi(s,Cx,this.h);const n=new on;$n(n,"mediapipe.tasks.vision.face_detector.FaceDetectorGraph"),es(n,"IMAGE:image_in"),es(n,"NORM_RECT:norm_rect_in"),Er(n,"DETECTIONS:detections"),n.o(s),Fn(t,n),this.g.attachProtoVectorListener("detections",(o,u)=>{for(const h of o)o=Xb(h),this.j.detections.push(vv(o));It(this,u)}),this.g.attachEmptyPacketListener("detections",o=>{It(this,o)}),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Kn.prototype.detectForVideo=Kn.prototype.F,Kn.prototype.detect=Kn.prototype.D,Kn.prototype.setOptions=Kn.prototype.o,Kn.createFromModelPath=async function(t,s){return vr(Kn,t,{baseOptions:{modelAssetPath:s}})},Kn.createFromModelBuffer=function(t,s){return vr(Kn,t,{baseOptions:{modelAssetBuffer:s}})},Kn.createFromOptions=function(t,s){return vr(Kn,t,s)};var Ay=vi([61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]),Iy=vi([263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]),$y=vi([276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]),Av=vi([474,475],[475,476],[476,477],[477,474]),Fy=vi([33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]),Oy=vi([46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]),Iv=vi([469,470],[470,471],[471,472],[472,469]),zy=vi([10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]),$v=[...Ay,...Iy,...$y,...Fy,...Oy,...zy],Fv=vi([127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]);function p1(t){t.j={faceLandmarks:[],faceBlendshapes:[],facialTransformationMatrixes:[]}}var ds=class extends yn{constructor(t,s){super(new ti(t,s),"image_in","norm_rect",!1),this.j={faceLandmarks:[],faceBlendshapes:[],facialTransformationMatrixes:[]},this.outputFacialTransformationMatrixes=this.outputFaceBlendshapes=!1,Xt(t=this.h=new sv,0,1,s=new os),this.v=new rv,Xt(this.h,0,3,this.v),this.s=new og,Xt(this.h,0,2,this.s),Ri(this.s,4,1),Rt(this.s,2,.5),Rt(this.v,2,.5),Rt(this.h,4,.5)}get baseOptions(){return Fr(this.h,os,1)}set baseOptions(t){Xt(this.h,0,1,t)}o(t){return"numFaces"in t&&Ri(this.s,4,t.numFaces??1),"minFaceDetectionConfidence"in t&&Rt(this.s,2,t.minFaceDetectionConfidence??.5),"minTrackingConfidence"in t&&Rt(this.h,4,t.minTrackingConfidence??.5),"minFacePresenceConfidence"in t&&Rt(this.v,2,t.minFacePresenceConfidence??.5),"outputFaceBlendshapes"in t&&(this.outputFaceBlendshapes=!!t.outputFaceBlendshapes),"outputFacialTransformationMatrixes"in t&&(this.outputFacialTransformationMatrixes=!!t.outputFacialTransformationMatrixes),this.l(t)}D(t,s){return p1(this),ri(this,t,s),this.j}F(t,s,n){return p1(this),Ui(this,t,n,s),this.j}m(){var t=new vn;rs(t,"image_in"),rs(t,"norm_rect"),Lr(t,"face_landmarks");const s=new In;yi(s,Ax,this.h);const n=new on;$n(n,"mediapipe.tasks.vision.face_landmarker.FaceLandmarkerGraph"),es(n,"IMAGE:image_in"),es(n,"NORM_RECT:norm_rect"),Er(n,"NORM_LANDMARKS:face_landmarks"),n.o(s),Fn(t,n),this.g.attachProtoVectorListener("face_landmarks",(o,u)=>{for(const h of o)o=rm(h),this.j.faceLandmarks.push(ag(o));It(this,u)}),this.g.attachEmptyPacketListener("face_landmarks",o=>{It(this,o)}),this.outputFaceBlendshapes&&(Lr(t,"blendshapes"),Er(n,"BLENDSHAPES:blendshapes"),this.g.attachProtoVectorListener("blendshapes",(o,u)=>{if(this.outputFaceBlendshapes)for(const h of o)o=ig(h),this.j.faceBlendshapes.push(Ty(o.g()??[]));It(this,u)}),this.g.attachEmptyPacketListener("blendshapes",o=>{It(this,o)})),this.outputFacialTransformationMatrixes&&(Lr(t,"face_geometry"),Er(n,"FACE_GEOMETRY:face_geometry"),this.g.attachProtoVectorListener("face_geometry",(o,u)=>{if(this.outputFacialTransformationMatrixes)for(const h of o)(o=Fr(Sx(h),bx,2))&&this.j.facialTransformationMatrixes.push({rows:gi(Jn(o,1),0)??0,columns:gi(Jn(o,2),0)??0,data:Ra(o,3,Qo,Ba()).slice()??[]});It(this,u)}),this.g.attachEmptyPacketListener("face_geometry",o=>{It(this,o)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};ds.prototype.detectForVideo=ds.prototype.F,ds.prototype.detect=ds.prototype.D,ds.prototype.setOptions=ds.prototype.o,ds.createFromModelPath=function(t,s){return vr(ds,t,{baseOptions:{modelAssetPath:s}})},ds.createFromModelBuffer=function(t,s){return vr(ds,t,{baseOptions:{modelAssetBuffer:s}})},ds.createFromOptions=function(t,s){return vr(ds,t,s)},ds.FACE_LANDMARKS_LIPS=Ay,ds.FACE_LANDMARKS_LEFT_EYE=Iy,ds.FACE_LANDMARKS_LEFT_EYEBROW=$y,ds.FACE_LANDMARKS_LEFT_IRIS=Av,ds.FACE_LANDMARKS_RIGHT_EYE=Fy,ds.FACE_LANDMARKS_RIGHT_EYEBROW=Oy,ds.FACE_LANDMARKS_RIGHT_IRIS=Iv,ds.FACE_LANDMARKS_FACE_OVAL=zy,ds.FACE_LANDMARKS_CONTOURS=$v,ds.FACE_LANDMARKS_TESSELATION=Fv;var zi=class extends yn{constructor(t,s){super(new ti(t,s),"image_in","norm_rect",!0),Xt(t=this.j=new iv,0,1,s=new os)}get baseOptions(){return Fr(this.j,os,1)}set baseOptions(t){Xt(this.j,0,1,t)}o(t){return super.l(t)}Pa(t,s,n){const o=typeof s!="function"?s:{};if(this.h=typeof s=="function"?s:n,ri(this,t,o??{}),!this.h)return this.s}m(){var t=new vn;rs(t,"image_in"),rs(t,"norm_rect"),Lr(t,"stylized_image");const s=new In;yi(s,Ix,this.j);const n=new on;$n(n,"mediapipe.tasks.vision.face_stylizer.FaceStylizerGraph"),es(n,"IMAGE:image_in"),es(n,"NORM_RECT:norm_rect"),Er(n,"STYLIZED_IMAGE:stylized_image"),n.o(s),Fn(t,n),this.g.V("stylized_image",(o,u)=>{var h=!this.h,v=o.data,P=o.width;const f=P*(o=o.height);if(v instanceof Uint8Array)if(v.length===3*f){const b=new Uint8ClampedArray(4*f);for(let x=0;x<f;++x)b[4*x]=v[3*x],b[4*x+1]=v[3*x+1],b[4*x+2]=v[3*x+2],b[4*x+3]=255;v=new ImageData(b,P,o)}else{if(v.length!==4*f)throw Error("Unsupported channel count: "+v.length/f);v=new ImageData(new Uint8ClampedArray(v.buffer,v.byteOffset,v.length),P,o)}else if(!(v instanceof WebGLTexture))throw Error(`Unsupported format: ${v.constructor.name}`);P=new Vs([v],!1,!1,this.g.i.canvas,this.P,P,o),this.s=h=h?P.clone():P,this.h&&this.h(h),It(this,u)}),this.g.attachEmptyPacketListener("stylized_image",o=>{this.s=null,this.h&&this.h(null),It(this,o)}),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};zi.prototype.stylize=zi.prototype.Pa,zi.prototype.setOptions=zi.prototype.o,zi.createFromModelPath=function(t,s){return vr(zi,t,{baseOptions:{modelAssetPath:s}})},zi.createFromModelBuffer=function(t,s){return vr(zi,t,{baseOptions:{modelAssetBuffer:s}})},zi.createFromOptions=function(t,s){return vr(zi,t,s)};var Ly=vi([0,1],[1,2],[2,3],[3,4],[0,5],[5,6],[6,7],[7,8],[5,9],[9,10],[10,11],[11,12],[9,13],[13,14],[14,15],[15,16],[13,17],[0,17],[17,18],[18,19],[19,20]);function h1(t){t.gestures=[],t.landmarks=[],t.worldLandmarks=[],t.handedness=[]}function m1(t){return t.gestures.length===0?{gestures:[],landmarks:[],worldLandmarks:[],handedness:[],handednesses:[]}:{gestures:t.gestures,landmarks:t.landmarks,worldLandmarks:t.worldLandmarks,handedness:t.handedness,handednesses:t.handedness}}function f1(t,s=!0){const n=[];for(const u of t){var o=ig(u);t=[];for(const h of o.g())o=s&&Jn(h,1)!=null?gi(Jn(h,1),0):-1,t.push({score:xs(h,2)??0,index:o,categoryName:Bi(h,3)??"",displayName:Bi(h,4)??""});n.push(t)}return n}var kn=class extends yn{constructor(t,s){super(new ti(t,s),"image_in","norm_rect",!1),this.gestures=[],this.landmarks=[],this.worldLandmarks=[],this.handedness=[],Xt(t=this.j=new lv,0,1,s=new os),this.s=new by,Xt(this.j,0,2,this.s),this.C=new wy,Xt(this.s,0,3,this.C),this.v=new av,Xt(this.s,0,2,this.v),this.h=new $x,Xt(this.j,0,3,this.h),Rt(this.v,2,.5),Rt(this.s,4,.5),Rt(this.C,2,.5)}get baseOptions(){return Fr(this.j,os,1)}set baseOptions(t){Xt(this.j,0,1,t)}o(t){var u,h,v,P;if(Ri(this.v,3,t.numHands??1),"minHandDetectionConfidence"in t&&Rt(this.v,2,t.minHandDetectionConfidence??.5),"minTrackingConfidence"in t&&Rt(this.s,4,t.minTrackingConfidence??.5),"minHandPresenceConfidence"in t&&Rt(this.C,2,t.minHandPresenceConfidence??.5),t.cannedGesturesClassifierOptions){var s=new Ic,n=s,o=P_(t.cannedGesturesClassifierOptions,(u=Fr(this.h,Ic,3))==null?void 0:u.h());Xt(n,0,2,o),Xt(this.h,0,3,s)}else t.cannedGesturesClassifierOptions===void 0&&((h=Fr(this.h,Ic,3))==null||h.g());return t.customGesturesClassifierOptions?(Xt(n=s=new Ic,0,2,o=P_(t.customGesturesClassifierOptions,(v=Fr(this.h,Ic,4))==null?void 0:v.h())),Xt(this.h,0,4,s)):t.customGesturesClassifierOptions===void 0&&((P=Fr(this.h,Ic,4))==null||P.g()),this.l(t)}Ka(t,s){return h1(this),ri(this,t,s),m1(this)}La(t,s,n){return h1(this),Ui(this,t,n,s),m1(this)}m(){var t=new vn;rs(t,"image_in"),rs(t,"norm_rect"),Lr(t,"hand_gestures"),Lr(t,"hand_landmarks"),Lr(t,"world_hand_landmarks"),Lr(t,"handedness");const s=new In;yi(s,Fx,this.j);const n=new on;$n(n,"mediapipe.tasks.vision.gesture_recognizer.GestureRecognizerGraph"),es(n,"IMAGE:image_in"),es(n,"NORM_RECT:norm_rect"),Er(n,"HAND_GESTURES:hand_gestures"),Er(n,"LANDMARKS:hand_landmarks"),Er(n,"WORLD_LANDMARKS:world_hand_landmarks"),Er(n,"HANDEDNESS:handedness"),n.o(s),Fn(t,n),this.g.attachProtoVectorListener("hand_landmarks",(o,u)=>{for(const h of o){o=rm(h);const v=[];for(const P of co(o,Yb,1))v.push({x:xs(P,1)??0,y:xs(P,2)??0,z:xs(P,3)??0,visibility:xs(P,4)??0});this.landmarks.push(v)}It(this,u)}),this.g.attachEmptyPacketListener("hand_landmarks",o=>{It(this,o)}),this.g.attachProtoVectorListener("world_hand_landmarks",(o,u)=>{for(const h of o){o=Lc(h);const v=[];for(const P of co(o,Qb,1))v.push({x:xs(P,1)??0,y:xs(P,2)??0,z:xs(P,3)??0,visibility:xs(P,4)??0});this.worldLandmarks.push(v)}It(this,u)}),this.g.attachEmptyPacketListener("world_hand_landmarks",o=>{It(this,o)}),this.g.attachProtoVectorListener("hand_gestures",(o,u)=>{this.gestures.push(...f1(o,!1)),It(this,u)}),this.g.attachEmptyPacketListener("hand_gestures",o=>{It(this,o)}),this.g.attachProtoVectorListener("handedness",(o,u)=>{this.handedness.push(...f1(o)),It(this,u)}),this.g.attachEmptyPacketListener("handedness",o=>{It(this,o)}),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};function g1(t){return{landmarks:t.landmarks,worldLandmarks:t.worldLandmarks,handednesses:t.handedness,handedness:t.handedness}}kn.prototype.recognizeForVideo=kn.prototype.La,kn.prototype.recognize=kn.prototype.Ka,kn.prototype.setOptions=kn.prototype.o,kn.createFromModelPath=function(t,s){return vr(kn,t,{baseOptions:{modelAssetPath:s}})},kn.createFromModelBuffer=function(t,s){return vr(kn,t,{baseOptions:{modelAssetBuffer:s}})},kn.createFromOptions=function(t,s){return vr(kn,t,s)},kn.HAND_CONNECTIONS=Ly;var En=class extends yn{constructor(t,s){super(new ti(t,s),"image_in","norm_rect",!1),this.landmarks=[],this.worldLandmarks=[],this.handedness=[],Xt(t=this.h=new by,0,1,s=new os),this.s=new wy,Xt(this.h,0,3,this.s),this.j=new av,Xt(this.h,0,2,this.j),Ri(this.j,3,1),Rt(this.j,2,.5),Rt(this.s,2,.5),Rt(this.h,4,.5)}get baseOptions(){return Fr(this.h,os,1)}set baseOptions(t){Xt(this.h,0,1,t)}o(t){return"numHands"in t&&Ri(this.j,3,t.numHands??1),"minHandDetectionConfidence"in t&&Rt(this.j,2,t.minHandDetectionConfidence??.5),"minTrackingConfidence"in t&&Rt(this.h,4,t.minTrackingConfidence??.5),"minHandPresenceConfidence"in t&&Rt(this.s,2,t.minHandPresenceConfidence??.5),this.l(t)}D(t,s){return this.landmarks=[],this.worldLandmarks=[],this.handedness=[],ri(this,t,s),g1(this)}F(t,s,n){return this.landmarks=[],this.worldLandmarks=[],this.handedness=[],Ui(this,t,n,s),g1(this)}m(){var t=new vn;rs(t,"image_in"),rs(t,"norm_rect"),Lr(t,"hand_landmarks"),Lr(t,"world_hand_landmarks"),Lr(t,"handedness");const s=new In;yi(s,Ox,this.h);const n=new on;$n(n,"mediapipe.tasks.vision.hand_landmarker.HandLandmarkerGraph"),es(n,"IMAGE:image_in"),es(n,"NORM_RECT:norm_rect"),Er(n,"LANDMARKS:hand_landmarks"),Er(n,"WORLD_LANDMARKS:world_hand_landmarks"),Er(n,"HANDEDNESS:handedness"),n.o(s),Fn(t,n),this.g.attachProtoVectorListener("hand_landmarks",(o,u)=>{for(const h of o)o=rm(h),this.landmarks.push(ag(o));It(this,u)}),this.g.attachEmptyPacketListener("hand_landmarks",o=>{It(this,o)}),this.g.attachProtoVectorListener("world_hand_landmarks",(o,u)=>{for(const h of o)o=Lc(h),this.worldLandmarks.push(qh(o));It(this,u)}),this.g.attachEmptyPacketListener("world_hand_landmarks",o=>{It(this,o)}),this.g.attachProtoVectorListener("handedness",(o,u)=>{var h=this.handedness,v=h.push;const P=[];for(const f of o){o=ig(f);const b=[];for(const x of o.g())b.push({score:xs(x,2)??0,index:gi(Jn(x,1),0)??-1,categoryName:Bi(x,3)??"",displayName:Bi(x,4)??""});P.push(b)}v.call(h,...P),It(this,u)}),this.g.attachEmptyPacketListener("handedness",o=>{It(this,o)}),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};En.prototype.detectForVideo=En.prototype.F,En.prototype.detect=En.prototype.D,En.prototype.setOptions=En.prototype.o,En.createFromModelPath=function(t,s){return vr(En,t,{baseOptions:{modelAssetPath:s}})},En.createFromModelBuffer=function(t,s){return vr(En,t,{baseOptions:{modelAssetBuffer:s}})},En.createFromOptions=function(t,s){return vr(En,t,s)},En.HAND_CONNECTIONS=Ly;var Ov=vi([0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]);function _1(t){t.h={faceLandmarks:[],faceBlendshapes:[],poseLandmarks:[],poseWorldLandmarks:[],poseSegmentationMasks:[],leftHandLandmarks:[],leftHandWorldLandmarks:[],rightHandLandmarks:[],rightHandWorldLandmarks:[]}}function y1(t){try{if(!t.C)return t.h;t.C(t.h)}finally{cg(t)}}function ff(t,s){t=rm(t),s.push(ag(t))}var ns=class extends yn{constructor(t,s){super(new ti(t,s),"input_frames_image",null,!1),this.h={faceLandmarks:[],faceBlendshapes:[],poseLandmarks:[],poseWorldLandmarks:[],poseSegmentationMasks:[],leftHandLandmarks:[],leftHandWorldLandmarks:[],rightHandLandmarks:[],rightHandWorldLandmarks:[]},this.outputPoseSegmentationMasks=this.outputFaceBlendshapes=!1,Xt(t=this.j=new hv,0,1,s=new os),this.K=new wy,Xt(this.j,0,2,this.K),this.aa=new zx,Xt(this.j,0,3,this.aa),this.s=new og,Xt(this.j,0,4,this.s),this.I=new rv,Xt(this.j,0,5,this.I),this.v=new dv,Xt(this.j,0,6,this.v),this.L=new pv,Xt(this.j,0,7,this.L),Rt(this.s,2,.5),Rt(this.s,3,.3),Rt(this.I,2,.5),Rt(this.v,2,.5),Rt(this.v,3,.3),Rt(this.L,2,.5),Rt(this.K,2,.5)}get baseOptions(){return Fr(this.j,os,1)}set baseOptions(t){Xt(this.j,0,1,t)}o(t){return"minFaceDetectionConfidence"in t&&Rt(this.s,2,t.minFaceDetectionConfidence??.5),"minFaceSuppressionThreshold"in t&&Rt(this.s,3,t.minFaceSuppressionThreshold??.3),"minFacePresenceConfidence"in t&&Rt(this.I,2,t.minFacePresenceConfidence??.5),"outputFaceBlendshapes"in t&&(this.outputFaceBlendshapes=!!t.outputFaceBlendshapes),"minPoseDetectionConfidence"in t&&Rt(this.v,2,t.minPoseDetectionConfidence??.5),"minPoseSuppressionThreshold"in t&&Rt(this.v,3,t.minPoseSuppressionThreshold??.3),"minPosePresenceConfidence"in t&&Rt(this.L,2,t.minPosePresenceConfidence??.5),"outputPoseSegmentationMasks"in t&&(this.outputPoseSegmentationMasks=!!t.outputPoseSegmentationMasks),"minHandLandmarksConfidence"in t&&Rt(this.K,2,t.minHandLandmarksConfidence??.5),this.l(t)}D(t,s,n){const o=typeof s!="function"?s:{};return this.C=typeof s=="function"?s:n,_1(this),ri(this,t,o),y1(this)}F(t,s,n,o){const u=typeof n!="function"?n:{};return this.C=typeof n=="function"?n:o,_1(this),Ui(this,t,u,s),y1(this)}m(){var t=new vn;rs(t,"input_frames_image"),Lr(t,"pose_landmarks"),Lr(t,"pose_world_landmarks"),Lr(t,"face_landmarks"),Lr(t,"left_hand_landmarks"),Lr(t,"left_hand_world_landmarks"),Lr(t,"right_hand_landmarks"),Lr(t,"right_hand_world_landmarks");const s=new In,n=new Nw;v_(n,1,Kc("type.googleapis.com/mediapipe.tasks.vision.holistic_landmarker.proto.HolisticLandmarkerGraphOptions"),""),function(u,h){if(h!=null)if(Array.isArray(h))Zr(u,2,Kf(h,X_,void 0,void 0,!1));else{if(!(typeof h=="string"||h instanceof ao||Yh(h)))throw Error("invalid value in Any.value field: "+h+" expected a ByteString, a base64 encoded string, a Uint8Array or a jspb array");v_(u,2,B_(h,!1,!1),Wa())}}(n,this.j.g());const o=new on;$n(o,"mediapipe.tasks.vision.holistic_landmarker.HolisticLandmarkerGraph"),If(o,8,Nw,n),es(o,"IMAGE:input_frames_image"),Er(o,"POSE_LANDMARKS:pose_landmarks"),Er(o,"POSE_WORLD_LANDMARKS:pose_world_landmarks"),Er(o,"FACE_LANDMARKS:face_landmarks"),Er(o,"LEFT_HAND_LANDMARKS:left_hand_landmarks"),Er(o,"LEFT_HAND_WORLD_LANDMARKS:left_hand_world_landmarks"),Er(o,"RIGHT_HAND_LANDMARKS:right_hand_landmarks"),Er(o,"RIGHT_HAND_WORLD_LANDMARKS:right_hand_world_landmarks"),o.o(s),Fn(t,o),lg(this,t),this.g.attachProtoListener("pose_landmarks",(u,h)=>{ff(u,this.h.poseLandmarks),It(this,h)}),this.g.attachEmptyPacketListener("pose_landmarks",u=>{It(this,u)}),this.g.attachProtoListener("pose_world_landmarks",(u,h)=>{var v=this.h.poseWorldLandmarks;u=Lc(u),v.push(qh(u)),It(this,h)}),this.g.attachEmptyPacketListener("pose_world_landmarks",u=>{It(this,u)}),this.outputPoseSegmentationMasks&&(Er(o,"POSE_SEGMENTATION_MASK:pose_segmentation_mask"),Nc(this,"pose_segmentation_mask"),this.g.V("pose_segmentation_mask",(u,h)=>{this.h.poseSegmentationMasks=[Wc(this,u,!0,!this.C)],It(this,h)}),this.g.attachEmptyPacketListener("pose_segmentation_mask",u=>{this.h.poseSegmentationMasks=[],It(this,u)})),this.g.attachProtoListener("face_landmarks",(u,h)=>{ff(u,this.h.faceLandmarks),It(this,h)}),this.g.attachEmptyPacketListener("face_landmarks",u=>{It(this,u)}),this.outputFaceBlendshapes&&(Lr(t,"extra_blendshapes"),Er(o,"FACE_BLENDSHAPES:extra_blendshapes"),this.g.attachProtoListener("extra_blendshapes",(u,h)=>{var v=this.h.faceBlendshapes;this.outputFaceBlendshapes&&(u=ig(u),v.push(Ty(u.g()??[]))),It(this,h)}),this.g.attachEmptyPacketListener("extra_blendshapes",u=>{It(this,u)})),this.g.attachProtoListener("left_hand_landmarks",(u,h)=>{ff(u,this.h.leftHandLandmarks),It(this,h)}),this.g.attachEmptyPacketListener("left_hand_landmarks",u=>{It(this,u)}),this.g.attachProtoListener("left_hand_world_landmarks",(u,h)=>{var v=this.h.leftHandWorldLandmarks;u=Lc(u),v.push(qh(u)),It(this,h)}),this.g.attachEmptyPacketListener("left_hand_world_landmarks",u=>{It(this,u)}),this.g.attachProtoListener("right_hand_landmarks",(u,h)=>{ff(u,this.h.rightHandLandmarks),It(this,h)}),this.g.attachEmptyPacketListener("right_hand_landmarks",u=>{It(this,u)}),this.g.attachProtoListener("right_hand_world_landmarks",(u,h)=>{var v=this.h.rightHandWorldLandmarks;u=Lc(u),v.push(qh(u)),It(this,h)}),this.g.attachEmptyPacketListener("right_hand_world_landmarks",u=>{It(this,u)}),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};ns.prototype.detectForVideo=ns.prototype.F,ns.prototype.detect=ns.prototype.D,ns.prototype.setOptions=ns.prototype.o,ns.createFromModelPath=function(t,s){return vr(ns,t,{baseOptions:{modelAssetPath:s}})},ns.createFromModelBuffer=function(t,s){return vr(ns,t,{baseOptions:{modelAssetBuffer:s}})},ns.createFromOptions=function(t,s){return vr(ns,t,s)},ns.HAND_CONNECTIONS=Ly,ns.POSE_CONNECTIONS=Ov,ns.FACE_LANDMARKS_LIPS=Ay,ns.FACE_LANDMARKS_LEFT_EYE=Iy,ns.FACE_LANDMARKS_LEFT_EYEBROW=$y,ns.FACE_LANDMARKS_LEFT_IRIS=Av,ns.FACE_LANDMARKS_RIGHT_EYE=Fy,ns.FACE_LANDMARKS_RIGHT_EYEBROW=Oy,ns.FACE_LANDMARKS_RIGHT_IRIS=Iv,ns.FACE_LANDMARKS_FACE_OVAL=zy,ns.FACE_LANDMARKS_CONTOURS=$v,ns.FACE_LANDMARKS_TESSELATION=Fv;var Hn=class extends yn{constructor(t,s){super(new ti(t,s),"input_image","norm_rect",!0),this.j={classifications:[]},Xt(t=this.h=new mv,0,1,s=new os)}get baseOptions(){return Fr(this.h,os,1)}set baseOptions(t){Xt(this.h,0,1,t)}o(t){return Xt(this.h,0,2,P_(t,Fr(this.h,gy,2))),this.l(t)}ua(t,s){return this.j={classifications:[]},ri(this,t,s),this.j}va(t,s,n){return this.j={classifications:[]},Ui(this,t,n,s),this.j}m(){var t=new vn;rs(t,"input_image"),rs(t,"norm_rect"),Lr(t,"classifications");const s=new In;yi(s,Lx,this.h);const n=new on;$n(n,"mediapipe.tasks.vision.image_classifier.ImageClassifierGraph"),es(n,"IMAGE:input_image"),es(n,"NORM_RECT:norm_rect"),Er(n,"CLASSIFICATIONS:classifications"),n.o(s),Fn(t,n),this.g.attachProtoListener("classifications",(o,u)=>{this.j=function(h){const v={classifications:co(h,Mx,1).map(P=>{var f;return Ty(((f=Fr(P,Kb,4))==null?void 0:f.g())??[],gi(Jn(P,2),0),Bi(P,3))})};return Cf(qo(h,2))!=null&&(v.timestampMs=gi(Cf(qo(h,2)),0)),v}(xx(o)),It(this,u)}),this.g.attachEmptyPacketListener("classifications",o=>{It(this,o)}),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Hn.prototype.classifyForVideo=Hn.prototype.va,Hn.prototype.classify=Hn.prototype.ua,Hn.prototype.setOptions=Hn.prototype.o,Hn.createFromModelPath=function(t,s){return vr(Hn,t,{baseOptions:{modelAssetPath:s}})},Hn.createFromModelBuffer=function(t,s){return vr(Hn,t,{baseOptions:{modelAssetBuffer:s}})},Hn.createFromOptions=function(t,s){return vr(Hn,t,s)};var Pn=class extends yn{constructor(t,s){super(new ti(t,s),"image_in","norm_rect",!0),this.h=new fv,this.embeddings={embeddings:[]},Xt(t=this.h,0,1,s=new os)}get baseOptions(){return Fr(this.h,os,1)}set baseOptions(t){Xt(this.h,0,1,t)}o(t){var s=this.h,n=Fr(this.h,Qw,2);return n=n?n.clone():new Qw,t.l2Normalize!==void 0?Xh(n,1,t.l2Normalize):"l2Normalize"in t&&Zr(n,1),t.quantize!==void 0?Xh(n,2,t.quantize):"quantize"in t&&Zr(n,2),Xt(s,0,2,n),this.l(t)}Ba(t,s){return ri(this,t,s),this.embeddings}Ca(t,s,n){return Ui(this,t,n,s),this.embeddings}m(){var t=new vn;rs(t,"image_in"),rs(t,"norm_rect"),Lr(t,"embeddings_out");const s=new In;yi(s,Dx,this.h);const n=new on;$n(n,"mediapipe.tasks.vision.image_embedder.ImageEmbedderGraph"),es(n,"IMAGE:image_in"),es(n,"NORM_RECT:norm_rect"),Er(n,"EMBEDDINGS:embeddings_out"),n.o(s),Fn(t,n),this.g.attachProtoListener("embeddings_out",(o,u)=>{o=Ex(o),this.embeddings=function(h){return{embeddings:co(h,kx,1).map(v=>{var f,b;const P={headIndex:gi(Jn(v,3),0)??-1,headName:Bi(v,4)??""};if(hb(v,Xw,s_(v,1))!==void 0)v=Ra(v=Fr(v,Xw,s_(v,1)),1,Qo,Ba()),P.floatEmbedding=v.slice();else{const x=new Uint8Array(0);P.quantizedEmbedding=((b=(f=Fr(v,Tx,s_(v,2)))==null?void 0:f.qa())==null?void 0:b.h())??x}return P}),timestampMs:gi(Cf(qo(h,2)),0)}}(o),It(this,u)}),this.g.attachEmptyPacketListener("embeddings_out",o=>{It(this,o)}),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Pn.cosineSimilarity=function(t,s){if(t.floatEmbedding&&s.floatEmbedding)t=t1(t.floatEmbedding,s.floatEmbedding);else{if(!t.quantizedEmbedding||!s.quantizedEmbedding)throw Error("Cannot compute cosine similarity between quantized and float embeddings.");t=t1(e1(t.quantizedEmbedding),e1(s.quantizedEmbedding))}return t},Pn.prototype.embedForVideo=Pn.prototype.Ca,Pn.prototype.embed=Pn.prototype.Ba,Pn.prototype.setOptions=Pn.prototype.o,Pn.createFromModelPath=function(t,s){return vr(Pn,t,{baseOptions:{modelAssetPath:s}})},Pn.createFromModelBuffer=function(t,s){return vr(Pn,t,{baseOptions:{modelAssetBuffer:s}})},Pn.createFromOptions=function(t,s){return vr(Pn,t,s)};var A_=class{constructor(t,s,n){this.confidenceMasks=t,this.categoryMask=s,this.qualityScores=n}close(){var t,s;(t=this.confidenceMasks)==null||t.forEach(n=>{n.close()}),(s=this.categoryMask)==null||s.close()}};function w1(t){t.categoryMask=void 0,t.confidenceMasks=void 0,t.qualityScores=void 0}function b1(t){try{const s=new A_(t.confidenceMasks,t.categoryMask,t.qualityScores);if(!t.j)return s;t.j(s)}finally{cg(t)}}A_.prototype.close=A_.prototype.close;var fn=class extends yn{constructor(t,s){super(new ti(t,s),"image_in","norm_rect",!1),this.s=[],this.outputCategoryMask=!1,this.outputConfidenceMasks=!0,this.h=new xy,this.v=new gv,Xt(this.h,0,3,this.v),Xt(t=this.h,0,1,s=new os)}get baseOptions(){return Fr(this.h,os,1)}set baseOptions(t){Xt(this.h,0,1,t)}o(t){return t.displayNamesLocale!==void 0?Zr(this.h,2,Kc(t.displayNamesLocale)):"displayNamesLocale"in t&&Zr(this.h,2),"outputCategoryMask"in t&&(this.outputCategoryMask=t.outputCategoryMask??!1),"outputConfidenceMasks"in t&&(this.outputConfidenceMasks=t.outputConfidenceMasks??!0),super.l(t)}J(){(function(t){var n,o;const s=co(t.ea(),on,1).filter(u=>Bi(u,1).includes("mediapipe.tasks.TensorsToSegmentationCalculator"));if(t.s=[],s.length>1)throw Error("The graph has more than one mediapipe.tasks.TensorsToSegmentationCalculator.");s.length===1&&(((o=(n=Fr(s[0],In,7))==null?void 0:n.l())==null?void 0:o.g())??new Map).forEach((u,h)=>{t.s[Number(h)]=Bi(u,1)})})(this)}fa(t,s,n){const o=typeof s!="function"?s:{};return this.j=typeof s=="function"?s:n,w1(this),ri(this,t,o),b1(this)}Na(t,s,n,o){const u=typeof n!="function"?n:{};return this.j=typeof n=="function"?n:o,w1(this),Ui(this,t,u,s),b1(this)}Fa(){return this.s}m(){var t=new vn;rs(t,"image_in"),rs(t,"norm_rect");const s=new In;yi(s,yv,this.h);const n=new on;$n(n,"mediapipe.tasks.vision.image_segmenter.ImageSegmenterGraph"),es(n,"IMAGE:image_in"),es(n,"NORM_RECT:norm_rect"),n.o(s),Fn(t,n),lg(this,t),this.outputConfidenceMasks&&(Lr(t,"confidence_masks"),Er(n,"CONFIDENCE_MASKS:confidence_masks"),Nc(this,"confidence_masks"),this.g.da("confidence_masks",(o,u)=>{this.confidenceMasks=o.map(h=>Wc(this,h,!0,!this.j)),It(this,u)}),this.g.attachEmptyPacketListener("confidence_masks",o=>{this.confidenceMasks=[],It(this,o)})),this.outputCategoryMask&&(Lr(t,"category_mask"),Er(n,"CATEGORY_MASK:category_mask"),Nc(this,"category_mask"),this.g.V("category_mask",(o,u)=>{this.categoryMask=Wc(this,o,!1,!this.j),It(this,u)}),this.g.attachEmptyPacketListener("category_mask",o=>{this.categoryMask=void 0,It(this,o)})),Lr(t,"quality_scores"),Er(n,"QUALITY_SCORES:quality_scores"),this.g.attachFloatVectorListener("quality_scores",(o,u)=>{this.qualityScores=o,It(this,u)}),this.g.attachEmptyPacketListener("quality_scores",o=>{this.categoryMask=void 0,It(this,o)}),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};fn.prototype.getLabels=fn.prototype.Fa,fn.prototype.segmentForVideo=fn.prototype.Na,fn.prototype.segment=fn.prototype.fa,fn.prototype.setOptions=fn.prototype.o,fn.createFromModelPath=function(t,s){return vr(fn,t,{baseOptions:{modelAssetPath:s}})},fn.createFromModelBuffer=function(t,s){return vr(fn,t,{baseOptions:{modelAssetBuffer:s}})},fn.createFromOptions=function(t,s){return vr(fn,t,s)};var I_=class{constructor(t,s,n){this.confidenceMasks=t,this.categoryMask=s,this.qualityScores=n}close(){var t,s;(t=this.confidenceMasks)==null||t.forEach(n=>{n.close()}),(s=this.categoryMask)==null||s.close()}};I_.prototype.close=I_.prototype.close;var Gx=class extends Lt{constructor(t){super(t)}},$c=[0,bs,-2],Lf=[0,no,-3,ps,no,-1],v1=[0,Lf],M1=[0,Lf,bs,-1],c_=class extends Lt{constructor(t){super(t)}},x1=[0,no,-1,ps],qx=class extends Lt{constructor(){super()}},T1=class extends Lt{constructor(t){super(t)}},$_=[1,2,3,4,5,6,7,8,9,10,14,15],zv=class extends Lt{constructor(){super()}};zv.prototype.g=ng([0,Ds,[0,$_,Kr,Lf,Kr,[0,Lf,$c],Kr,v1,Kr,[0,v1,$c],Kr,x1,Kr,[0,no,-3,ps,_i],Kr,[0,no,-3,ps],Kr,[0,Vr,no,-2,ps,bs,ps,-1,2,no,$c],Kr,M1,Kr,[0,M1,$c],no,$c,Vr,Kr,[0,no,-3,ps,$c,-1],Kr,[0,Ds,x1]],Vr,[0,Vr,bs,-1,ps]]);var Li=class extends yn{constructor(t,s){super(new ti(t,s),"image_in","norm_rect_in",!1),this.outputCategoryMask=!1,this.outputConfidenceMasks=!0,this.h=new xy,this.s=new gv,Xt(this.h,0,3,this.s),Xt(t=this.h,0,1,s=new os)}get baseOptions(){return Fr(this.h,os,1)}set baseOptions(t){Xt(this.h,0,1,t)}o(t){return"outputCategoryMask"in t&&(this.outputCategoryMask=t.outputCategoryMask??!1),"outputConfidenceMasks"in t&&(this.outputConfidenceMasks=t.outputConfidenceMasks??!0),super.l(t)}fa(t,s,n,o){const u=typeof n!="function"?n:{};this.j=typeof n=="function"?n:o,this.qualityScores=this.categoryMask=this.confidenceMasks=void 0,n=this.B+1,o=new zv;const h=new T1;var v=new Gx;if(Ri(v,1,255),Xt(h,0,12,v),s.keypoint&&s.scribble)throw Error("Cannot provide both keypoint and scribble.");if(s.keypoint){var P=new c_;Xh(P,3,!0),Rt(P,1,s.keypoint.x),Rt(P,2,s.keypoint.y),Vh(h,5,$_,P)}else{if(!s.scribble)throw Error("Must provide either a keypoint or a scribble.");for(P of(v=new qx,s.scribble))Xh(s=new c_,3,!0),Rt(s,1,P.x),Rt(s,2,P.y),If(v,1,c_,s);Vh(h,15,$_,v)}If(o,1,T1,h),this.g.addProtoToStream(o.g(),"drishti.RenderData","roi_in",n),ri(this,t,u);e:{try{const b=new I_(this.confidenceMasks,this.categoryMask,this.qualityScores);if(!this.j){var f=b;break e}this.j(b)}finally{cg(this)}f=void 0}return f}m(){var t=new vn;rs(t,"image_in"),rs(t,"roi_in"),rs(t,"norm_rect_in");const s=new In;yi(s,yv,this.h);const n=new on;$n(n,"mediapipe.tasks.vision.interactive_segmenter.InteractiveSegmenterGraph"),es(n,"IMAGE:image_in"),es(n,"ROI:roi_in"),es(n,"NORM_RECT:norm_rect_in"),n.o(s),Fn(t,n),lg(this,t),this.outputConfidenceMasks&&(Lr(t,"confidence_masks"),Er(n,"CONFIDENCE_MASKS:confidence_masks"),Nc(this,"confidence_masks"),this.g.da("confidence_masks",(o,u)=>{this.confidenceMasks=o.map(h=>Wc(this,h,!0,!this.j)),It(this,u)}),this.g.attachEmptyPacketListener("confidence_masks",o=>{this.confidenceMasks=[],It(this,o)})),this.outputCategoryMask&&(Lr(t,"category_mask"),Er(n,"CATEGORY_MASK:category_mask"),Nc(this,"category_mask"),this.g.V("category_mask",(o,u)=>{this.categoryMask=Wc(this,o,!1,!this.j),It(this,u)}),this.g.attachEmptyPacketListener("category_mask",o=>{this.categoryMask=void 0,It(this,o)})),Lr(t,"quality_scores"),Er(n,"QUALITY_SCORES:quality_scores"),this.g.attachFloatVectorListener("quality_scores",(o,u)=>{this.qualityScores=o,It(this,u)}),this.g.attachEmptyPacketListener("quality_scores",o=>{this.categoryMask=void 0,It(this,o)}),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Li.prototype.segment=Li.prototype.fa,Li.prototype.setOptions=Li.prototype.o,Li.createFromModelPath=function(t,s){return vr(Li,t,{baseOptions:{modelAssetPath:s}})},Li.createFromModelBuffer=function(t,s){return vr(Li,t,{baseOptions:{modelAssetBuffer:s}})},Li.createFromOptions=function(t,s){return vr(Li,t,s)};var Xn=class extends yn{constructor(t,s){super(new ti(t,s),"input_frame_gpu","norm_rect",!1),this.j={detections:[]},Xt(t=this.h=new wv,0,1,s=new os)}get baseOptions(){return Fr(this.h,os,1)}set baseOptions(t){Xt(this.h,0,1,t)}o(t){return t.displayNamesLocale!==void 0?Zr(this.h,2,Kc(t.displayNamesLocale)):"displayNamesLocale"in t&&Zr(this.h,2),t.maxResults!==void 0?Ri(this.h,3,t.maxResults):"maxResults"in t&&Zr(this.h,3),t.scoreThreshold!==void 0?Rt(this.h,4,t.scoreThreshold):"scoreThreshold"in t&&Zr(this.h,4),t.categoryAllowlist!==void 0?$f(this.h,5,t.categoryAllowlist):"categoryAllowlist"in t&&Zr(this.h,5),t.categoryDenylist!==void 0?$f(this.h,6,t.categoryDenylist):"categoryDenylist"in t&&Zr(this.h,6),this.l(t)}D(t,s){return this.j={detections:[]},ri(this,t,s),this.j}F(t,s,n){return this.j={detections:[]},Ui(this,t,n,s),this.j}m(){var t=new vn;rs(t,"input_frame_gpu"),rs(t,"norm_rect"),Lr(t,"detections");const s=new In;yi(s,Bx,this.h);const n=new on;$n(n,"mediapipe.tasks.vision.ObjectDetectorGraph"),es(n,"IMAGE:input_frame_gpu"),es(n,"NORM_RECT:norm_rect"),Er(n,"DETECTIONS:detections"),n.o(s),Fn(t,n),this.g.attachProtoVectorListener("detections",(o,u)=>{for(const h of o)o=Xb(h),this.j.detections.push(vv(o));It(this,u)}),this.g.attachEmptyPacketListener("detections",o=>{It(this,o)}),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Xn.prototype.detectForVideo=Xn.prototype.F,Xn.prototype.detect=Xn.prototype.D,Xn.prototype.setOptions=Xn.prototype.o,Xn.createFromModelPath=async function(t,s){return vr(Xn,t,{baseOptions:{modelAssetPath:s}})},Xn.createFromModelBuffer=function(t,s){return vr(Xn,t,{baseOptions:{modelAssetBuffer:s}})},Xn.createFromOptions=function(t,s){return vr(Xn,t,s)};var F_=class{constructor(t,s,n){this.landmarks=t,this.worldLandmarks=s,this.segmentationMasks=n}close(){var t;(t=this.segmentationMasks)==null||t.forEach(s=>{s.close()})}};function k1(t){t.landmarks=[],t.worldLandmarks=[],t.segmentationMasks=void 0}function E1(t){try{const s=new F_(t.landmarks,t.worldLandmarks,t.segmentationMasks);if(!t.s)return s;t.s(s)}finally{cg(t)}}F_.prototype.close=F_.prototype.close;var Cn=class extends yn{constructor(t,s){super(new ti(t,s),"image_in","norm_rect",!1),this.landmarks=[],this.worldLandmarks=[],this.outputSegmentationMasks=!1,Xt(t=this.h=new bv,0,1,s=new os),this.v=new pv,Xt(this.h,0,3,this.v),this.j=new dv,Xt(this.h,0,2,this.j),Ri(this.j,4,1),Rt(this.j,2,.5),Rt(this.v,2,.5),Rt(this.h,4,.5)}get baseOptions(){return Fr(this.h,os,1)}set baseOptions(t){Xt(this.h,0,1,t)}o(t){return"numPoses"in t&&Ri(this.j,4,t.numPoses??1),"minPoseDetectionConfidence"in t&&Rt(this.j,2,t.minPoseDetectionConfidence??.5),"minTrackingConfidence"in t&&Rt(this.h,4,t.minTrackingConfidence??.5),"minPosePresenceConfidence"in t&&Rt(this.v,2,t.minPosePresenceConfidence??.5),"outputSegmentationMasks"in t&&(this.outputSegmentationMasks=t.outputSegmentationMasks??!1),this.l(t)}D(t,s,n){const o=typeof s!="function"?s:{};return this.s=typeof s=="function"?s:n,k1(this),ri(this,t,o),E1(this)}F(t,s,n,o){const u=typeof n!="function"?n:{};return this.s=typeof n=="function"?n:o,k1(this),Ui(this,t,u,s),E1(this)}m(){var t=new vn;rs(t,"image_in"),rs(t,"norm_rect"),Lr(t,"normalized_landmarks"),Lr(t,"world_landmarks"),Lr(t,"segmentation_masks");const s=new In;yi(s,Rx,this.h);const n=new on;$n(n,"mediapipe.tasks.vision.pose_landmarker.PoseLandmarkerGraph"),es(n,"IMAGE:image_in"),es(n,"NORM_RECT:norm_rect"),Er(n,"NORM_LANDMARKS:normalized_landmarks"),Er(n,"WORLD_LANDMARKS:world_landmarks"),n.o(s),Fn(t,n),lg(this,t),this.g.attachProtoVectorListener("normalized_landmarks",(o,u)=>{this.landmarks=[];for(const h of o)o=rm(h),this.landmarks.push(ag(o));It(this,u)}),this.g.attachEmptyPacketListener("normalized_landmarks",o=>{this.landmarks=[],It(this,o)}),this.g.attachProtoVectorListener("world_landmarks",(o,u)=>{this.worldLandmarks=[];for(const h of o)o=Lc(h),this.worldLandmarks.push(qh(o));It(this,u)}),this.g.attachEmptyPacketListener("world_landmarks",o=>{this.worldLandmarks=[],It(this,o)}),this.outputSegmentationMasks&&(Er(n,"SEGMENTATION_MASK:segmentation_masks"),Nc(this,"segmentation_masks"),this.g.da("segmentation_masks",(o,u)=>{this.segmentationMasks=o.map(h=>Wc(this,h,!0,!this.s)),It(this,u)}),this.g.attachEmptyPacketListener("segmentation_masks",o=>{this.segmentationMasks=[],It(this,o)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Cn.prototype.detectForVideo=Cn.prototype.F,Cn.prototype.detect=Cn.prototype.D,Cn.prototype.setOptions=Cn.prototype.o,Cn.createFromModelPath=function(t,s){return vr(Cn,t,{baseOptions:{modelAssetPath:s}})},Cn.createFromModelBuffer=function(t,s){return vr(Cn,t,{baseOptions:{modelAssetBuffer:s}})},Cn.createFromOptions=function(t,s){return vr(Cn,t,s)},Cn.POSE_CONNECTIONS=Ov;var Kx=F1('<video id="webcam" autoplay class="hidden w-full h-full bg-black"></video>',2);function Hx(t,s){z1(s,!1);const n=_n(),o=_n(),u=_n(),h=_n(),v=_n(),P=yM();let f,b=_n(),x=_n([{score:0,categoryName:"eyeBlinkLeft"},{score:0,categoryName:"eyeBlinkRight"}]),k=_n(!1),C=_n(!1),N=25,X=_n(0),oe="Start typing: ";setInterval(()=>{Ws(X,(Pt(X)+1)%26)},140);function re(){oe+=Pt(v),P("blink",{left:Pt(n),right:Pt(o)})}j1(async()=>{const H=await ja.forVisionTasks();f=await ds.createFromOptions(H,{baseOptions:{modelAssetPath:"/face_landmarker.task",delegate:"GPU"},outputFaceBlendshapes:!0,runningMode:"VIDEO",numFaces:1}),navigator.mediaDevices.getUserMedia({video:!0}).then(te=>{Ns(b,Pt(b).srcObject=te),Ns(b,Pt(b).onloadeddata=()=>{const G=async()=>{const D=await f.detectForVideo(Pt(b),performance.now());D.faceBlendshapes.length&&Ws(x,D.faceBlendshapes[0].categories),requestAnimationFrame(G)};G()})})}),Ro(()=>Pt(x),()=>{Ws(n,Pt(x).find(H=>H.categoryName==="eyeBlinkLeft").score)}),Ro(()=>Pt(x),()=>{Ws(o,Pt(x).find(H=>H.categoryName==="eyeBlinkRight").score)}),Ro(()=>Pt(n),()=>{Ws(u,Math.max(0,Math.min(100,Math.round(Pt(n)*100))))}),Ro(()=>Pt(o),()=>{Ws(h,Math.max(0,Math.min(100,Math.round(Pt(o)*100))))}),Ro(()=>(Pt(h),Pt(k),Pt(C)),()=>{Pt(h)>N||Pt(h)>N?(Pt(k)||Pt(C)||(re(),Ws(C,!0),setTimeout(()=>{Ws(C,!1)},300)),Ws(k,!0)):Ws(k,!1)}),Ro(()=>Pt(X),()=>{Ws(v,String.fromCharCode(65+Pt(X)))}),L1(),O1();var V=Kx();wM(V,H=>Ws(b,H),()=>Pt(b)),$1(t,V),D1()}function P1(t,s){let n=0,o=s.length;for(;n<o;){const u=Math.floor((n+o)/2);s[u]<t?n=u+1:o=u}return n}function Xx(t,s){const n=t.slice(0,-1)+String.fromCharCode(t.charCodeAt(t.length-1)+1),o=P1(t,s),u=P1(n,s);return[o,u]}function Qx(t,s,n){const o=Xx(t,s);return o[0]<=0&&o[1]<=0?0:o[0]<=0?n[o[1]-1]:o[1]<=0?0:n[o[1]-1]-n[o[0]-1]}const Dy=[" ","  ","   ","    ","     ","      ","       ","        ","         ","          ","           ","            ","             ","              ","               ","                "," a"," aa"," aan"," aantal"," ab"," abandon"," abandoned"," abb"," abbre"," abc"," aber"," abgerufen"," ability"," abit"," abitanti"," able"," abol"," abort"," about"," above"," abril"," abroad"," abs"," absence"," absent"," absol"," absolute"," absolutely"," absolv"," absor"," abstra"," abstract"," abund"," aby"," ac"," acab"," academ"," academic"," acc"," acceler"," acceleration"," accept"," acceptable"," accepted"," accepting"," accepts"," access"," accessed"," accessible"," accessing"," accident"," accom"," accommod"," accomp"," accompan"," accompanied"," accompl"," accomplish"," accomplished"," accord"," according"," accordingly"," account"," accounts"," accum"," accur"," accuracy"," accurate"," accus"," accused"," ace"," ach"," achiev"," achieve"," achieved"," acht"," achter"," acid"," acknow"," acknowled"," acon"," acqu"," acquaint"," acquired"," acres"," across"," act"," acted"," acting"," action"," actions"," activ"," activation"," active"," activities"," activity"," actor"," actors"," actress"," acts"," actu"," actual"," actually"," ad"," adapt"," adaptation"," adapted"," adapter"," add"," added"," adding"," addition"," additional"," addr"," address"," addressed"," addresses"," adds"," ade"," adj"," adjacent"," adjust"," adm"," admin"," administ"," administr"," administration"," administrative"," administrator"," admit"," admitted"," adopt"," adopted"," adult"," adv"," advance"," advanced"," advantage"," advantages"," advent"," advers"," advert"," advice"," advis"," advise"," advoc"," aer"," af"," aff"," affair"," affairs"," affect"," affected"," affection"," affili"," afford"," afin"," afraid"," after"," afternoon"," afterwards"," ag"," again"," against"," age"," aged"," agent"," agents"," ages"," aggi"," aggreg"," aggregate"," agli"," ago"," agosto"," agr"," agre"," agree"," agreed"," agreement"," agricult"," agua"," ah"," ahead"," ai"," aid"," aim"," ain"," ainda"," ainsi"," air"," aircraft"," aix"," aj"," ajax"," ak"," akt"," aktiv"," al"," alap"," alarm"," alb"," alberga"," album"," albums"," alc"," alcan"," alco"," alcune"," alcuni"," ale"," alem"," alert"," alg"," algebra"," algebraic"," algo"," algorithm"," algorithms"," algunas"," algunos"," alguns"," ali"," alias"," align"," aligned"," alignment"," aliment"," alive"," alk"," all"," alla"," alle"," alleg"," allem"," allemand"," allen"," aller"," allerdings"," alles"," allo"," alloc"," allocate"," allocated"," allocation"," allow"," allowed"," allowing"," allows"," almost"," alone"," along"," alongside"," alors"," alpha"," alphabet"," already"," als"," also"," alt"," alta"," alte"," alten"," alter"," altern"," alternate"," alternative"," alternatives"," although"," alto"," altogether"," altre"," altres"," altri"," altro"," always"," am"," amateur"," amaz"," amazon"," amb"," ambient"," ambigu"," ambos"," amely"," amen"," amer"," amerik"," amery"," amet"," ami"," amid"," among"," amongst"," amor"," amount"," amounts"," amp"," ampl"," amplit"," amplitude"," an"," anal"," analog"," analy"," analysis"," analyt"," analyz"," analyze"," anc"," ancest"," anch"," anche"," anchor"," anci"," ancien"," ancient"," ancora"," and"," andere"," anderem"," anderen"," andra"," android"," ang"," ange"," anger"," anglais"," angle"," angles"," angry"," angular"," angularjs"," ani"," anim"," animal"," animals"," animate"," animated"," animation"," ann"," anni"," anno"," annot"," annotation"," annotations"," announ"," announced"," annual"," ano"," anom"," anonymous"," anos"," another"," ans"," answer"," answered"," answering"," answers"," ant"," ante"," anten"," anterior"," antes"," anth"," anti"," anticip"," antigu"," anv"," anx"," anxious"," any"," anybody"," anymore"," anyone"," anys"," anything"," anyway"," anywhere"," ao"," aos"," ap"," apache"," apar"," apare"," apart"," apenas"," aper"," api"," aplic"," apo"," apolog"," apost"," app"," appar"," apparent"," apparently"," appart"," apparten"," appe"," appeal"," appear"," appearance"," appearances"," appeared"," appearing"," appears"," appel"," append"," apple"," applic"," applicable"," application"," applications"," applied"," applies"," apply"," applying"," appoint"," appointed"," appointment"," appreci"," appreciate"," appreciated"," appro"," approach"," approached"," approaches"," approaching"," appropri"," appropriate"," approved"," approxim"," approximate"," approximately"," approximation"," apps"," apr"," apresent"," april"," aprile"," apro"," aproxim"," apt"," aqu"," aquest"," ar"," ara"," arab"," arbeit"," arbeitete"," arbitr"," arbitrary"," arc"," arch"," architect"," architecture"," archiv"," archive"," are"," area"," areas"," aren"," arg"," argent"," args"," argue"," argued"," argument"," arguments"," aria"," arise"," arist"," arithmetic"," arm"," armed"," arms"," army"," arose"," around"," arqu"," arquitect"," arr"," arrang"," arranged"," arrangement"," array"," arrays"," arrest"," arrested"," arrib"," arriv"," arrival"," arrive"," arrived"," arrow"," art"," arte"," article"," articles"," artifact"," artific"," artificial"," artist"," artists"," arts"," as"," asc"," ases"," ash"," asi"," aside"," ask"," asked"," asking"," asks"," asp"," aspect"," aspects"," ass"," assass"," assault"," asse"," assemb"," assemble"," assembly"," assert"," assertion"," assess"," asset"," assets"," assez"," assign"," assigned"," assigning"," assignment"," assim"," assist"," assistance"," assistant"," associ"," associate"," associated"," association"," associations"," assum"," assume"," assumed"," assumes"," assuming"," assumption"," assumptions"," assured"," ast"," astero"," aston"," astr"," astronom"," asym"," asympt"," async"," asynchronous"," at"," atac"," ath"," athlet"," atmos"," atmosphere"," atom"," atomic"," atoms"," att"," attach"," attached"," attachment"," attack"," attacked"," attacks"," atte"," attempt"," attempted"," attempting"," attempts"," attend"," attended"," attention"," attitude"," attr"," attra"," attract"," attribute"," attributed"," attributes"," au"," auc"," auch"," aud"," audi"," audience"," audio"," auf"," aufgrund"," aug"," augment"," august"," augusti"," augusztus"," aujourd"," aument"," aunque"," aur"," aurait"," aus"," ausge"," aussi"," aust"," austral"," aut"," aute"," auteurs"," auth"," authentic"," authentication"," author"," authorities"," authority"," authorization"," authors"," auto"," autom"," automat"," automatic"," automatically"," automatisch"," autonom"," autor"," autory"," autorytatywna"," autour"," autre"," autres"," aux"," auxili"," av"," avaient"," avail"," available"," avait"," avant"," ave"," avec"," aver"," average"," aveva"," avo"," avoid"," avoided"," avoir"," avril"," aw"," await"," award"," awarded"," awards"," aware"," away"," awesome"," awful"," awk"," aws"," ax"," axes"," axis"," ay"," ayant"," az"," azon"," azure"," b"," ba"," baby"," back"," backend"," background"," backing"," backup"," backwards"," bad"," badly"," bag"," bajo"," bal"," balance"," bald"," ball"," balls"," ban"," band"," banda"," bande"," bands"," bank"," banks"," bapt"," bar"," bare"," baron"," bars"," bas"," base"," baseball"," based"," bases"," bash"," basic"," basically"," basis"," basket"," basketball"," bass"," bast"," bat"," bata"," bataille"," batal"," batch"," bath"," batt"," batter"," battery"," battle"," bay"," baz"," bazie"," be"," beach"," beam"," bean"," bear"," bearing"," beat"," beaucoup"," beaut"," beautiful"," beauty"," bec"," became"," because"," becom"," become"," becomes"," becoming"," bed"," bedeut"," been"," bef"," befind"," befindet"," before"," beg"," began"," begann"," begg"," begin"," beginner"," beginning"," begins"," begun"," beh"," behav"," behave"," behavior"," behaviour"," behind"," beho"," bei"," beide"," beiden"," beim"," being"," bek"," bekannt"," bekend"," bel"," belang"," belief"," believe"," believed"," bell"," belle"," belong"," belonged"," belonging"," belongs"," below"," bem"," ben"," benchmark"," bene"," beneath"," benef"," benefit"," benefits"," bent"," ber"," bere"," bereits"," berg"," bes"," besch"," beside"," besides"," beskre"," beskrevs"," besonders"," best"," besta"," beste"," besteht"," bet"," beta"," betre"," better"," between"," bev"," bew"," beyond"," bez"," bezeichnet"," bezeichneter"," bg"," bi"," bias"," bib"," bibli"," bid"," bien"," big"," bigger"," biggest"," bij"," bil"," bila"," bild"," bill"," billion"," bin"," binary"," bind"," binding"," binnen"," bio"," bir"," bird"," birds"," birth"," bis"," bisher"," bishop"," bit"," bitmap"," bits"," bitter"," biz"," bl"," bla"," black"," blah"," blan"," blanc"," bland"," blank"," ble"," bless"," blev"," blieb"," blind"," blo"," blob"," block"," blocked"," blocking"," blocks"," blog"," blood"," blow"," blue"," bo"," board"," boat"," boats"," bod"," bodies"," body"," bog"," bois"," bol"," bold"," bom"," bomb"," bon"," bond"," bonus"," book"," books"," bool"," boolean"," boost"," boot"," bootstrap"," bor"," bord"," border"," borders"," bore"," born"," borrow"," bos"," bot"," botan"," both"," bother"," bott"," bottom"," bou"," bought"," bound"," boundaries"," boundary"," bounded"," bounds"," bout"," bow"," box"," boxes"," boy"," boys"," br"," bra"," brackets"," brain"," bran"," branch"," branches"," brand"," bras"," brasile"," brave"," bre"," bread"," break"," breakfast"," breaking"," breaks"," breast"," breath"," brick"," brid"," bridge"," brief"," briefly"," brig"," bright"," brilliant"," bring"," bringing"," brings"," brit"," britann"," britannique"," bro"," broad"," broadcast"," broke"," broken"," bron"," bronze"," brother"," brothers"," brought"," brow"," brown"," browser"," browsers"," bru"," brut"," bs"," btn"," bu"," bucket"," bud"," budget"," buf"," buff"," buffer"," bug"," bugs"," build"," builder"," building"," buildings"," builds"," built"," bul"," bulk"," bullet"," bunch"," bund"," bundle"," bur"," burg"," buried"," burn"," burning"," burst"," bus"," bush"," business"," busy"," but"," button"," buttons"," buy"," by"," byl"," byla"," bylo"," byly"," byte"," bytes"," bzw"," c"," ca"," cab"," cabe"," cabin"," cabinet"," cable"," cache"," cached"," caching"," cad"," cada"," cadre"," cal"," calc"," calci"," calciatore"," calcio"," calcul"," calculate"," calculated"," calculating"," calculation"," calculations"," calculus"," calendar"," call"," callback"," called"," caller"," calling"," calls"," calm"," cam"," camb"," cambio"," came"," camera"," camp"," campagne"," campaign"," campe"," campion"," campionato"," campo"," campus"," can"," canad"," canal"," cancel"," cancer"," cand"," candid"," candidate"," candidates"," cannot"," canon"," canonical"," cant"," cantante"," canton"," canvas"," cap"," capabilities"," capable"," capac"," capacity"," capit"," capital"," capitale"," caps"," capt"," captain"," capture"," captured"," car"," caracter"," caratter"," carbon"," card"," cardinal"," cards"," care"," career"," careful"," carefully"," cargo"," carre"," carrera"," carri"," carriage"," carried"," carry"," carrying"," cars"," cart"," carte"," cas"," casa"," case"," cases"," casi"," caso"," casos"," cast"," casting"," castle"," cat"," catal"," catalog"," catch"," categ"," categor"," categorie"," categories"," category"," catt"," cattle"," caught"," caus"," causa"," cause"," caused"," causes"," causing"," cav"," caval"," cave"," cb"," cc"," cd"," ce"," ceased"," ced"," cel"," cela"," cele"," celebr"," celebrated"," cell"," celle"," cells"," celui"," cens"," census"," cent"," center"," centered"," central"," centrale"," centre"," centro"," centuries"," century"," cependant"," cer"," cerca"," cerem"," ceremony"," cert"," certain"," certainly"," certains"," certific"," certificate"," ces"," cet"," cette"," ceux"," ch"," cha"," chain"," chair"," chairman"," challeng"," challenge"," cham"," chamber"," champ"," champion"," championnat"," champions"," championship"," chance"," chang"," change"," changed"," changes"," changing"," channel"," channels"," chanson"," chant"," chante"," chap"," chapter"," chaque"," char"," charact"," character"," characteristic"," characteristics"," characters"," charg"," charge"," charged"," charges"," charm"," chars"," charset"," chart"," charts"," chat"," che"," cheap"," check"," checkbox"," checked"," checking"," checkout"," checks"," cheer"," chef"," chem"," chemical"," chemin"," cher"," cheval"," chez"," chi"," chiam"," chief"," chiesa"," child"," children"," chim"," chip"," cho"," choice"," choices"," choose"," choosing"," chose"," chosen"," chr"," christ"," chrom"," chrome"," chron"," chunk"," church"," churches"," ci"," cic"," cidade"," ciel"," cig"," cin"," cinco"," cinema"," cinemat"," cinq"," cir"," circ"," circa"," circle"," circles"," circuit"," circul"," circular"," circum"," circumst"," circumstances"," cit"," cities"," citiz"," citizens"," citt"," city"," ciudad"," ciutat"," civ"," civil"," civile"," cl"," cla"," claim"," claimed"," claims"," clar"," clarify"," clas"," class"," classe"," classes"," classic"," classical"," classific"," classification"," clause"," cle"," clean"," cleaner"," clear"," cleared"," clearer"," clearly"," cler"," clever"," cli"," click"," clicked"," clicking"," clicks"," client"," clients"," clim"," climate"," clin"," clip"," clo"," clock"," clone"," clos"," close"," closed"," closely"," closer"," closest"," closing"," closure"," cloth"," clothes"," cloud"," clouds"," club"," clubs"," clue"," clust"," cluster"," clusters"," cm"," cmd"," co"," coach"," coal"," coast"," coat"," cod"," code"," codes"," coding"," coefficient"," coefficients"," coff"," coffee"," cogn"," coh"," coin"," coinc"," col"," cold"," cole"," coll"," collabor"," collaboration"," collapse"," colle"," collect"," collected"," collection"," collections"," colleg"," college"," collision"," coloc"," colon"," colonial"," color"," colored"," colors"," colour"," colours"," cols"," column"," columns"," com"," comand"," comb"," combat"," combatt"," combin"," combination"," combinations"," combine"," combined"," combining"," come"," comedy"," comenz"," comer"," comercial"," comes"," comfort"," comfortable"," coming"," comm"," comma"," command"," commanded"," commander"," commands"," comme"," commence"," comment"," commented"," comments"," commer"," commerce"," commercial"," commission"," commit"," commits"," committed"," committee"," common"," commonly"," commun"," commune"," communes"," communic"," communicate"," communication"," communities"," community"," commut"," como"," comp"," compact"," compag"," compagnie"," compan"," companies"," companion"," company"," compar"," compare"," compared"," comparing"," comparison"," compart"," compat"," compatibility"," compatible"," compens"," compet"," competed"," competition"," compilation"," compile"," compiled"," compiler"," compiling"," compl"," compla"," comple"," complement"," complet"," complete"," completed"," completely"," completion"," complex"," complexity"," complicated"," compon"," component"," components"," comport"," compos"," compose"," composed"," composer"," composite"," composition"," compr"," compreh"," comprend"," compress"," compression"," comprom"," compt"," compte"," comput"," computation"," computational"," compute"," computed"," computer"," computers"," computing"," comte"," comun"," comuna"," comune"," con"," conc"," concaten"," conce"," conced"," concent"," concentr"," concentration"," concept"," conception"," concepts"," concern"," concerned"," concerning"," concerns"," concert"," concl"," conclude"," concluded"," conclus"," conclusion"," concrete"," concurrent"," cond"," condado"," condem"," condition"," conditional"," conditions"," condu"," conduct"," conducted"," cone"," conf"," confer"," conference"," confidence"," confident"," config"," configur"," configuration"," configurations"," configure"," configured"," confir"," confirm"," confirmed"," confl"," conflic"," conflict"," conflicts"," conform"," confront"," confused"," confusing"," confusion"," conhe"," conj"," conject"," conjug"," conjunto"," conn"," conna"," conne"," connect"," connected"," connecting"," connection"," connections"," connexes"," connu"," conoc"," conocido"," conqu"," conquer"," conquist"," cons"," conscience"," conscious"," conse"," consec"," consecutive"," consegu"," conseil"," consent"," consequ"," consequence"," consequences"," conser"," conserv"," conservation"," consid"," consider"," considerable"," consideration"," considered"," considering"," consist"," consisted"," consistent"," consisting"," consists"," console"," consp"," const"," constant"," constantly"," constants"," constit"," constitu"," constitution"," constraint"," constraints"," constru"," construct"," constructed"," construction"," constructor"," consult"," consultato"," consum"," consume"," consumer"," consumption"," cont"," contact"," contacts"," contain"," contained"," container"," containers"," containing"," contains"," conte"," contempor"," contemporary"," conten"," content"," contents"," contest"," context"," contiene"," contin"," continent"," continu"," continue"," continued"," continues"," continuous"," contr"," contra"," contract"," contrad"," contradict"," contradiction"," contrary"," contrast"," contre"," contrib"," contribu"," contribute"," contributed"," contribution"," contributions"," contro"," control"," controlled"," controller"," controllers"," controls"," controvers"," conv"," conven"," convenience"," convenient"," convent"," convention"," conventional"," conver"," convergence"," converges"," convers"," conversation"," conversion"," convert"," converted"," converter"," converting"," converts"," convex"," convey"," convin"," convinced"," convirti"," convolution"," cook"," cookie"," cookies"," cool"," coord"," coordin"," coordinate"," coordinates"," cop"," copied"," copies"," copy"," copying"," cor"," cord"," core"," cores"," corn"," corner"," corners"," coron"," corpo"," corpor"," corps"," corr"," corre"," correct"," corrected"," correction"," correctly"," correl"," correlate"," correlation"," correspond"," corresponding"," corresponds"," cors"," corso"," cort"," corte"," cos"," cosa"," cosm"," cost"," costa"," costitu"," costru"," costs"," cot"," cou"," could"," couldn"," coun"," council"," count"," counted"," counter"," counting"," countries"," country"," counts"," county"," coup"," couple"," coupling"," cour"," courage"," cours"," course"," courses"," court"," courts"," cousin"," cout"," cov"," cover"," coverage"," covered"," covering"," covers"," cow"," cp"," cpu"," cr"," cra"," crack"," craft"," crash"," crashes"," craw"," cre"," create"," created"," creates"," creating"," creation"," creature"," cred"," credentials"," credit"," cres"," crew"," cri"," cried"," crim"," crime"," criminal"," crisis"," crist"," crit"," criter"," criteria"," critic"," critical"," criticism"," critics"," critique"," cro"," cron"," cross"," crossed"," crossing"," crow"," crowd"," crown"," cru"," cruel"," cry"," crypt"," cs"," csak"," csal"," css"," csv"," ctx"," cu"," cual"," cuales"," cualquier"," cuando"," cuatro"," cub"," cube"," cuenta"," cuer"," cui"," cul"," cult"," cultiv"," cultura"," cultural"," culture"," cum"," cup"," cur"," cura"," curios"," curiosity"," curious"," curl"," curr"," currency"," current"," currently"," curs"," cursor"," curv"," curve"," curves"," cust"," custom"," customer"," customers"," cut"," cutting"," cv"," cx"," cy"," cycl"," cycle"," cycles"," cyl"," cz"," czas"," czerw"," czerwca"," czy"," d"," da"," daar"," dabei"," dag"," dah"," daher"," dai"," daily"," dal"," dall"," dalla"," dalle"," dam"," damage"," damals"," damit"," dan"," dance"," danger"," dangerous"," dann"," dans"," dar"," darauf"," dare"," dark"," darkness"," das"," dash"," dashed"," dass"," dat"," data"," datab"," database"," databases"," dataframe"," datas"," dataset"," datasets"," date"," dated"," dates"," datetime"," datos"," daugh"," daughter"," daughters"," dav"," davon"," dawn"," day"," days"," dazu"," db"," dbo"," dd"," de"," dead"," deal"," dealing"," dear"," death"," deb"," debate"," debe"," debido"," debug"," debugger"," debugging"," debut"," dec"," decay"," dece"," december"," decent"," decid"," decide"," decided"," decimal"," decir"," decis"," decision"," deck"," decl"," decla"," declar"," declaration"," declarations"," declare"," declared"," declaring"," decode"," decom"," decomposition"," decor"," decre"," decrease"," ded"," dedic"," dedicated"," dedu"," deel"," deep"," deeper"," deeply"," def"," default"," defaults"," defe"," defeat"," defeated"," defect"," defence"," defend"," defense"," defin"," define"," defined"," defines"," defining"," definit"," definite"," definitely"," definition"," definitions"," deg"," degli"," degree"," degrees"," dei"," deix"," dej"," del"," delay"," delayed"," deleg"," delegate"," delen"," delet"," delete"," deleted"," deleting"," deli"," deliber"," delight"," delimiter"," deliver"," delivered"," delivery"," dell"," della"," delle"," dello"," dels"," delta"," dem"," demand"," demande"," demanded"," demi"," demo"," demol"," demon"," demonstr"," demonstrate"," demonstrated"," demsel"," demselben"," den"," denen"," denied"," denn"," denomin"," denote"," denoted"," denotes"," dens"," dense"," density"," dent"," dentro"," dep"," depart"," departamento"," department"," departure"," depend"," dependence"," dependencies"," dependency"," dependent"," depending"," depends"," deploy"," deployed"," deployment"," depois"," deport"," depos"," deprec"," deprecated"," depth"," depuis"," deput"," der"," dere"," deren"," deriv"," derivative"," derivatives"," derive"," derived"," derni"," dernier"," derrot"," des"," desar"," desarroll"," desarrollo"," desc"," descend"," descent"," descri"," describe"," described"," describes"," describing"," descript"," description"," desde"," desen"," desenvol"," deser"," desert"," design"," designated"," designed"," designer"," designs"," desire"," desired"," desktop"," desp"," despite"," dess"," dessen"," dessin"," dest"," destac"," destin"," destination"," destroy"," destroyed"," destru"," destruct"," destruction"," det"," detail"," detailed"," details"," detect"," detected"," detection"," determ"," determin"," determine"," determined"," deutsch"," deutsche"," deutschen"," deutscher"," deux"," dev"," devant"," deve"," develop"," developed"," developer"," developers"," developing"," development"," deven"," devi"," deviation"," device"," devices"," devient"," devil"," devoted"," dez"," deze"," df"," di"," dia"," diag"," diagn"," diagonal"," diagram"," dialect"," dialog"," diam"," diameter"," dic"," dice"," dicembre"," dich"," dici"," diciembre"," dict"," diction"," dictionary"," did"," didn"," didnt"," die"," died"," dies"," diese"," diesem"," diesen"," dieser"," dieses"," dif"," difer"," diferen"," diferentes"," diff"," differ"," difference"," differences"," different"," differenti"," differential"," differently"," difficult"," difficulties"," difficulty"," diffus"," diffusion"," dig"," digit"," digital"," digits"," dign"," dil"," dim"," dimension"," dimensional"," dimensions"," dimin"," din"," dinast"," dinner"," dio"," dioc"," dip"," diplom"," dir"," dire"," direct"," directed"," directeur"," direction"," directions"," directive"," directly"," director"," directories"," directory"," direkt"," dirett"," diretto"," dirig"," dirige"," dirty"," dis"," disable"," disabled"," disag"," disapp"," disappear"," disappeared"," disappoint"," disc"," discipl"," discipline"," disco"," discover"," discovered"," discovery"," discrete"," discuss"," discussed"," discussion"," dise"," disease"," disk"," dismiss"," disp"," dispar"," dispatch"," dispers"," display"," displayed"," displaying"," displays"," dispon"," disponible"," dispos"," dispose"," disposition"," disput"," dispute"," diss"," disse"," dissol"," dist"," distance"," distances"," distant"," distinct"," distinction"," distingu"," distinguish"," distinguished"," distint"," distrib"," distribu"," distributed"," distribution"," distributions"," district"," districts"," distrito"," disturb"," dit"," div"," divent"," diver"," divers"," diverse"," diverses"," diversi"," diversos"," divid"," divide"," divided"," divine"," divis"," division"," divisions"," divor"," divs"," dix"," django"," dla"," dll"," do"," dob"," doc"," doch"," dock"," docker"," docs"," doctor"," doctrine"," document"," documentation"," documented"," documents"," dod"," does"," doesn"," doesnt"," dog"," dogs"," doi"," doing"," dois"," doit"," dok"," dokument"," dol"," doll"," dollars"," dolor"," dom"," domain"," domains"," domestic"," domin"," dominant"," don"," donc"," donde"," done"," donn"," donna"," donne"," donner"," dont"," door"," doors"," dop"," dopo"," dor"," dort"," dos"," dost"," dot"," dou"," doub"," double"," doubles"," doubt"," dov"," dove"," dow"," down"," download"," downloaded"," downloading"," dozen"," dr"," dra"," draft"," drag"," dram"," drama"," draw"," drawing"," drawn"," dre"," dread"," dream"," drei"," dress"," dressed"," drew"," dri"," drie"," drink"," driv"," drive"," driven"," driver"," drivers"," drives"," driving"," dro"," droit"," droite"," drop"," dropdown"," dropped"," drove"," dru"," drug"," drum"," drums"," dry"," ds"," dst"," dt"," dtype"," du"," dual"," duas"," dub"," duc"," duch"," due"," dues"," dummy"," dump"," dup"," duplicate"," duplicates"," dur"," durant"," durante"," duration"," durch"," during"," dus"," dust"," dut"," duties"," duty"," dv"," dw"," dwell"," dx"," dy"," dying"," dynam"," dynamic"," dynamically"," dynamics"," dynast"," dz"," dzie"," e"," each"," eager"," ear"," earlier"," earliest"," early"," earned"," earnest"," ears"," earth"," eas"," ease"," easier"," easiest"," easily"," east"," eastern"," easy"," eat"," eb"," eben"," ebenfalls"," ec"," ecc"," echo"," echter"," eclipse"," econ"," econom"," economic"," economy"," ed"," edge"," edges"," edific"," edificio"," edit"," edited"," editing"," edition"," editor"," educ"," educated"," education"," educational"," een"," eer"," eerst"," eerste"," eeuw"," efect"," eff"," effect"," effective"," effectively"," effects"," effet"," effic"," efficiency"," efficient"," efficiently"," effort"," efforts"," efter"," eg"," egg"," eggs"," egy"," ehem"," ehemal"," ehemaligen"," eig"," eigen"," eigenen"," eigenvalues"," eigh"," eight"," ein"," eind"," eine"," einem"," einen"," einer"," eines"," eing"," einges"," eingesetzt"," einige"," einmal"," einz"," either"," ej"," ejec"," ejemplo"," ek"," ekonom"," el"," ela"," elabor"," elaborate"," elder"," ele"," elect"," elected"," election"," elections"," electric"," electro"," electron"," electronic"," electrons"," eleg"," elegant"," elektr"," elem"," element"," elementary"," elementos"," elements"," elet"," elev"," eleven"," elif"," elim"," elimin"," eliminate"," ell"," ella"," elle"," ellen"," eller"," elles"," elli"," ellos"," els"," else"," elsewhere"," em"," email"," emails"," emb"," embar"," embargo"," embed"," embedded"," embedding"," emer"," emission"," emit"," emot"," emp"," emphas"," empir"," emple"," employ"," employed"," employee"," employees"," empres"," empresa"," empty"," emulator"," en"," enable"," enabled"," enables"," enc"," encode"," encoded"," encoding"," encontr"," encore"," encou"," encounter"," encountered"," encourag"," encrypt"," encrypted"," encryption"," encuent"," encuentra"," end"," ende"," endeav"," ended"," ending"," endl"," endpoint"," ends"," enem"," enemies"," enemy"," ener"," energ"," energy"," enero"," enf"," enfants"," enfer"," enfor"," eng"," engag"," engaged"," engine"," engineer"," engineering"," engines"," engl"," enh"," enjo"," enjoy"," enjoyed"," enorm"," enough"," enqu"," ens"," ense"," ensemble"," ensuite"," ensure"," ent"," enter"," entered"," entering"," enters"," entertain"," entfer"," entferne"," enthus"," entire"," entirely"," entities"," entitled"," entity"," entonces"," entr"," entra"," entrance"," entre"," entrepr"," entries"," entropy"," entry"," entstand"," entwick"," enum"," enumer"," enumerate"," env"," envi"," environ"," environment"," environmental"," environments"," ep"," epis"," episode"," episodes"," episodio"," epo"," eq"," equ"," equal"," equality"," equally"," equals"," equation"," equations"," equilib"," equilibrium"," equip"," equipment"," equipo"," equival"," equivalence"," equivalent"," er"," era"," eran"," erano"," ere"," ered"," eredet"," eren"," erf"," erfolg"," erfolgte"," erg"," erh"," erhalten"," erhielt"," erm"," ern"," erneut"," err"," erre"," erreichte"," errichtet"," error"," errors"," ers"," ersch"," erschien"," erst"," erste"," ersten"," erstmals"," erw"," es"," esa"," esc"," escape"," escaped"," escol"," escri"," escrit"," ese"," esempio"," esp"," espa"," espe"," espec"," especial"," especially"," especie"," especies"," esper"," ess"," essential"," essentially"," essere"," est"," esta"," estab"," estaba"," estable"," establish"," established"," establishment"," estad"," estado"," estadoun"," estadounidense"," estar"," estas"," estat"," estate"," estava"," estaven"," este"," esterni"," estilo"," estim"," estimate"," estimated"," estimates"," estimation"," esto"," estos"," estre"," estruct"," estud"," estudio"," estudios"," et"," etapa"," etc"," eth"," ett"," etwa"," etwas"," eu"," euro"," europ"," europe"," eux"," ev"," eval"," evalu"," evaluate"," evaluated"," evaluation"," evangel"," even"," evening"," event"," events"," eventually"," ever"," every"," everybody"," everyone"," everything"," everywhere"," evidence"," evident"," evidently"," evil"," evol"," evolution"," ex"," exact"," exactly"," exam"," examine"," example"," examples"," exc"," exceed"," excel"," excell"," excellent"," except"," exception"," exceptions"," excess"," exchange"," excited"," excitement"," exclaimed"," exclude"," exclus"," exclusive"," exec"," execut"," executable"," execute"," executed"," executes"," executing"," execution"," executive"," exem"," exempl"," exemple"," exer"," exerc"," exercise"," exha"," exhaust"," exhib"," exhibition"," exist"," existe"," existed"," existence"," existing"," exists"," exit"," exp"," expand"," expanded"," expansion"," expect"," expectation"," expected"," expecting"," expects"," exped"," expedition"," expensive"," exper"," experien"," experience"," experienced"," experiences"," experiment"," experimental"," experiments"," expert"," expl"," expla"," explain"," explained"," explaining"," explains"," explan"," explanation"," explic"," explicit"," explicitly"," explo"," explore"," explos"," expon"," exponent"," exponential"," export"," exports"," expos"," expose"," exposed"," expr"," expres"," express"," expressed"," expression"," expressions"," ext"," extend"," extended"," extending"," extends"," extens"," extension"," extensions"," extensive"," extent"," exterior"," extern"," external"," externas"," externe"," externes"," externos"," externs"," extr"," extra"," extract"," extracted"," extraordinary"," extrem"," extreme"," extremely"," eye"," eyes"," ez"," f"," fa"," fab"," fabric"," fac"," face"," facebook"," faced"," faces"," facil"," facilities"," facility"," facing"," fact"," factor"," factors"," factory"," facts"," fade"," fail"," failed"," failing"," fails"," failure"," faint"," fair"," faire"," fairly"," fais"," fait"," faith"," faithful"," fake"," fal"," fall"," fallen"," falling"," falls"," false"," fam"," fame"," famiglia"," famil"," familia"," familiar"," familie"," families"," familjen"," famille"," family"," famous"," fan"," fancy"," fand"," fans"," fant"," far"," fare"," farm"," farther"," fas"," fasc"," fase"," fashion"," fast"," faster"," fat"," fatal"," fate"," father"," fatto"," fault"," faut"," fav"," favor"," favorite"," favour"," faz"," fe"," fear"," feas"," feature"," featured"," features"," featuring"," feb"," febbraio"," febrero"," febru"," februari"," fecha"," fed"," feder"," federal"," fee"," feed"," feedback"," feel"," feeling"," feelings"," feels"," feet"," fel"," fell"," fellow"," felt"," fem"," female"," females"," femin"," femme"," femmes"," fen"," fer"," ferm"," ferro"," fert"," fest"," festiv"," festival"," fet"," fetch"," feu"," few"," fewer"," ff"," fi"," fib"," fic"," fick"," fict"," fiction"," fid"," fiddle"," fiel"," field"," fields"," fier"," fif"," fifteen"," fifth"," fifty"," fig"," fight"," fighting"," figlio"," figur"," figura"," figure"," figured"," figures"," fil"," file"," filename"," files"," filesystem"," fill"," fille"," filled"," filling"," fills"," film"," filme"," films"," filosof"," fils"," filter"," filtered"," filtering"," filters"," fin"," final"," finale"," finales"," finally"," finalmente"," finan"," financi"," financial"," find"," finden"," findet"," finding"," finds"," fine"," finger"," fingers"," finish"," finished"," finishing"," finit"," finite"," finns"," fino"," fins"," fir"," fire"," firebase"," fired"," firefox"," fires"," firewall"," firing"," firm"," first"," fis"," fish"," fit"," fits"," fitted"," fitting"," five"," fix"," fixed"," fixes"," fixing"," fl"," fla"," flag"," flags"," flash"," flask"," flat"," flav"," fle"," fled"," fleet"," flesh"," flex"," flexible"," flight"," flo"," float"," floating"," floor"," flor"," flow"," flower"," flowers"," flows"," flu"," fluid"," flush"," flutter"," flux"," fly"," flying"," fmt"," fn"," fo"," foc"," focus"," focused"," fog"," foi"," fois"," fol"," folder"," folders"," folg"," folgenden"," folgender"," folk"," follow"," followed"," following"," follows"," fon"," fonction"," fond"," font"," fonts"," foo"," food"," fool"," foot"," football"," footballer"," footer"," for"," forall"," foram"," forb"," force"," forced"," forces"," forcing"," ford"," fore"," foreach"," forec"," foreign"," forest"," forever"," forg"," forget"," forgot"," forgotten"," fork"," form"," forma"," formal"," formally"," format"," formation"," formats"," formatt"," formatted"," formatting"," forme"," formed"," former"," formerly"," forming"," forms"," formula"," formulas"," fort"," forte"," forth"," fortune"," forty"," forum"," forward"," fos"," foss"," fosse"," fost"," fot"," fotograf"," fou"," fought"," found"," foundation"," founded"," founder"," four"," fourth"," fr"," fra"," fraction"," frag"," fragment"," fragments"," fram"," frame"," frames"," framework"," frameworks"," fran"," franc"," frances"," francesa"," francese"," franch"," frat"," fre"," free"," freedom"," freely"," frente"," frequ"," frequencies"," frequency"," frequent"," frequently"," fres"," fresh"," fri"," friend"," friendly"," friends"," friendship"," fright"," fro"," from"," front"," fruit"," fs"," ft"," fu"," fue"," fuel"," fuer"," fuera"," fueron"," fug"," ful"," full"," fully"," fun"," func"," funcion"," function"," functional"," functionality"," functions"," fund"," fundamental"," funds"," fung"," funkc"," fur"," furent"," furn"," furono"," further"," fus"," fusion"," fut"," future"," g"," ga"," gab"," gain"," gained"," gal"," galax"," galaxies"," gall"," gallery"," gam"," game"," games"," gan"," gang"," ganz"," gap"," gar"," garant"," garbage"," gard"," garden"," gare"," gas"," gat"," gate"," gates"," gateway"," gather"," gathered"," gau"," gauche"," gauge"," gave"," gay"," gaz"," gcc"," gdzie"," ge"," geb"," gebied"," geboren"," gebru"," ged"," geen"," gef"," geg"," gegen"," geht"," gek"," gel"," gelang"," geld"," geldig"," gem"," geme"," gemeente"," gemeins"," gen"," genannt"," gender"," gene"," gener"," general"," generale"," generalized"," generally"," generate"," generated"," generates"," generating"," generation"," generator"," generic"," genius"," gennaio"," genom"," genomsnitt"," genre"," gens"," gent"," gentle"," gentleman"," gentlemen"," genu"," genus"," geom"," geomet"," geometric"," geometry"," gep"," gepublic"," gepubliceerd"," ger"," gering"," germ"," ges"," gesam"," gesch"," geslacht"," gest"," gestion"," gesture"," get"," gets"," getting"," gev"," gew"," gewann"," gewesen"," gez"," gg"," ggplot"," gh"," gi"," giant"," gibt"," gift"," gig"," gilt"," ging"," gioc"," gior"," giorno"," giov"," gir"," girl"," girls"," git"," github"," giugno"," giv"," give"," given"," gives"," giving"," gl"," gla"," glad"," glance"," glass"," gle"," gleich"," gli"," glo"," glob"," global"," glory"," gmin"," gmina"," gminie"," gminy"," go"," goal"," goals"," gobierno"," god"," godine"," gods"," goes"," going"," gol"," gold"," golden"," golf"," gone"," good"," goods"," goog"," google"," got"," gouvern"," gouvernement"," gover"," govern"," government"," governo"," governor"," gr"," gra"," grab"," grace"," grad"," grade"," gradient"," gradle"," grado"," gradu"," gradually"," graduated"," graf"," gram"," grammar"," gran"," grand"," grande"," grandes"," grands"," grant"," granted"," graph"," graphics"," graphs"," grasp"," grass"," grat"," grateful"," grav"," grave"," gravit"," gravity"," gray"," gre"," great"," greater"," greatest"," greatly"," green"," grep"," grew"," grey"," grid"," gro"," groot"," gros"," gross"," grote"," ground"," grounds"," group"," groupe"," grouped"," grouping"," groups"," grow"," growing"," grown"," grows"," growth"," gru"," grud"," grudnia"," grund"," grup"," grupo"," grupos"," gruppo"," gu"," guarante"," guarantee"," guaranteed"," guard"," guer"," guerra"," guerre"," guess"," guessing"," guest"," guests"," guid"," guidance"," guide"," guilty"," guitar"," gun"," guns"," gut"," guys"," gy"," h"," ha"," haar"," hab"," habe"," haben"," haber"," habit"," habitantes"," habitants"," habitat"," hace"," hacer"," hacia"," hack"," had"," hade"," hadn"," hair"," hal"," half"," hall"," halt"," ham"," han"," hand"," handed"," handle"," handled"," handler"," handlers"," handles"," handling"," hands"," hang"," hanno"," hans"," happ"," happen"," happened"," happening"," happens"," happiness"," happy"," har"," hard"," harder"," hardly"," hardware"," harm"," has"," hash"," hasn"," hast"," hasta"," hat"," hate"," hath"," hatte"," hatten"," haut"," hav"," have"," haven"," havet"," havia"," having"," hay"," he"," head"," header"," headers"," heading"," headquarters"," heads"," health"," heap"," hear"," heard"," hearing"," heart"," hearts"," heat"," heav"," heaven"," heavily"," heavy"," hebben"," hecho"," hect"," heeft"," height"," hel"," held"," hell"," hello"," help"," helped"," helper"," helpful"," helping"," helps"," hely"," hem"," hen"," hence"," her"," heraus"," here"," herm"," hero"," hers"," herself"," hes"," het"," heter"," heures"," heut"," heute"," heutigen"," hex"," hi"," hibernate"," hid"," hidden"," hide"," hiding"," hier"," hierarchy"," high"," higher"," highest"," highlight"," highly"," highway"," hij"," hijo"," hill"," hills"," him"," himself"," hin"," hina"," hinaus"," hint"," hinter"," hints"," hip"," his"," hist"," histor"," historia"," historian"," historic"," historical"," historique"," historiques"," history"," hit"," hits"," hitting"," hizo"," ho"," hoch"," hockey"," hogy"," hol"," hold"," holder"," holding"," holds"," hole"," holes"," holy"," hom"," hombre"," hombres"," home"," homes"," homme"," hommes"," homonymes"," hon"," honest"," honor"," honour"," hoof"," hoofd"," hoog"," hook"," hop"," hope"," hoped"," hopefully"," hopes"," hoping"," hor"," horizon"," horizontal"," horn"," horror"," hors"," horse"," horses"," hos"," hosp"," hospital"," host"," hosted"," hosting"," hosts"," hot"," hotel"," hour"," hours"," hous"," house"," household"," households"," houses"," housing"," hover"," how"," however"," hr"," hrab"," href"," html"," htt"," http"," https"," hu"," hub"," huge"," huit"," hum"," human"," humans"," humor"," hun"," hundred"," hundreds"," hung"," hunting"," hur"," hurried"," hurt"," hus"," husband"," huvud"," huvudstaden"," hvor"," hy"," hyd"," hydro"," hyp"," hyper"," hypoth"," hypothesis"," i"," ibn"," ic"," ice"," ich"," icon"," icons"," id"," ide"," idea"," ideal"," ideas"," ident"," identical"," identific"," identification"," identified"," identifier"," identify"," identity"," idle"," ids"," idx"," ie"," if"," iframe"," ig"," ign"," ignor"," ignore"," ignored"," igual"," ih"," ihm"," ihn"," ihnen"," ihr"," ihre"," ihrem"," ihren"," ihrer"," ii"," ik"," ikke"," il"," ili"," ill"," illegal"," illustr"," illustrate"," illustrated"," ils"," im"," imag"," image"," images"," imagination"," imagine"," img"," imm"," immagini"," immedi"," immediate"," immediately"," immense"," immer"," imp"," impact"," imped"," imper"," imperial"," impl"," implement"," implementation"," implementations"," implemented"," implementing"," implements"," implicit"," implicitly"," implies"," imply"," import"," importance"," important"," importante"," importantes"," imported"," importing"," imports"," impos"," impossible"," impr"," impress"," impression"," imprison"," impro"," improv"," improve"," improved"," improvement"," improvements"," in"," inaug"," inaugur"," inc"," inches"," incident"," incl"," inclu"," includ"," include"," included"," includes"," including"," inclus"," inclusion"," incluy"," income"," incoming"," incomplete"," incon"," incons"," incor"," incorpor"," incorrect"," incorrectly"," incre"," increase"," increased"," increases"," increasing"," incred"," increment"," ind"," inde"," indeed"," indent"," indep"," independ"," independence"," independent"," independently"," index"," indexed"," indexes"," indexing"," indic"," indicate"," indicated"," indicates"," indicating"," indicator"," indices"," indirect"," individ"," individual"," individually"," individuals"," indu"," induced"," induct"," induction"," indul"," indust"," industri"," industrial"," industry"," inequality"," inf"," infant"," infatti"," infer"," inference"," inferior"," infin"," infinite"," infinitely"," infinity"," infl"," influ"," influen"," influence"," influenced"," info"," inform"," information"," informations"," informed"," infrastr"," ing"," ingen"," ingles"," inglese"," inhab"," inhabitants"," inher"," inherit"," inheritance"," inherited"," inici"," inicial"," init"," initi"," initial"," initialization"," initialize"," initialized"," initially"," inizi"," inj"," inject"," injection"," injured"," injury"," inline"," inn"," inne"," inner"," innerhalb"," innoc"," innov"," inoltre"," input"," inputs"," inqu"," ins"," insbesondere"," insc"," inse"," insect"," inser"," insert"," inserted"," inserting"," insgesamt"," inside"," insieme"," insight"," insp"," inspect"," inspir"," inspired"," inst"," instal"," install"," installation"," installed"," installer"," installing"," instance"," instanceof"," instances"," instant"," instanti"," instantiate"," instantly"," instead"," instinct"," instit"," institution"," institutions"," instru"," instruct"," instruction"," instructions"," instrument"," instruments"," int"," inte"," integer"," integers"," integr"," integra"," integral"," integrate"," integrated"," integration"," integrity"," intel"," intellect"," intellectual"," intellig"," intelligence"," inten"," intend"," intended"," intens"," intensity"," intent"," intention"," inter"," interact"," interaction"," interactions"," interactive"," intercept"," interess"," interest"," interested"," interesting"," interests"," interface"," interfaces"," interior"," intermediate"," intern"," internacional"," internal"," internally"," international"," internationale"," internet"," interpol"," interpolation"," interpre"," interpret"," interpretation"," interpreted"," interpreter"," interrupt"," interrupted"," intersect"," intersection"," interval"," intervals"," interven"," interview"," intitul"," into"," intr"," intro"," introdu"," introduce"," introduced"," introduction"," intros"," intu"," intuit"," inv"," invalid"," invari"," invariant"," invas"," invasion"," inve"," invece"," invent"," inverse"," invert"," invest"," investig"," investigate"," investigation"," invisible"," invited"," invoke"," invoked"," invol"," involve"," involved"," involves"," involving"," inwon"," inwoners"," io"," ion"," ios"," ip"," iphone"," ipsum"," ir"," iron"," irre"," irregular"," irrelevant"," is"," island"," islands"," isn"," isol"," isolated"," isomorphism"," iss"," issu"," issue"," issued"," issues"," ist"," it"," ital"," italiana"," italiano"," italien"," item"," items"," iter"," iterate"," iteration"," iterations"," iterator"," its"," itself"," iv"," iz"," j"," ja"," jaar"," jack"," jak"," jako"," jam"," jamais"," jan"," janu"," januari"," janvier"," jap"," japon"," jar"," jaren"," jav"," java"," javafx"," javascript"," javax"," jazz"," je"," jed"," jeden"," jednak"," jedoch"," jego"," jeho"," jej"," jel"," jelent"," jest"," jet"," jeu"," jeune"," jeunes"," jewe"," jeweils"," ji"," jo"," job"," jobs"," jog"," join"," joined"," joining"," joins"," joint"," jou"," joue"," joueur"," jour"," journ"," journal"," journalist"," journey"," jours"," joy"," jquery"," js"," jsf"," json"," jsou"," ju"," jud"," judge"," judgment"," juego"," jug"," juillet"," juin"," jul"," juli"," julio"," jump"," jun"," juni"," junio"," junior"," junt"," junto"," jur"," juris"," jusqu"," just"," justice"," justify"," k"," ka"," kal"," kall"," kallaste"," kam"," kamen"," kan"," kann"," kao"," kap"," kar"," kat"," katol"," kde"," kdy"," ke"," keen"," keep"," keeping"," keeps"," kein"," keine"," kept"," ker"," kernel"," key"," keyboard"," keys"," keyword"," keywords"," kg"," ki"," kick"," kid"," kier"," kil"," kill"," killed"," killing"," kilom"," kilomet"," kilometer"," kilometres"," kin"," kind"," kindly"," kinds"," king"," kingdom"," kir"," kis"," kiss"," kitchen"," kl"," klas"," klass"," kle"," klein"," kleine"," kleinen"," klub"," km"," kn"," kne"," knew"," knock"," know"," knowing"," knowledge"," known"," knows"," ko"," koji"," kol"," kole"," kolej"," kom"," komm"," kommen"," kommt"," kommun"," komt"," kon"," konn"," konnte"," konnten"," konst"," kont"," kop"," kor"," kost"," kot"," kr"," kra"," kraj"," kre"," krit"," ksi"," kter"," kult"," kun"," kunnen"," kunst"," kur"," kurz"," kv"," kw"," kwam"," kwiet"," kwietnia"," kyr"," l"," la"," laat"," lab"," label"," labels"," labor"," labour"," lac"," lack"," lad"," ladies"," lado"," lady"," lag"," laid"," lak"," lake"," lambda"," lamp"," lan"," lance"," land"," landet"," landing"," lands"," landscape"," lang"," lange"," language"," languages"," langue"," lanz"," lap"," laptop"," laquelle"," lar"," laravel"," larg"," large"," largely"," larger"," largest"," largo"," las"," lasci"," lassen"," last"," lat"," latach"," late"," laten"," later"," latest"," latin"," latitude"," latter"," lattice"," laugh"," laughed"," launch"," launched"," lav"," lavor"," lavoro"," law"," laws"," lawyer"," lay"," layer"," layers"," layout"," lazy"," lb"," le"," lead"," leader"," leaders"," leadership"," leading"," leads"," leaf"," league"," leak"," lean"," lear"," learn"," learned"," learning"," least"," leave"," leaves"," leaving"," leb"," lect"," lecture"," led"," left"," leg"," legacy"," legal"," legend"," legisl"," legit"," legs"," lei"," lem"," lemma"," len"," leng"," length"," lengths"," lequel"," les"," less"," let"," leta"," letech"," lets"," lett"," letter"," letters"," letting"," letzten"," leur"," leurs"," lev"," level"," levels"," lever"," lex"," li"," lib"," liber"," liberal"," libert"," liberty"," libraries"," library"," libre"," libro"," lic"," license"," licz"," lid"," lider"," lie"," liegt"," lies"," lieu"," lieutenant"," lif"," life"," lifetime"," lift"," lifted"," lig"," liga"," ligger"," light"," lights"," ligne"," lij"," lik"," like"," liked"," likely"," lim"," limit"," limitation"," limitations"," limited"," limits"," lin"," line"," linea"," linear"," lines"," ling"," lingu"," link"," linked"," linker"," linking"," links"," linux"," lip"," lipca"," lips"," liqu"," liquid"," lire"," list"," lista"," listade"," liste"," listed"," listen"," listened"," listener"," listening"," listing"," listop"," listopada"," lists"," listview"," lit"," liter"," literal"," literally"," literary"," literature"," litt"," little"," liv"," live"," lived"," lives"," living"," livre"," livres"," ll"," llam"," llamado"," lle"," lleg"," llev"," lloc"," lo"," load"," loaded"," loader"," loading"," loads"," loan"," loc"," local"," locale"," localhost"," localidad"," locally"," locate"," located"," location"," locations"," lock"," locked"," locomot"," lod"," log"," logged"," logger"," logging"," logic"," logical"," login"," logo"," logs"," loi"," lok"," lon"," long"," longer"," longest"," longitud"," longitude"," longue"," look"," looked"," looking"," looks"," lookup"," loop"," looping"," loops"," loose"," lord"," loro"," lors"," lorsque"," los"," lose"," losing"," loss"," losses"," lost"," lot"," lots"," loud"," lov"," love"," loved"," low"," lower"," lowest"," loyal"," ls"," lst"," lu"," lub"," luc"," luck"," lud"," luego"," lug"," lugar"," luglio"," lui"," lum"," lun"," lung"," lungo"," lut"," lutego"," lux"," ly"," lying"," lyr"," m"," ma"," maar"," mac"," mach"," machine"," machines"," macro"," mad"," made"," madre"," mag"," magazine"," maggio"," maggior"," maggiore"," magic"," magistr"," magn"," magnet"," magnetic"," magnific"," magnitude"," magyar"," mai"," mail"," main"," mainly"," maintain"," maintained"," mainten"," maintenance"," maior"," mais"," maison"," maj"," maja"," majd"," major"," majority"," mak"," make"," makes"," making"," mal"," male"," males"," malloc"," man"," manage"," managed"," management"," manager"," mand"," manera"," mang"," manif"," manifest"," manifold"," manip"," manipulate"," manner"," mano"," mant"," manten"," manual"," manually"," manufact"," manus"," manuscript"," many"," map"," mapped"," mapping"," maps"," mar"," marc"," marca"," march"," mare"," marg"," margin"," mari"," marine"," mark"," marked"," marker"," markers"," market"," marks"," markup"," marqu"," marque"," marriage"," married"," marry"," mars"," mart"," marzo"," mas"," mascul"," mask"," mass"," masses"," massive"," master"," mat"," match"," matched"," matches"," matching"," mate"," mater"," material"," materials"," math"," mathemat"," mathematical"," mathematics"," matplotlib"," matrices"," matrix"," matter"," matters"," maven"," max"," maxim"," maximal"," maximum"," may"," maybe"," mayo"," mayor"," md"," me"," mean"," meaning"," means"," meant"," meas"," measure"," measured"," measurement"," measurements"," measures"," meat"," mechan"," mechanical"," mechanism"," med"," medal"," medi"," media"," median"," mediante"," medic"," medical"," medicine"," medieval"," medio"," medium"," meer"," meet"," meeting"," meets"," meg"," mehr"," mehrere"," mehrerer"," meille"," meilleur"," meist"," mejor"," mel"," melhor"," mellan"," mely"," mem"," memb"," member"," members"," membership"," membre"," membres"," memor"," memory"," men"," menor"," menos"," mens"," ment"," mental"," mention"," mentioned"," mentions"," mentre"," menu"," mer"," merc"," merchant"," mere"," merely"," merge"," merged"," mes"," meses"," mesh"," mesmo"," mess"," message"," messages"," mest"," mesure"," met"," meta"," metadata"," metal"," meteor"," meter"," meters"," method"," methods"," metres"," metric"," metrics"," metropol"," metros"," mex"," mez"," mezi"," mi"," miasta"," mic"," mich"," micro"," mid"," middle"," midst"," mie"," miejs"," miejsce"," miejscowo"," miembros"," mientras"," miesz"," mig"," might"," mighty"," migli"," migr"," migration"," mij"," mil"," mile"," miles"," milieu"," milit"," militaire"," militar"," militare"," military"," milk"," mill"," millimeter"," million"," millions"," millones"," min"," mind"," minds"," mine"," mines"," mini"," minim"," minimal"," minimum"," minist"," minister"," ministre"," minor"," mint"," minus"," minute"," minutes"," mir"," mirror"," mis"," mise"," miser"," mism"," misma"," mismatch"," mismo"," miss"," missed"," missing"," mission"," mist"," mistake"," mistaken"," mistakes"," mistrzost"," misunder"," mit"," mitt"," mix"," mixed"," mixing"," mixture"," mk"," mkdir"," mm"," mn"," mo"," mob"," mobil"," mobile"," mock"," mod"," modal"," mode"," model"," modelo"," models"," moder"," modern"," moderne"," modes"," modific"," modification"," modifications"," modified"," modify"," modifying"," modo"," module"," modules"," mog"," moi"," moins"," mois"," mol"," mole"," molt"," molti"," molto"," mom"," moment"," momento"," moments"," momentum"," mon"," monarch"," monaster"," mond"," monde"," mondiale"," mondo"," money"," mongo"," mongodb"," monitor"," monitoring"," monot"," mont"," month"," months"," monument"," monuments"," moon"," mor"," moral"," more"," moreover"," morning"," morph"," mort"," morte"," mos"," most"," mostly"," mostra"," mot"," moth"," mother"," motion"," motiv"," motor"," mou"," mount"," mountain"," mountains"," mounted"," mouse"," mouth"," mouv"," mouvement"," mov"," move"," moved"," movement"," movements"," moves"," movie"," moving"," moy"," moyenne"," mp"," ms"," msg"," mu"," much"," mucho"," muchos"," mud"," muerte"," muit"," muito"," mujer"," mujeres"," mul"," mult"," multi"," multimedia"," multip"," multiple"," multiplication"," multiply"," mundial"," mundo"," municip"," municipal"," municipality"," municipio"," mur"," murder"," murm"," mus"," muse"," museum"," music"," musica"," musical"," musicale"," musique"," muss"," musste"," must"," mut"," mutable"," muy"," muz"," mv"," my"," myself"," mysq"," mysql"," mysqli"," myst"," myster"," mystery"," myth"," n"," na"," naam"," naar"," nab"," nac"," nach"," nacional"," nad"," nada"," nag"," nagy"," nah"," nahe"," nahm"," naj"," nak"," nam"," name"," named"," namely"," names"," namespace"," naming"," nan"," nap"," nar"," narod"," narr"," narrow"," nas"," nasc"," nast"," nat"," nation"," national"," nationale"," nations"," native"," natur"," natural"," naturally"," nature"," nau"," nav"," naval"," nave"," navig"," navigate"," navigation"," naz"," nazionale"," nazw"," ne"," near"," nearby"," nearest"," nearly"," neat"," neben"," nebo"," neces"," necess"," necessarily"," necessary"," necessity"," neck"," ned"," need"," needed"," needs"," neg"," negative"," neglect"," negli"," negoti"," negro"," nei"," neigh"," neighb"," neighbor"," neighborhood"," neighbour"," neighbourhood"," neither"," nej"," nel"," nell"," nella"," nelle"," nello"," nem"," nep"," ner"," nerv"," nest"," nested"," net"," network"," networking"," networks"," neu"," neue"," neuen"," neur"," neural"," neut"," neutral"," nev"," never"," new"," newer"," newline"," newly"," news"," newsp"," newspaper"," next"," ng"," nginx"," ni"," nic"," nice"," nicely"," nich"," nicht"," nick"," nie"," nieder"," niem"," niemieck"," niet"," nieuwe"," night"," nil"," nim"," nin"," nine"," ning"," nit"," niveau"," nivel"," nj"," no"," nob"," noble"," nobles"," nobody"," noch"," nod"," node"," nodes"," nog"," noise"," nom"," nombr"," nombre"," nombreuses"," nombreux"," nome"," nomin"," nominated"," non"," none"," nor"," nord"," noreferrer"," norm"," normal"," normally"," norte"," north"," northern"," nos"," nose"," nost"," not"," notable"," notamment"," notation"," note"," noted"," notes"," nothing"," notice"," noticed"," notification"," notifications"," notify"," notion"," notre"," nou"," nous"," nouve"," nouveau"," nouvelle"," nouvelles"," nov"," nova"," novel"," november"," novembre"," noviembre"," now"," np"," npm"," nr"," ns"," nu"," nuc"," nucle"," nuclear"," nue"," nueva"," nuevo"," nuit"," null"," num"," number"," numbers"," numer"," numeric"," numerical"," numero"," numerous"," numpy"," nun"," nunca"," nuova"," nuovo"," nur"," nut"," ny"," nyel"," nyelven"," o"," ob"," obec"," ober"," obey"," obj"," object"," objective"," objects"," objet"," oblig"," obliged"," obra"," obras"," obs"," obsc"," obser"," observ"," observable"," observation"," observations"," observe"," observed"," observer"," obst"," obt"," obtain"," obtained"," obten"," obvious"," obviously"," oc"," ocas"," occ"," occas"," occasion"," occasionally"," occasions"," occident"," occup"," occupation"," occupied"," occur"," occurr"," occurred"," occurrence"," occurs"," ocean"," och"," oct"," octobre"," octubre"," ocup"," od"," odd"," oder"," odkazy"," of"," off"," offer"," offered"," offering"," offers"," offic"," office"," officer"," officers"," offices"," offici"," official"," officially"," officials"," officiel"," offset"," ofic"," oficial"," oft"," often"," og"," ogni"," oh"," ohne"," oil"," ok"," okay"," oko"," okres"," oktober"," ol"," old"," oldal"," older"," oldest"," olimp"," oltre"," olymp"," om"," omitted"," on"," once"," onclick"," onde"," onder"," onderwerp"," one"," ones"," online"," only"," ont"," onto"," ook"," op"," opacity"," open"," opened"," opening"," opens"," oper"," opera"," operate"," operated"," operating"," operation"," operations"," operator"," operators"," opere"," opin"," opinion"," opinions"," opp"," oppon"," opport"," opportun"," opportunity"," oppos"," opposed"," opposite"," opposition"," opt"," optical"," optim"," optimal"," optimization"," optimize"," optimized"," option"," optional"," options"," opts"," or"," ora"," oracle"," orange"," oraz"," orb"," orbit"," orch"," ord"," orden"," order"," ordered"," ordering"," orders"," ordin"," ordinary"," ore"," org"," organ"," organis"," organisation"," organiz"," organization"," organizations"," organized"," orient"," orientation"," orig"," origen"," origin"," original"," originale"," originally"," orn"," oro"," ort"," orth"," orthogonal"," os"," osc"," oscill"," osob"," ost"," ot"," other"," others"," otherwise"," otra"," otras"," otro"," otros"," ott"," otten"," otto"," ottobre"," ou"," ought"," our"," ourselves"," out"," outcome"," outer"," outline"," output"," outputs"," outras"," outros"," outside"," ouv"," ov"," over"," overall"," overcome"," overflow"," overhead"," overlap"," overlay"," overrid"," override"," overwrite"," ow"," own"," owned"," owner"," ownership"," ox"," p"," pa"," pac"," pace"," pack"," package"," packages"," packet"," packets"," pad"," padding"," padre"," pag"," page"," pages"," paid"," pain"," paint"," painted"," painter"," painting"," pair"," pairs"," pak"," pal"," palab"," palace"," pale"," pam"," pan"," pandas"," panel"," pap"," papa"," papel"," paper"," papers"," par"," para"," parad"," paragraph"," parallel"," param"," paramet"," parameter"," parameters"," params"," parc"," pare"," parent"," parenthes"," parentheses"," parents"," parfois"," parish"," park"," parl"," parlament"," parliament"," parmi"," parse"," parsed"," parser"," parsing"," part"," parte"," partecip"," parti"," partial"," partially"," partic"," partici"," particip"," participants"," participated"," participation"," participe"," particle"," particles"," particolare"," particul"," particular"," particularly"," particulier"," partido"," partidos"," partie"," partiellement"," parties"," partir"," partition"," partitions"," partly"," partner"," partners"," parts"," party"," pas"," pass"," passage"," passe"," passed"," passenger"," passengers"," passer"," passes"," passing"," passion"," password"," passwords"," past"," paste"," pat"," patch"," path"," paths"," patient"," patients"," patr"," patri"," patron"," pattern"," patterns"," pau"," pause"," paused"," pav"," pay"," payload"," payment"," pays"," pc"," pd"," pdf"," pe"," peace"," peak"," pec"," peculiar"," ped"," pedig"," peer"," peint"," pel"," pela"," pelo"," pelos"," pels"," pen"," penalty"," pendant"," pending"," pens"," pent"," pentru"," people"," peque"," per"," perce"," percent"," percentage"," perd"," perf"," perfect"," perfectly"," perform"," performance"," performances"," performed"," performing"," performs"," perhaps"," peri"," period"," periodic"," periodo"," periods"," perl"," perm"," perman"," permanent"," permet"," permett"," permission"," permissions"," permit"," permitted"," permut"," pero"," perpet"," pers"," persist"," persistent"," person"," persona"," personal"," personally"," personas"," persone"," persones"," personn"," personne"," personnel"," personnes"," persons"," perspective"," persu"," pert"," perten"," perturb"," pes"," pesar"," pesso"," pet"," petit"," petite"," peu"," peut"," peuvent"," pg"," ph"," phase"," phases"," phen"," phenomen"," phil"," philosoph"," philosophy"," phone"," phot"," photo"," photograph"," photos"," php"," phr"," phrase"," phys"," physical"," physics"," pi"," pia"," pian"," piano"," pic"," pick"," picked"," picture"," pictures"," pid"," pie"," piece"," pieces"," pied"," pier"," pierw"," pierws"," pil"," pill"," pilot"," pin"," ping"," pint"," pione"," pip"," pipe"," pipeline"," pir"," pis"," pit"," pitch"," pitt"," pity"," pivot"," pix"," pixel"," pixels"," pl"," pla"," plaats"," place"," placed"," placeholder"," places"," placing"," plain"," plan"," plane"," planet"," planned"," planning"," plans"," plant"," planta"," plants"," plat"," plata"," plate"," platform"," platforms"," play"," played"," player"," players"," playing"," plays"," ple"," pleasant"," please"," pleased"," pleasure"," plenty"," plot"," plots"," plt"," plug"," plugin"," plugins"," plus"," plusieurs"," plut"," pm"," po"," pob"," pobla"," poc"," pochod"," pocket"," poco"," pod"," podczas"," pode"," poder"," poem"," poet"," poeta"," poetry"," pog"," poi"," point"," pointed"," pointer"," pointers"," pointing"," points"," poison"," poj"," pok"," pol"," polar"," pole"," polic"," police"," policies"," policy"," polit"," political"," politician"," politico"," politics"," politique"," polity"," poll"," polski"," poly"," polygon"," polym"," polynomial"," polynomials"," pom"," pon"," pont"," pool"," poor"," pop"," popol"," popul"," popula"," popular"," populate"," populated"," population"," populations"," popup"," por"," porque"," port"," porta"," portal"," porte"," portion"," portrait"," ports"," portug"," pos"," pose"," posible"," posit"," position"," positions"," positive"," poss"," possess"," possessed"," possession"," possib"," possibil"," possibilities"," possibility"," possible"," possibly"," possono"," post"," postal"," poste"," posted"," poster"," posterior"," postgresql"," posting"," posto"," posts"," pot"," potential"," potentially"," pou"," pounds"," pour"," pouv"," pouvoir"," pov"," pover"," pow"," power"," powerful"," powers"," powershell"," powiat"," powie"," powiecie"," powst"," poz"," pp"," pr"," pra"," prac"," pract"," practical"," practice"," practices"," prakt"," prav"," praw"," pray"," prayer"," pre"," prec"," preced"," preceding"," precip"," precis"," precise"," precisely"," precision"," pred"," prede"," predicate"," predict"," predicted"," prediction"," predictions"," prefer"," preference"," preferred"," prefix"," preg"," prem"," premi"," premier"," premiers"," prend"," prendre"," prep"," prepar"," prepare"," prepared"," pres"," presence"," present"," presenta"," presentation"," presente"," presented"," presently"," presents"," preserve"," preserved"," presiden"," president"," presidente"," press"," pressed"," pressing"," presso"," pressure"," prest"," pret"," pretty"," prev"," prevent"," prevents"," preview"," previous"," previously"," prez"," pri"," price"," prices"," pride"," priest"," prim"," prima"," primarily"," primary"," prime"," primeira"," primeiro"," primer"," primera"," primeros"," primi"," primit"," primitive"," primo"," prin"," prince"," princes"," princi"," princip"," principal"," principale"," principales"," principalmente"," principe"," principle"," principles"," print"," printed"," printer"," printf"," printing"," println"," prints"," prior"," priority"," pris"," prison"," prisoner"," prisoners"," priv"," private"," privile"," privileges"," prix"," prize"," pro"," prob"," probabil"," probability"," probable"," probably"," probl"," proble"," problem"," problema"," problemas"," problems"," proc"," proced"," procedure"," procedures"," proceed"," proceeded"," proces"," process"," processed"," processes"," processing"," processor"," prod"," produ"," produce"," produced"," producer"," produces"," producing"," product"," production"," products"," produit"," produz"," prof"," profes"," profesor"," profess"," profession"," professional"," professor"," profil"," profile"," profiles"," profit"," proget"," progetti"," program"," programa"," programma"," programme"," programmer"," programming"," programs"," progress"," prohib"," project"," projection"," projects"," projekt"," projet"," prolong"," prom"," prominent"," promise"," promised"," promises"," promote"," promoted"," promotion"," prompt"," pron"," proof"," proofs"," prop"," propag"," proper"," properly"," properties"," property"," proph"," propi"," propor"," proport"," proportion"," proportional"," propos"," proposal"," propose"," proposed"," proposition"," propre"," propri"," propriet"," proprio"," props"," pros"," prospect"," prosper"," prost"," prot"," protagon"," protagonista"," prote"," protect"," protected"," protection"," protein"," protest"," proto"," protocol"," prototype"," proud"," prov"," prove"," proved"," proven"," proves"," provide"," provided"," provider"," provides"," providing"," provin"," province"," provinces"," provincia"," provincial"," provincie"," provision"," provoc"," prowad"," proxim"," proxy"," proyect"," proyecto"," prue"," prv"," prz"," prze"," przeci"," przed"," przew"," przez"," przy"," ps"," pse"," pseud"," pseudo"," psych"," pt"," ptr"," pu"," pub"," pubblic"," pubblicato"," publi"," public"," publicada"," publication"," publications"," publish"," published"," publishing"," pue"," pueblo"," puede"," pueden"," puesto"," puis"," pul"," pull"," pulled"," pulling"," pun"," punk"," punt"," punto"," puntos"," pup"," pur"," purch"," purchase"," purchased"," pure"," purely"," purpose"," purposes"," purs"," push"," pushed"," pushing"," put"," puts"," putting"," puzz"," py"," pyg"," pygame"," python"," q"," qu"," quad"," quadr"," quadratic"," qual"," quale"," quali"," qualified"," quality"," quan"," quand"," quando"," quant"," quantities"," quantity"," quanto"," quantum"," quar"," quart"," quarter"," quartier"," quasi"," quatre"," quattro"," que"," qued"," queen"," quel"," quella"," quelle"," quello"," quelque"," quelques"," quer"," queries"," query"," quest"," questa"," questi"," question"," questions"," questo"," queue"," qui"," quick"," quickly"," quien"," quiet"," quietly"," quindi"," quit"," quite"," quot"," quote"," quoted"," quotes"," r"," ra"," rabb"," rac"," racc"," race"," races"," racing"," rad"," radi"," radial"," radiation"," radical"," radio"," radius"," rag"," raggi"," rail"," rails"," railway"," rain"," raise"," raised"," raising"," raison"," ram"," ran"," rand"," random"," randomly"," rang"," range"," ranges"," rank"," ranked"," ranking"," ranks"," rap"," rapid"," rapide"," rapidly"," rapp"," rapport"," rappres"," rappresent"," rare"," rarely"," ras"," rat"," rate"," rates"," rather"," rating"," ratings"," ratio"," rational"," rav"," raw"," ray"," raz"," re"," reach"," reached"," reaches"," reaching"," react"," reaction"," reactjs"," read"," readable"," reader"," readers"," readily"," reading"," readonly"," reads"," ready"," real"," reality"," realiz"," realize"," realized"," really"," rear"," reason"," reasonable"," reasoning"," reasons"," reb"," reboot"," rec"," recall"," rece"," receive"," received"," receiver"," receives"," receiving"," recens"," recensement"," recent"," recently"," reception"," recher"," recherche"," recht"," reci"," recip"," reck"," recogn"," recognition"," recognize"," recognized"," recom"," recomm"," recommend"," recommendation"," recommended"," recon"," reconna"," reconoc"," reconst"," record"," recorded"," recording"," records"," recover"," recovered"," recovery"," recre"," rect"," rectangle"," recuper"," recurs"," recursion"," recursive"," red"," redirect"," redirects"," redis"," redu"," reduce"," reduced"," reduces"," reducing"," reduction"," redund"," redundant"," ref"," refactor"," refer"," reference"," referenced"," references"," referencing"," referred"," referring"," refers"," reflect"," reflected"," reflection"," reform"," refresh"," refuge"," refuse"," refused"," reg"," regard"," regarded"," regarding"," regardless"," regards"," regex"," regia"," regime"," regiment"," region"," regional"," regions"," register"," registered"," registers"," registr"," registration"," registry"," regnig"," regnigaste"," regres"," regression"," regret"," regul"," regular"," regularly"," rei"," reign"," rein"," reject"," rejected"," rejo"," rel"," rela"," relac"," relacion"," relate"," related"," relation"," relations"," relationship"," relationships"," relativ"," relative"," relatively"," relatives"," relax"," relay"," release"," released"," releases"," relev"," relevant"," reli"," reliable"," relief"," relig"," religion"," religios"," religious"," reload"," rely"," rem"," remain"," remainder"," remained"," remaining"," remains"," remark"," remarkable"," remarked"," remarks"," remember"," remembered"," remote"," remov"," removal"," remove"," removed"," removes"," removing"," remp"," remporte"," ren"," rename"," renamed"," rencontre"," rend"," rende"," render"," rendered"," rendering"," renew"," renov"," rent"," rep"," repair"," repe"," repeat"," repeated"," repeatedly"," repeating"," repet"," repla"," replace"," replaced"," replacement"," replacing"," replied"," reply"," repo"," report"," reported"," reporting"," reports"," repos"," repositories"," repository"," repr"," repre"," repres"," represent"," representation"," representations"," representative"," represented"," representing"," represents"," reprezent"," repro"," reprodu"," reproduce"," repub"," republic"," reputation"," req"," requ"," request"," requested"," requests"," require"," required"," requirement"," requirements"," requires"," requiring"," res"," rescue"," research"," reserve"," reserved"," reset"," resid"," residence"," resident"," residents"," resist"," resistance"," resize"," resol"," resolution"," resolve"," resolved"," reson"," resort"," resource"," resources"," resp"," respect"," respective"," respectively"," respond"," respons"," response"," responses"," responsibility"," responsible"," ress"," rest"," resta"," restart"," restaur"," restaurant"," reste"," resto"," restore"," restored"," restrict"," restricted"," restriction"," restrictions"," result"," resultado"," resulted"," resulting"," results"," ret"," retain"," retained"," retir"," retired"," retour"," retr"," retra"," retre"," retrieve"," retrieved"," retro"," return"," returned"," returning"," returns"," reun"," reuse"," rev"," reve"," revealed"," revel"," reven"," rever"," revers"," reverse"," revert"," review"," reviews"," revis"," revision"," revista"," revol"," revolution"," reward"," rewrite"," rey"," rez"," rg"," rgba"," rh"," rhs"," ri"," rib"," ric"," rice"," rich"," richt"," ricon"," rid"," ride"," rien"," ries"," rif"," rig"," right"," rights"," rim"," rin"," ring"," rings"," rip"," ris"," rise"," rising"," risk"," risp"," risult"," rit"," rius"," riv"," rival"," river"," rivers"," rm"," ro"," road"," roads"," rob"," robot"," robust"," roce"," rock"," rocks"," rod"," rode"," rodz"," roi"," rok"," roku"," rol"," role"," roles"," roll"," rolled"," rolling"," rom"," roman"," rond"," roof"," room"," rooms"," root"," roots"," ros"," rose"," rot"," rotate"," rotation"," rou"," rough"," roughly"," round"," rounded"," rout"," route"," router"," routes"," routine"," routing"," row"," rows"," roy"," royal"," royale"," roz"," rozp"," rs"," ru"," rub"," ruby"," rud"," rue"," rug"," rugby"," rule"," ruled"," rules"," rum"," run"," runat"," rund"," runner"," running"," runs"," runt"," runtime"," ruolo"," rural"," rus"," russ"," russe"," rust"," ry"," s"," sa"," sab"," sac"," sacr"," sacred"," sacrific"," sacrifice"," sad"," saf"," safe"," safely"," safety"," sag"," sah"," said"," sail"," sain"," saint"," saison"," sake"," sal"," sale"," sales"," salt"," salv"," sam"," same"," samen"," sample"," samples"," sampling"," samt"," san"," sand"," sang"," sans"," sant"," sap"," sar"," sare"," sat"," satellite"," satisf"," satisfaction"," satisfied"," satisfies"," satisfy"," satisfying"," sau"," sav"," save"," saved"," saves"," saving"," saw"," say"," saying"," says"," sb"," sc"," scal"," scala"," scalar"," scale"," scales"," scaling"," scan"," scar"," scarc"," scarcely"," scatter"," scattered"," scen"," scenario"," scenarios"," scene"," scenes"," sch"," sche"," sched"," schedule"," scheduled"," schema"," scheme"," schemes"," scholar"," schon"," school"," schools"," schw"," schwer"," sci"," science"," sciences"," scient"," scientific"," scop"," scope"," score"," scored"," scores"," scoring"," scr"," scra"," scratch"," screen"," screens"," screenshot"," scri"," script"," scripts"," scrit"," scroll"," scrolling"," sculpt"," sd"," se"," sea"," search"," searched"," searches"," searching"," season"," seasons"," seat"," seats"," sec"," sechs"," secolo"," second"," seconda"," secondary"," seconde"," secondo"," seconds"," secre"," secret"," secretary"," sect"," section"," sections"," sector"," secure"," secured"," security"," sed"," sedan"," sede"," see"," seed"," seeing"," seek"," seeking"," seem"," seemed"," seems"," seen"," sees"," seg"," segle"," segment"," segments"," segu"," seguito"," segunda"," segundo"," sehen"," sehr"," sei"," sein"," seine"," seinem"," seinen"," seiner"," seines"," seis"," seit"," seized"," seizo"," seizoen"," sel"," selbst"," sele"," select"," selected"," selecting"," selection"," selector"," selects"," selenium"," self"," sell"," selon"," sem"," semantic"," semantics"," semb"," semi"," semif"," sempre"," sen"," send"," sender"," sending"," sendo"," sends"," senior"," sens"," sense"," sensible"," sensitive"," sensor"," sent"," sentence"," sentences"," sentiment"," senza"," sep"," separ"," separate"," separated"," separately"," separation"," separator"," sept"," september"," septembre"," septiembre"," seq"," sequ"," sequence"," sequences"," ser"," sera"," serait"," seria"," serial"," serialize"," serie"," series"," serious"," seriously"," serv"," servant"," servants"," serve"," served"," server"," servers"," serves"," servi"," service"," services"," serving"," servir"," servlet"," ses"," sess"," session"," sessions"," set"," sets"," sett"," settembre"," setting"," settings"," settled"," settlement"," setup"," seu"," seul"," seule"," seulement"," seus"," seva"," seven"," sevent"," sever"," several"," severe"," sex"," sexual"," sezon"," sf"," sh"," shadow"," shall"," shame"," shape"," shapes"," share"," shared"," shares"," sharing"," sharp"," she"," shed"," sheep"," sheet"," sheets"," shell"," shelter"," shield"," shift"," ship"," ships"," sho"," shock"," shook"," shoot"," shooting"," shop"," shore"," short"," shortcut"," shorter"," shortly"," shot"," should"," shoulder"," shoulders"," shouldn"," shout"," show"," showed"," showing"," shown"," shows"," shr"," shut"," si"," sia"," sib"," sic"," sich"," sick"," sid"," side"," sides"," sido"," sie"," sieben"," siehe"," siempre"," siendo"," sier"," sierp"," sierpnia"," sig"," sight"," siglo"," sign"," signal"," signals"," signature"," signed"," signific"," significa"," significance"," significant"," significantly"," signing"," signs"," sigu"," siguiente"," siguientes"," sil"," silence"," silent"," silly"," silver"," sim"," similar"," similarity"," similarly"," simp"," simpl"," simple"," simpler"," simplest"," simplicity"," simplified"," simplify"," simply"," simulate"," simulation"," simulations"," simult"," simultane"," simultaneously"," sin"," since"," sind"," sing"," singer"," singing"," single"," singles"," singleton"," singular"," sink"," sino"," sint"," sir"," sist"," sistema"," sister"," sit"," site"," sites"," sitt"," sitting"," situ"," situated"," situation"," situations"," six"," sixth"," size"," sizeof"," sizes"," sj"," sk"," skal"," ske"," sketch"," ski"," skill"," skills"," skin"," skip"," skulle"," skup"," sky"," sl"," sla"," slash"," slave"," slaves"," sle"," sleep"," sli"," slice"," slide"," slider"," slight"," slightly"," slo"," slope"," slot"," slov"," slow"," slower"," slowly"," sm"," small"," smaller"," smallest"," smart"," smile"," smiled"," smoke"," smooth"," sn"," snap"," snapshot"," sni"," snippet"," snow"," so"," soap"," sob"," sobre"," soc"," soci"," social"," sociale"," society"," socket"," sod"," soft"," software"," sog"," soil"," soir"," soit"," sol"," solar"," sold"," soldier"," soldiers"," sole"," solem"," solemn"," solic"," solid"," solit"," soll"," sollte"," solo"," sols"," solution"," solutions"," solve"," solved"," solves"," solving"," som"," some"," somebody"," somehow"," someone"," somet"," something"," sometimes"," somewhat"," somewhere"," son"," sondern"," song"," songs"," sono"," sons"," sont"," soon"," sooner"," soort"," sop"," sor"," sorrow"," sorry"," sort"," sorte"," sorted"," sorti"," sortie"," sorting"," sorts"," sost"," sott"," sotto"," sou"," sought"," soul"," sound"," sounds"," soup"," source"," sources"," sous"," sout"," south"," southern"," souvent"," sov"," sovi"," sow"," sowie"," sp"," spac"," space"," spaces"," spacing"," span"," spare"," spark"," sparse"," spatial"," spawn"," spe"," speak"," speaker"," speaking"," spec"," special"," specie"," species"," specific"," specifically"," specification"," specified"," specify"," specifying"," spect"," spectral"," spectrum"," speech"," speed"," spel"," spell"," spend"," spent"," spher"," sphere"," spiel"," spielte"," spin"," spir"," spirit"," spirits"," spiritual"," spite"," spl"," splend"," splendid"," split"," splitting"," spo"," spoke"," spoken"," spole"," spons"," sport"," sports"," spos"," spot"," spr"," spraw"," spre"," spread"," spring"," sprite"," sq"," sql"," sqlite"," squ"," squad"," squadra"," square"," squares"," sr"," src"," ss"," ssh"," ssl"," st"," sta"," staat"," stabil"," stability"," stable"," stack"," stackoverflow"," stad"," staff"," stag"," stage"," stages"," stagione"," stal"," stam"," stamp"," stan"," stand"," standard"," standards"," standing"," stands"," star"," starb"," stark"," stars"," start"," started"," starting"," starts"," startup"," stat"," stata"," state"," stated"," statement"," statements"," states"," stati"," static"," stating"," station"," stations"," statist"," statistical"," statistics"," stato"," stats"," statt"," statue"," statunit"," statunitense"," status"," stay"," stayed"," stays"," std"," stdout"," ste"," stead"," steady"," steam"," steel"," stehen"," steht"," stell"," stem"," step"," stepped"," steps"," ster"," stern"," stessa"," stesso"," stick"," still"," stim"," stir"," sto"," stock"," stolet"," stone"," stones"," stood"," stop"," stopped"," stopping"," stops"," stor"," storage"," store"," stored"," stores"," storia"," stories"," storing"," storm"," story"," str"," stra"," straight"," straightforward"," stran"," strange"," stranger"," strat"," strateg"," strategy"," stre"," stream"," streaming"," streams"," street"," streets"," strength"," stress"," stretch"," stri"," strict"," strictly"," strik"," strike"," striking"," string"," strings"," strip"," stro"," stroke"," strong"," stronger"," strongly"," stru"," struck"," struct"," structure"," structures"," strugg"," struggle"," struggling"," strutt"," stub"," stuck"," stud"," student"," students"," studi"," studied"," studierte"," studies"," studio"," study"," studying"," stuff"," stup"," stupid"," sty"," stycz"," stycznia"," style"," styles"," su"," sua"," suas"," sub"," subclass"," subgroup"," subject"," subjects"," subm"," submission"," submit"," submitted"," subs"," subscri"," subscription"," subsequ"," subsequent"," subsequently"," subset"," subsets"," subst"," substant"," substantial"," substitute"," substitution"," substr"," substring"," subt"," subtract"," suc"," succ"," succeed"," succeeded"," success"," successful"," successfully"," succession"," successo"," successor"," such"," sud"," sudden"," suddenly"," sudo"," sue"," suf"," suff"," suffer"," suffered"," suffering"," sufficient"," sufficiently"," suffix"," sug"," sugar"," sugg"," suggest"," suggested"," suggesting"," suggestion"," suggestions"," suggests"," suic"," suis"," suit"," suitable"," suite"," suiv"," suivante"," sujet"," sul"," sull"," sulla"," sulle"," sum"," summ"," summar"," summary"," summer"," sums"," sun"," sunt"," suo"," suoi"," sup"," super"," superfic"," superficie"," superior"," supp"," supplied"," supplies"," supply"," support"," supported"," supporting"," supports"," suppose"," supposed"," suppress"," supre"," sur"," sure"," surely"," surface"," surfaces"," surg"," surname"," surpr"," surprise"," surprised"," surprising"," surr"," surrender"," surrounded"," surrounding"," surtout"," surv"," surve"," survey"," sus"," susp"," suspect"," sust"," sv"," svensk"," svg"," svil"," svo"," svol"," sw"," swap"," swe"," sweet"," swift"," swing"," switch"," switched"," switching"," swo"," sword"," sy"," syd"," sym"," symbol"," symbols"," symmet"," symmetric"," symmetry"," sympath"," sympathy"," sympt"," syn"," sync"," synchron"," synd"," syntax"," synth"," sys"," syst"," system"," systems"," sz"," sze"," szeptember"," szer"," szere"," szerint"," t"," ta"," tab"," table"," tables"," tabs"," tack"," tact"," tag"," tags"," tail"," tak"," take"," taken"," takes"," taking"," tal"," tale"," talent"," tales"," talk"," talked"," talking"," tall"," tam"," tamb"," tan"," tandis"," tang"," tank"," tant"," tanto"," tap"," tar"," tard"," tarde"," target"," targets"," tart"," task"," tasks"," taste"," taught"," tax"," tbl"," tcp"," td"," te"," tea"," teach"," teacher"," teachers"," teaching"," team"," teams"," tears"," teat"," teatro"," tec"," techn"," techni"," technical"," technique"," techniques"," technology"," tecn"," ted"," tedes"," tedesco"," teeth"," tegen"," tego"," teil"," tej"," tek"," tel"," tele"," telep"," teles"," televis"," television"," tell"," telling"," tells"," telt"," tem"," tema"," temp"," temper"," temperature"," template"," templates"," temple"," tempo"," tempor"," temporada"," temporal"," temporary"," temps"," tempt"," ten"," tend"," tender"," tends"," tener"," tenia"," tenir"," tennis"," tens"," tensor"," tensorflow"," tent"," teor"," ter"," term"," terme"," termin"," terminal"," terminate"," terminated"," termine"," terms"," terra"," terrain"," terre"," terrest"," terrible"," territ"," territoire"," territorial"," territorio"," territory"," terror"," terug"," test"," tested"," testim"," testing"," tests"," tex"," text"," textbox"," texts"," texture"," tf"," th"," than"," thank"," thanks"," that"," thats"," the"," theatre"," thee"," their"," them"," theme"," themselves"," then"," theorem"," theoret"," theoretical"," theories"," theory"," ther"," there"," thereby"," therefore"," therm"," thermal"," these"," they"," thick"," thin"," thing"," things"," think"," thinking"," thinks"," third"," thirty"," this"," thor"," thorough"," thoroughly"," those"," thou"," though"," thought"," thoughts"," thous"," thousand"," thousands"," thr"," thre"," thread"," threads"," threat"," threaten"," threatened"," three"," threshold"," threw"," thro"," throne"," through"," throughout"," throw"," throwing"," thrown"," throws"," thrust"," thumb"," thus"," thy"," ti"," tib"," tick"," ticket"," tid"," tie"," tied"," tiem"," tiempo"," tiene"," tienen"," tier"," tierra"," tight"," tijd"," tijdens"," til"," tile"," till"," tim"," time"," timeout"," timer"," times"," timestamp"," timezone"," timing"," timp"," tin"," tinha"," tiny"," tip"," tipo"," tips"," tir"," tired"," tit"," title"," titled"," titles"," titolo"," titre"," tk"," tm"," tmp"," to"," tod"," toda"," todas"," today"," todo"," todos"," toe"," toen"," tog"," together"," togg"," toggle"," token"," tokens"," told"," toler"," tom"," tomb"," tomcat"," ton"," tone"," tong"," tongue"," tons"," too"," took"," tool"," toolbar"," tools"," top"," topic"," topics"," topological"," topology"," tor"," torn"," torneo"," torraste"," tort"," toss"," tot"," total"," totale"," totally"," tou"," touch"," touched"," toujours"," tour"," tourn"," tournament"," tous"," tout"," toute"," toutes"," toward"," towards"," tower"," town"," towns"," tr"," tra"," trab"," trabaj"," trabajo"," trabal"," trac"," trace"," traces"," track"," tracking"," tracks"," tract"," trad"," trade"," tradicional"," tradition"," traditional"," tradu"," traduc"," traffic"," trag"," trail"," trailing"," train"," trained"," training"," trains"," trait"," traject"," trakten"," tram"," tran"," trans"," transaction"," transactions"," transfer"," transferred"," transform"," transformation"," transformations"," transformed"," transition"," transl"," translate"," translated"," translation"," transm"," transmission"," transmit"," transparent"," transport"," trap"," tras"," trasfer"," trat"," trav"," trava"," travail"," travaux"," travel"," travers"," traverse"," tre"," treat"," treated"," treatment"," treball"," tree"," trees"," trem"," tren"," tres"," tri"," trial"," triangle"," trib"," tribe"," tribes"," trick"," tricky"," tried"," tries"," trif"," trig"," trigger"," triggered"," triggers"," trim"," trip"," triple"," triumph"," trivial"," tro"," trois"," trom"," troops"," trop"," tropical"," trou"," trouble"," troubles"," trouv"," trouve"," trov"," trova"," true"," truly"," trunc"," trust"," truth"," try"," trying"," ts"," tu"," tub"," tud"," tudi"," tum"," tun"," tunnel"," tuple"," tur"," turn"," turned"," turning"," turno"," turns"," tussen"," tut"," tutorial"," tutorials"," tutte"," tutti"," tutto"," tuvo"," tv"," tw"," twe"," twee"," tweede"," twelve"," twenty"," twice"," twitter"," two"," tx"," txt"," ty"," tyl"," tym"," typ"," type"," typed"," typedef"," typeof"," types"," typescript"," typical"," typically"," typing"," typo"," u"," ub"," ubic"," ubuntu"," ucc"," ucz"," ud"," ufficiale"," ugly"," ui"," uint"," uit"," uk"," ul"," ult"," ultimately"," um"," uma"," un"," una"," unable"," uncertain"," uncertainty"," uncle"," unclear"," und"," undefined"," under"," underarter"," underlying"," unders"," understand"," understanding"," understood"," undert"," une"," unexpected"," unf"," unfold"," unfortunately"," ung"," unh"," unicode"," uniform"," uniformly"," uninstall"," union"," uniqu"," unique"," unit"," units"," unity"," univers"," universal"," universe"," universitaire"," university"," unix"," unknown"," unless"," unlike"," unlikely"," unnecess"," unnecessary"," uno"," unos"," uns"," unsafe"," unsigned"," unter"," unterschied"," until"," unto"," unus"," unusual"," unw"," up"," upd"," update"," updated"," updates"," updating"," upgrad"," upgrade"," upload"," uploaded"," upon"," upp"," upper"," ups"," ur"," urb"," urban"," uri"," url"," urls"," urs"," us"," usage"," usar"," use"," used"," useful"," useless"," user"," username"," users"," uses"," using"," uso"," usual"," usually"," ut"," utf"," util"," utilis"," utility"," utiliz"," utter"," utwor"," uz"," v"," va"," vac"," vague"," vagy"," vain"," val"," vale"," valid"," validate"," validation"," vall"," valle"," valley"," valor"," valu"," valuable"," value"," values"," van"," var"," varchar"," vari"," variable"," variables"," variance"," variant"," variants"," varias"," variation"," variations"," varied"," variety"," varios"," various"," varmaste"," vars"," vary"," varying"," vas"," vast"," vb"," vba"," ve"," vec"," veces"," vector"," vectors"," ved"," veel"," veg"," veget"," veh"," vehicle"," vehicles"," vel"," veloc"," velocity"," ven"," vend"," vendor"," venne"," vent"," ver"," verb"," verbose"," verd"," vere"," verf"," verg"," verified"," verify"," verk"," verl"," verlor"," verm"," vern"," vers"," versch"," verschied"," verschiedenen"," verschill"," verse"," version"," versione"," versions"," verso"," versus"," vert"," verte"," vertex"," vertical"," vertices"," verw"," verwendet"," very"," verz"," ves"," vesc"," vess"," vessel"," vessels"," vest"," veter"," vez"," vi"," via"," vic"," vice"," vict"," victim"," victory"," vid"," vida"," vide"," videa"," video"," videos"," vie"," viel"," viele"," viene"," vier"," view"," viewed"," views"," vig"," vij"," vil"," vill"," villa"," village"," villages"," ville"," vin"," vio"," viol"," violence"," violent"," vir"," virt"," virtual"," virtue"," virtuel"," virus"," vis"," visibility"," visible"," vision"," visit"," visited"," visitor"," visitors"," viss"," vista"," visto"," visual"," vit"," vita"," vital"," vitt"," viv"," viz"," vl"," vm"," vo"," voc"," vocal"," vocals"," voce"," voet"," voice"," voices"," void"," voir"," vois"," voit"," voix"," voj"," vol"," voll"," volont"," volt"," volta"," voltage"," volte"," volume"," volumes"," volunt"," volunte"," vom"," von"," voor"," vor"," vorg"," vorm"," vot"," vote"," voted"," votes"," voting"," votre"," vou"," vous"," voy"," voyage"," voz"," vr"," vrij"," vs"," vu"," vue"," vuel"," vul"," vulner"," vy"," w"," wa"," waar"," wait"," waited"," waiting"," wal"," walk"," walked"," walking"," wall"," walls"," wand"," want"," wanted"," wanting"," wants"," war"," waren"," warm"," warn"," warning"," warnings"," wars"," was"," wasn"," waste"," wat"," watch"," watched"," watching"," water"," waters"," wave"," waves"," way"," ways"," wc"," we"," weak"," wealth"," weap"," weapon"," weapons"," wear"," weather"," web"," webpack"," webpage"," website"," websites"," wechsel"," wechselte"," wed"," week"," weeks"," weer"," weg"," wegen"," weight"," weights"," weil"," weird"," weit"," weiter"," weitere"," weiteren"," wel"," welche"," welcome"," well"," wen"," wenig"," wenn"," went"," wer"," werd"," werden"," were"," wereld"," werk"," west"," western"," wet"," wetenschapp"," wh"," what"," whatever"," whe"," wheel"," when"," whenever"," where"," whereas"," wherever"," whether"," which"," while"," whilst"," whis"," whisper"," white"," whites"," whitespace"," who"," whole"," whom"," whose"," why"," wicht"," wid"," wide"," widely"," wider"," widget"," width"," wie"," wieder"," wieku"," wiel"," wife"," wij"," wil"," wild"," will"," willing"," win"," wind"," window"," windows"," wine"," wing"," wings"," winner"," winning"," wins"," winter"," wir"," wird"," wire"," wireless"," wirk"," wis"," wisdom"," wise"," wish"," wished"," wishes"," wit"," with"," withdraw"," within"," without"," witness"," wo"," wob"," wobei"," wohl"," woj"," wojew"," wol"," woll"," woman"," women"," won"," wonder"," wonderful"," wondering"," wont"," wood"," wooden"," woods"," wor"," word"," worden"," wordpress"," words"," wordt"," wore"," work"," workaround"," worked"," worker"," workers"," workflow"," working"," works"," world"," worn"," worry"," worse"," worship"," worst"," worth"," worthy"," would"," wouldn"," wounded"," wp"," wr"," wra"," wrap"," wrapped"," wrapper"," wrapping"," wrest"," writ"," write"," writer"," writers"," writes"," writing"," written"," wrong"," wrote"," ws"," wsp"," wsz"," wszyst"," wur"," wurde"," wurden"," ww"," www"," wx"," wy"," wyd"," wyn"," wys"," wyst"," wz"," x"," xcode"," xml"," xmlns"," xs"," xx"," y"," ya"," yard"," yards"," ye"," yeah"," year"," years"," yellow"," yes"," yesterday"," yet"," yeux"," yield"," yields"," yo"," you"," young"," younger"," your"," yours"," yourself"," youth"," z"," za"," zab"," zach"," zag"," zahl"," zaj"," zak"," zal"," zam"," zap"," zar"," zas"," zast"," zat"," zaw"," zawod"," zb"," zd"," zde"," zdob"," zdoby"," ze"," zeigt"," zeit"," zelf"," zem"," zero"," zeros"," zes"," zespo"," zich"," zie"," zij"," zijn"," zip"," zm"," zn"," zna"," znaj"," znajdu"," zo"," zoals"," zog"," zona"," zone"," zones"," zoo"," zoom"," zou"," zp"," zu"," zug"," zum"," zur"," zus"," zusammen"," zv"," zvuky"," zw"," zwar"," zwe"," zwei"," zweite"," zweiten"," zwischen","a","aa","aaaa","aal","aar","ab","aba","abad","abama","aban","abase","abb","abc","abe","abei","abel","abeled","aben","abestanden","abet","abeth","abgerufen","abi","abil","abile","abilities","ability","abl","able","abled","ables","abling","ablo","ably","abol","abor","abord","about","above","abs","absolute","abstract","aby","ac","aca","acc","accept","access","acci","acco","account","ace","aceae","acent","aces","ach","ache","ached","achen","acher","aches","achi","achim","achine","aching","achiv","achment","achsen","acht","achusetts","aci","acia","acing","acion","acional","aciones","acions","acity","acja","acje","acji","ack","ackage","acker","acks","acle","acles","aco","acon","acre","acs","act","acter","acters","actic","action","actions","activ","active","activity","actly","actor","actory","actual","acu","acy","acyj","acz","ad","ada","adal","adamente","adapter","adas","adata","add","added","adding","addle","addr","address","addy","ade","aded","adel","adem","aden","ader","aders","ades","adesh","adi","adic","adin","ading","adj","admin","ado","adoop","ador","adora","adores","adors","ados","adow","adows","adr","adrat","adratkil","adratkilometer","adre","ads","adt","adu","adv","ady","ae","ael","aes","af","afen","aff","affen","afka","aft","after","ag","aga","agan","agar","agas","age","aged","agem","agement","agen","agens","agent","ager","agers","ages","aget","agg","agger","aggi","aggio","aggreg","agh","agi","agin","agine","aging","agini","agit","agle","agli","aglia","agn","agna","agne","agner","agnet","agnost","agnostic","agnostics","ago","agog","agon","agr","agram","agrant","agraph","ags","agt","agu","agua","ague","agues","agy","agyar","ah","aha","ahl","ahlen","ahn","aho","ahoo","ahr","ahren","ahu","ai","aient","aign","ail","ailable","ailand","aille","ails","aily","ain","aine","ained","ainer","aines","aining","ains","aint","air","aire","aires","airo","airs","ais","aison","ait","aj","aja","ajax","aje","ajes","ajn","ajo","aju","ak","aka","ake","aked","aken","aker","akers","akes","akespe","akh","aki","aking","ako","akov","aks","akt","akte","akter","aku","akult","al","ala","aland","album","ald","ale","aled","alem","alement","alen","aler","alert","ales","alet","alette","alf","alg","algebra","algorithm","ali","alia","alias","align","aligned","alin","aling","alion","alis","ality","alk","all","alla","allas","alle","alled","allel","allen","alleng","allenge","aller","allery","alles","alling","allo","alloc","allow","allowed","alls","ally","alm","alo","alog","alom","alone","alous","alph","alpha","als","alse","also","alt","alter","altern","alth","although","altra","altung","alty","alu","alus","always","aly","am","ama","aman","amar","amarin","amazon","amb","amba","ambda","ambigu","ambiguation","amd","ame","amed","amen","ament","amental","amente","amenti","amento","amentos","aments","amer","amerikan","amerikanischer","ames","ami","amiento","amil","amilton","amin","aming","aml","amm","amma","ammed","ammen","amment","ammer","amo","amos","amount","amour","amp","ampa","ampf","ampio","ampion","ample","amples","amps","ams","amsung","amt","amy","an","ana","anal","analy","analysis","anas","anc","ance","anced","ancement","ancer","ances","anch","anche","anchor","anci","ancia","ancing","ancouver","ancy","and","anda","andal","andas","andbox","ande","anden","andenburg","ander","andid","andis","ando","andom","andon","andr","andra","andro","android","ands","andy","ane","anel","aneous","anes","ang","anga","ange","anged","angel","angen","anger","angers","anges","anging","angle","angles","ango","angol","angs","angu","anguage","anguages","angular","anh","anha","ani","ania","anie","anim","animate","animation","aniu","anja","anje","ank","anka","anks","ann","anna","anne","anned","annel","annels","anner","annes","anni","anning","anno","annon","annot","annotation","annt","annte","annten","anny","ano","anon","anonymous","anos","another","ans","ansas","anse","ansen","ansion","ansk","anska","anson","anst","anstalt","answer","ant","anta","antage","antages","antal","ante","anted","anten","anter","anterie","antes","anth","anti","antic","antics","antin","antine","antly","anto","antom","anton","antry","ants","anu","anus","any","anya","anych","anz","anza","anze","anzen","ao","ap","apa","apache","apan","apat","ape","aped","aper","apers","apes","apest","aph","api","aping","apis","apk","apolis","apor","app","appa","appe","apped","appen","append","apper","apping","apple","application","apply","appro","approx","apps","appy","aps","apsed","apt","apter","apy","aqu","aque","ar","ara","arab","aram","aran","arante","arbe","arbeit","arc","arca","arch","archar","architecture","archiv","archive","archivi","archiviato","archy","arct","ard","arda","arde","arded","arden","ardi","ardin","arding","ardo","ardon","ards","are","area","ared","arel","aren","ares","aret","arf","arg","arga","argent","arget","argin","argo","args","argument","arguments","argv","ari","aria","arial","arian","arias","ariat","arie","aries","arily","arin","arina","aring","ario","arios","aris","arith","arium","arius","ark","arks","arlo","arm","arma","arn","arna","arning","aro","arod","aron","arono","around","arp","arqu","arr","array","arring","arrison","arrow","ars","arse","arsi","art","arta","arte","arten","arter","arters","arth","article","articles","artifact","arto","arts","aru","arus","ary","arz","as","asa","asant","asc","ase","ased","aser","ases","aset","ash","asha","ashed","ashi","ashington","ashion","asi","asia","asing","asion","asis","ask","aska","askell","asket","asketball","asm","asma","aso","ason","asons","asp","aspx","ass","assa","assador","asse","assembly","assen","asser","assert","asset","assets","assign","asso","assoc","associ","ast","asta","aste","asted","aster","astern","astic","asticsearch","asto","astr","astro","asts","asure","asures","asy","async","asz","aszt","at","ata","atabase","atable","atal","atalog","atan","atar","atch","ate","ated","ateful","ateg","ategor","ategories","ategory","ategy","ateien","atel","ately","atem","aten","ater","aterial","atern","aterra","aters","ates","ateur","ateurs","atever","atform","atge","ath","athan","athed","athedral","ather","atherine","athers","athol","atholic","athon","ati","atia","atial","atic","atica","atically","atie","atience","aties","atif","atile","atin","ating","atio","ation","ational","ationale","ationen","ations","atique","atiques","atis","atisf","ativ","ativa","ativas","ative","atively","atives","ativity","ativo","ativos","ato","atoes","atoire","atol","atom","atomic","aton","ator","atore","atori","atorial","atorio","ators","atory","atos","atr","atra","atre","atri","atrice","atro","ats","att","atta","attach","attan","atte","atted","atten","attend","atter","atti","attice","atting","attle","atto","attr","attribute","attributes","attro","attung","atu","atum","atur","atura","atural","aturday","ature","aturen","atures","aturing","atus","atuur","aty","atype","atz","au","auc","auch","aucoup","aud","audi","audio","auer","auf","auff","aug","augh","aught","ault","aum","aupt","aur","aus","ause","aused","auss","aussian","aut","auth","authentic","authentication","author","auto","autom","autor","autore","autre","autres","aux","av","ava","available","avait","aval","avam","avan","avano","avant","avas","avascript","ave","aved","avel","aven","aver","aves","avi","avia","avid","avier","avig","avigation","avigator","aving","avo","avoir","avor","avy","aw","awa","await","aware","away","awk","awn","aws","awt","ax","axi","axis","axy","ay","aya","aye","ayer","aylor","ayout","ays","az","aza","azar","aze","azi","azine","azionale","azione","azioni","azon","azu","azure","azy","azz","azzo","b","ba","baar","babel","bably","bach","back","backend","background","bad","bag","bage","bah","bahn","bal","ball","ban","band","bank","bar","bara","bare","bars","bas","base","based","bash","basic","bat","batch","bau","baum","baut","bay","baz","bb","bbe","bben","bbi","bc","bd","be","bean","beans","bec","because","beck","bed","beeld","before","beg","begin","bei","beit","bek","bel","bell","below","ben","ber","bere","bereich","berg","berga","berger","bern","bernate","bero","berry","bers","bert","berta","berto","berts","bes","besondere","best","bet","beta","between","bew","bey","bez","bf","bg","bi","bia","bian","bib","bibli","bibliothek","bid","bie","big","bigg","bij","bil","bild","bildung","bin","binary","bind","binding","bindung","bine","bing","binom","bio","bir","bird","bis","bishop","bit","bitr","bits","bject","bl","bla","black","blah","blank","blast","blatt","ble","bled","blem","bles","blic","blica","bling","blo","blob","block","blockquote","blog","blogs","blue","bm","bmatrix","bn","bo","boa","board","boards","body","bol","bold","boldmath","bolds","boldsymbol","bon","bone","book","books","bool","boolean","boost","boot","bootstrap","bor","border","borg","born","borough","bos","bose","bot","both","bottom","bound","bounded","bounds","bour","bourg","bourne","bove","bow","box","boy","bp","br","bra","brace","brains","braio","branch","brand","braries","brary","bras","bre","break","bres","brid","bridge","brie","brit","bro","brow","browser","bru","bs","bst","bt","btn","bu","buch","bucket","bud","buf","buff","buffer","bug","build","builder","building","built","bul","bullet","bum","bund","bundle","buntu","bur","burg","burger","burgh","burgo","burn","bury","bus","but","button","by","bye","byte","bytes","c","ca","cache","cade","cadem","cademy","cal","cala","calc","calcul","calendar","call","callback","called","cam","camera","camp","can","cancel","cano","canvas","cap","cape","capt","caption","car","card","cards","care","cart","cas","case","cases","cast","castle","cat","catal","catalina","catalog","catch","categories","category","cation","caught","cb","cc","cca","ccc","ccess","ccion","cciones","cco","cd","cdn","cdnjs","cdot","cdots","ce","ceae","cean","ced","cedes","cedure","ceed","cego","ceil","cej","cel","cell","cellation","cem","cement","cen","cent","cente","center","centering","central","century","cep","cept","ception","ceptor","cer","cera","cers","cert","certain","ces","cess","ceu","cf","cfg","cgi","ch","cha","chain","chan","change","changed","changes","channel","chant","chapter","char","character","charg","charge","chart","charts","chas","chat","che","check","checkbox","checked","ched","chem","chen","cher","ches","chester","chestra","chev","chez","chi","chia","child","children","chin","chio","chk","chmark","chn","chni","cho","chod","choice","choose","chor","chos","chr","chrom","chrome","chron","chs","chsel","cht","chte","chten","chter","chts","chunk","chus","chy","ci","cia","cial","ciale","cially","cian","cias","cible","cid","cida","cide","cido","cie","cience","ciendo","cient","ciente","cier","cies","cii","cija","cije","cil","cile","cin","cing","cio","cion","ciones","cios","cious","cip","cipe","cipl","cir","circ","circle","cis","cit","cita","cite","citep","citet","cito","city","ciu","cius","cji","ck","cke","cken","cker","cket","ckets","cki","cknow","cko","cks","cl","cla","clam","clar","class","classes","cle","clean","clear","cler","cles","cli","clic","click","client","cling","clip","clipse","clk","clo","clock","clojure","clone","clos","close","closed","closure","clou","cloud","cloudflare","cls","club","clud","clude","cluded","cludes","cluding","clus","clusion","cluster","cm","cmd","cmp","cn","cnt","co","cock","cod","code","coded","codes","col","cola","cole","coli","coll","collapse","collect","collection","collections","coln","colo","colog","colon","color","colors","cols","column","columns","com","comb","come","comes","coming","comm","command","commands","comment","comments","commerce","commit","common","commons","communic","community","como","comot","comp","company","compare","compat","compatible","compile","compiler","comple","complete","complex","component","components","compos","compose","comput","compute","con","concat","concurrent","cond","conda","conde","condition","conf","config","configuration","configure","confirm","cong","conn","conne","connect","connected","connection","cono","conom","cons","consin","console","const","constant","constraint","construct","constructor","consum","cont","contact","container","contains","content","contents","context","continu","continue","contr","contra","contre","contrib","control","controller","controls","conv","convert","cook","cookie","coordinate","cop","cope","copy","cor","cord","core","corr","correct","cos","cost","cot","cou","could","count","counter","country","course","court","cout","cov","cover","cow","cowo","cp","cpp","cpu","cpy","cr","cra","craft","cre","create","created","cred","creen","creens","cref","crement","cret","crete","cri","cribe","cribed","cript","cription","criptor","crit","criv","cro","cross","cs","csol","css","csv","ct","cted","ctic","ction","ctions","ctl","ctor","ctors","ctr","ctrine","ctrl","ctu","ctx","cu","cuador","cue","cul","cular","cules","culo","cup","cur","curity","curl","curr","currency","current","cursor","cus","cuss","cussion","custom","customer","cut","cv","cx","cy","cyc","cych","cycle","cyk","cz","cza","czas","cze","czy","d","da","dade","dag","dagger","dal","dale","dam","dan","dar","dark","dart","das","dash","dat","data","datab","database","datas","dataset","date","dated","datei","daten","dates","datetime","dating","dawn","day","days","db","dbc","dbo","dc","dd","de","deb","debug","dec","deck","decl","decode","decor","ded","deep","def","default","defin","define","defined","definition","defn","deg","dek","del","delay","delegate","delete","delta","dem","demic","demo","den","dens","dent","dep","dependencies","dependency","dependent","deploy","depth","der","dern","derr","ders","des","desc","description","design","desktop","dess","dest","destination","destroy","det","detail","details","deutsch","dev","develop","developer","developers","development","device","dex","df","dflare","dfrac","dfs","dg","dh","di","dia","dialog","dic","dict","diction","dictionary","did","die","dienst","diff","dig","digit","dim","dimen","dimensional","din","ding","dir","dire","direct","direction","directory","dirname","dis","disable","disabled","disambiguation","discussion","disk","dispatch","display","displaystyle","dist","distance","distribution","dit","div","dj","django","dk","dl","dll","dm","dn","do","dob","doc","docker","docs","document","documentation","documentclass","does","dog","dom","domain","domin","don","done","door","dor","dorf","dot","dotnet","dots","double","down","download","dp","dr","dra","drag","draw","drawable","dri","drive","driver","dro","drop","dropdown","dru","ds","dst","dt","du","ducation","duct","due","duino","dump","dup","duration","dw","dx","dy","dynamic","dz","dzie","e","ea","each","ead","ear","earance","earch","eared","ears","east","eau","eb","ebb","eben","ebol","ebook","ebru","ec","eca","ecause","ech","echo","eclipse","ect","ected","ection","ector","ectors","ecycle","ecz","ed","eda","edad","ede","eded","eden","eder","ederb","edes","edeut","edge","edi","edia","edic","eding","edish","edit","editor","edly","edo","edom","edor","eds","edu","edule","eduled","eduler","edy","ee","eed","een","eerd","ees","ef","efe","eff","effect","efficient","efined","eft","eg","ega","ege","egeben","egen","eggi","egin","egn","ego","egos","egov","egr","eground","egu","egung","egy","egyzetek","eh","ei","eign","eil","ein","eing","ej","ek","eken","eks","el","ela","eland","eld","elde","ele","elect","elem","element","elements","elen","elenium","eler","eles","eless","elf","eli","elia","elian","elif","elihood","elij","elijk","elijke","elin","eline","elines","eling","elivery","ell","ella","ellan","elle","elled","ellen","eller","ellers","elles","ellett","elli","ellig","elligence","ellij","elling","ellite","ello","ellow","ells","ellschaft","ellt","elly","elm","eln","elo","elor","els","else","elsen","elsk","elt","elta","elte","eltemperaturen","elter","elve","ely","em","ema","email","eman","emann","emark","emas","emat","ematic","emb","embed","ember","emberg","embers","embl","emble","embly","embre","embro","embros","eme","emed","emein","emeinde","emen","ement","emente","emento","ements","emer","emes","emet","emetery","emi","emia","emit","emo","emon","emor","emos","emp","emph","empio","empl","emplo","employee","empor","empre","empt","empty","emptyset","ems","emu","emy","en","ena","enable","enabled","ename","enant","enario","enas","enberg","enburg","enc","ence","enced","encer","ences","enci","encia","encias","encies","encing","encode","encoded","encoding","ency","end","enda","endance","endant","endar","ende","ended","enden","endencia","endencies","endency","endent","ender","enders","endes","endet","endi","endif","ending","endl","endo","endor","endorf","endpoint","endra","endre","ends","endum","ene","ened","enen","ener","energy","enes","eness","enez","enf","eng","engelsk","engen","enger","engers","engine","engl","englisch","engo","engono","ength","engu","eni","enia","enie","enig","ening","enis","enium","enix","enk","enkins","enn","enne","ennen","ennes","ennessee","ennis","eno","ens","ensa","ensch","enschaft","enschapp","ense","ensed","ensemble","ensen","enser","enses","ension","ensional","ensions","ensis","ensive","ensk","enska","enso","enson","ensoort","ensor","enst","ensure","ensuremath","ensus","ent","enta","ental","entation","ente","ented","enten","enter","entes","enth","enti","ential","entially","entials","entic","entication","entin","ention","entity","entlich","entlicht","ently","ento","entr","entre","entries","entry","ents","enty","enu","enum","enumerate","env","environ","environment","eny","enz","enza","enze","eor","ep","epen","ependant","eper","eping","eps","epsilon","eq","eqn","eqnarray","eqref","equ","equal","equality","equals","equation","equiv","er","era","erade","eral","eras","erb","erc","erca","erd","erde","erdings","ere","erea","ered","eree","erei","erek","erem","eren","erer","eres","erg","eri","eria","erie","eries","ering","erk","erm","erman","ermann","erme","ermeister","ermo","ern","erna","ernal","ername","erne","ernel","erner","erni","erno","ero","eros","err","error","errors","ers","ersch","erset","ershell","ership","ersion","erson","erst","ert","erta","ertain","erte","erten","erton","erv","erva","ervation","erve","erved","erves","erving","ery","es","esa","esar","esc","escape","esch","ese","esehen","esen","esent","eses","esh","esi","esia","esian","esis","esk","eso","esome","esota","esp","esper","ess","essa","essage","esse","essed","essel","essen","esser","esses","esseur","ession","essional","essions","esso","essor","est","esta","estamp","estanden","estaur","este","ested","estellt","esten","ester","esterd","esterday","esters","esti","estic","estig","estion","estions","estival","esto","eston","estone","estore","estr","estra","estre","estro","ests","esty","esz","eszt","et","eta","etailed","etal","etc","etch","ete","eten","eteor","eter","eters","etes","eth","ethe","ether","ething","ethod","eti","etic","eties","etime","eting","eto","eton","etr","etra","etro","etry","ets","ett","etta","ettbe","ette","etten","etter","ettes","etti","ettings","etto","etu","etwork","ety","etz","etzt","etzung","eu","eur","eurs","eus","euw","ev","eval","evalu","even","event","events","ever","every","ew","ewrite","ex","example","examples","excel","except","exception","exchange","exe","exec","execute","execution","exist","exists","exit","exp","expand","expect","expected","expl","export","exports","expr","express","expression","ext","extend","extension","extensions","external","extra","extract","ey","ez","f","fa","fab","fac","face","facebook","faces","fach","fact","factor","factory","fade","fah","fahr","fahren","fahrt","fail","failed","fal","fall","falls","false","famil","family","fan","fang","far","fare","fas","fass","fasst","fast","father","fatt","fault","fb","fc","fd","fe","feature","features","fect","fection","feed","fel","feld","fen","fer","ference","ferences","fern","ferred","ferrer","fers","fert","fest","fetch","ff","ffe","ffect","ffen","fff","ffff","ffic","fficial","fficiale","fficient","fg","fi","fic","fica","fico","ficos","fiddle","field","fields","fif","fig","figure","fik","fil","file","filename","files","fill","filled","film","filter","filters","fin","final","find","finite","fir","fire","firebase","first","fish","fit","five","fix","fixed","fl","flag","flags","flash","flat","flex","fli","float","floor","flow","flu","flug","flush","fluss","flutter","fly","fm","fmt","fn","fo","focus","fog","fois","fol","fold","folder","folg","folge","folio","folk","follow","fon","font","fonts","fony","foo","foot","football","footer","footnote","for","forall","force","ford","fore","foreach","forge","form","formance","format","formation","formed","former","forms","forsch","fort","fortun","fortunately","forum","forward","found","four","fox","fp","fr","fra","frac","fragment","frak","fram","frame","frames","framework","fran","frastr","fre","fred","free","frent","fri","frica","fried","friend","frika","frique","from","front","fs","ft","fte","ften","fter","ftp","ftrag","ftware","fty","fu","ful","full","fully","fun","func","function","functions","fund","fur","furt","fw","fx","g","ga","gabe","gaben","gable","gal","game","gamma","gan","gang","gar","gart","gas","gat","gate","gb","gc","gcc","ge","geb","gebaut","geben","geber","gebiet","gebra","gebracht","gebras","ged","gef","geg","gegeben","geh","gel","gele","gem","geme","gemein","gemeinde","gems","gen","gence","gency","gende","gender","gener","general","generate","generated","generator","generic","genommen","gens","gent","geo","geometry","geon","geordnet","geq","ger","gericht","germeister","gers","gerufen","ges","gesamt","gesch","geschichte","gesellschaft","gest","gestellt","get","gets","getting","gew","gex","gg","ggi","ggreg","gh","ghan","gi","gia","gie","gif","gin","ging","ginx","gio","gior","giore","git","github","giv","gl","glass","gle","gleich","glise","glob","global","gly","gmail","gment","gn","gnu","go","goal","god","going","gom","gon","good","google","googleapis","gor","got","goto","gov","gow","gr","gra","grad","grade","gradient","gradle","gram","grand","graph","graphics","gravity","gray","gre","green","greg","gren","grep","gres","gresql","gress","gression","grid","gro","ground","group","groupby","groups","gru","grund","gruppe","gry","gs","gt","gu","guard","gue","guer","guez","gui","guide","gun","gy","gypt","gz","h","ha","hab","had","hadoop","haft","hagen","hai","hal","halb","half","hall","halt","halten","ham","han","hanced","hand","handle","handler","hang","hape","haps","har","hard","hardt","harm","hart","has","hash","hat","haupt","haus","hausen","hav","have","havior","hbar","hbox","hd","he","head","header","headers","heart","heast","heb","heck","hed","heel","heet","heid","height","heim","heimer","hein","heit","heiten","heits","hel","hell","hello","helm","help","helper","hely","hem","hen","hens","her","here","herit","herr","hes","het","heten","heure","hew","hex","hez","hh","hi","hib","hibernate","hidden","hide","high","highlight","hill","him","hin","hind","hing","hip","hips","hire","his","histoire","histor","history","hit","hl","hlen","hline","hm","hmen","hn","hnen","hner","ho","hod","hof","hoff","hol","hold","holder","holds","hole","holm","hom","home","homme","hon","honneur","hood","hook","hor","hora","horizontal","horn","hos","host","hostname","hosts","hot","hou","hour","house","hov","hover","how","hoz","hp","hpp","hr","hre","href","hren","hrer","hrte","hs","hspace","ht","htaccess","htm","html","htt","http","https","hu","hui","hum","human","hung","hus","hw","hy","hyper","i","ia","iac","iada","iae","iah","iai","iak","ial","iale","iali","ialize","ialog","iam","iami","iams","ian","iana","iance","iane","iani","iano","ians","iante","iao","iar","iare","ias","iast","iat","iate","iation","ib","iba","ibe","iben","iber","ibil","ibile","ibility","ible","ibles","ibli","ibly","ibm","ibr","ibrary","ibration","ibt","ibus","ic","ica","icago","ical","icale","ically","icamente","ican","icana","icane","icano","icans","icas","icate","icator","ice","iced","ices","ich","icha","iche","ichen","icher","ichi","icht","ichte","ichten","ichter","ichtet","ichts","ichtung","ici","icia","icial","ician","icians","icile","icina","icing","icio","icion","icional","iciones","icios","icious","icip","icity","ick","icked","icken","icker","icket","icki","icks","icky","icle","icles","iclopedia","ico","icode","icol","icola","icole","icon","icons","icos","icro","icrosoft","ics","ict","icted","iction","ictionary","icture","ictures","ictwo","icul","icular","icult","icum","icus","icut","icy","icz","iczn","id","ida","idad","idade","idades","idae","idal","idan","idas","iday","idd","idden","iddle","ide","idea","ided","idel","iden","idence","idenote","idense","ident","idente","identifier","identity","idents","ideo","ideos","ider","iders","ides","idge","idget","idi","idia","iding","ido","idor","idos","ids","idth","idx","ie","ieb","ieben","iec","iech","ieck","ied","iedenis","ieder","iedz","ief","ieg","iegel","iego","iei","iej","iek","iel","ield","iele","iella","ielle","iellement","iels","ielt","iem","iemann","iembre","ien","ience","iencia","iency","iende","iendo","iene","ienen","ienia","ienie","ienn","ienne","iennent","iennes","iens","ienst","ient","iente","ientes","iento","ientos","ientras","ients","ienza","ier","iera","iere","ieren","ieri","ierno","iero","ieron","ierra","ierre","iers","iert","ierte","ierten","ierto","ierung","ierungs","ierz","ies","iesa","iese","iesen","iest","iesz","iet","ietnam","iety","ieu","ieur","ieurs","ieux","iev","ieval","ieve","ieved","ieves","ieving","iew","iewer","iez","if","ifa","ifact","ife","ifecycle","ifen","ifer","ifest","iff","iffe","iffer","ifference","ifferent","iffs","ifi","ifiable","ific","ifica","ificate","ification","ifications","ifice","ifie","ified","ifier","ifiers","ifies","ifik","ifique","ifiz","ifolia","iform","iformes","iforn","iframe","ifs","ift","ifting","ifts","iftung","iful","ify","ifying","ig","iga","igan","igare","ige","igen","igent","iger","iges","igg","igger","igh","ighed","ight","ightarrow","ighter","ighth","ights","igi","igin","iginal","igkeit","igkeiten","igli","iglia","igma","ign","ignation","igne","igned","igner","ignes","igneur","ignment","ignon","ignore","igny","igo","igos","igr","igration","igs","igt","igte","igten","igu","igua","igue","igung","ih","ihe","ii","iii","ij","ija","ijd","ije","iji","ijk","ijn","ijo","ijst","iju","ik","ika","ikai","ikal","ikan","ike","ikel","iken","iker","ikes","ikh","iki","ikk","iko","ikon","ikor","iks","ikt","iku","ikus","ikz","il","ila","ilar","ilation","ild","ilda","ilde","ilder","ile","iled","ilen","iler","ilers","iles","iley","ili","ilia","ilian","ilib","iling","ilio","ilis","ilities","ility","ill","illa","illas","illaume","ille","illed","iller","illery","illes","illet","illeurs","illi","illiant","illing","illo","illon","ills","illy","ilo","ilog","ilon","ilor","ils","ilst","ilt","ilty","ilus","ily","im","ima","image","images","imal","iman","imar","imas","imat","imate","imately","imation","imb","ime","imedia","imen","iment","imenti","imento","iments","imer","imes","imet","imeter","img","imgur","imi","imiento","imientos","imin","imir","imit","imiter","imm","immer","imming","imo","imoine","imon","imore","imos","imp","imper","impl","implementation","implies","import","important","ims","imum","in","ina","inae","inaire","inal","inale","inals","inand","inar","inary","inas","inate","ination","inburgh","inc","ince","inch","inci","incie","incipal","includ","include","includegraphics","includes","including","increment","inct","inction","ind","inda","inde","inden","indent","inder","index","indi","inding","indo","indow","indows","indre","inds","indu","indust","ine","inea","ined","inek","inen","inent","inental","iner","ines","inese","iness","inet","inf","infl","inflate","info","information","infty","ing","inge","ingen","inger","ingers","ingham","ingly","ingo","ings","ingt","ington","ingu","inha","inho","ini","ining","init","initely","initial","initialize","inition","inity","inject","ink","inkel","inking","inks","inline","inn","inned","innen","inner","inners","ino","inois","inos","input","ins","insen","insert","insic","inside","inson","inst","install","installed","instance","int","inta","inte","integer","integr","integration","intellij","intendo","intent","inter","interface","intern","internal","interno","interval","inth","into","inton","intrag","intro","ints","inture","inu","inue","inus","inv","invalid","invoke","inx","iny","io","iod","iom","ion","iona","ional","ionale","ionales","ionali","ionario","ione","ioned","ionen","iones","ioni","ionic","iono","ions","iony","iop","ior","iore","iors","ios","ioso","iostream","iot","iour","ious","iously","ip","ipage","ipart","ipe","ipedia","ipeline","ipes","ipo","ipp","ipped","ippi","ipping","ips","ipt","iqu","ique","iques","ir","ira","irable","iral","iras","irat","iration","irc","irche","ircraft","ird","ire","irect","irection","irectory","ired","irement","ires","iri","irie","iring","irit","irk","irks","irl","irls","irm","irmingham","iro","iros","irs","irse","irst","irt","irth","irtschaft","irtual","irty","irus","iry","is","isa","isan","isat","isation","isc","isce","isch","ische","ischen","ischer","isches","ischof","ise","isecond","iseconds","ised","isen","iser","ises","isf","ish","ished","isher","ishes","ishi","ishing","ishment","ishop","isi","isie","ising","ision","isions","isis","isk","iska","iske","isko","iskt","isl","ism","isme","ismiss","ismo","isms","ismus","iso","ison","isons","isp","ispecies","ispiel","iss","issa","issance","issant","isse","issement","issen","issenschaft","issent","isser","isses","isset","isseur","ission","issions","isson","issue","issues","ist","ista","istan","istance","istant","istas","iste","isted","istema","isten","istence","istent","ister","istes","isti","istic","istica","istiche","istics","istik","isting","istique","istiques","istische","istischen","isto","istoire","istol","istor","istory","istr","istra","istration","istre","istrict","istro","istry","istrz","istrzost","ists","isu","isy","isz","iszt","it","ita","itable","itage","itaine","itaire","ital","itan","itants","itar","itare","itas","itat","itate","itatea","itated","itation","itations","itative","itats","itch","itchen","ite","itect","itecture","ited","iteit","itel","item","itement","itemize","items","iten","iter","iterator","ites","itet","ith","ither","ithmet","ithmetic","ithub","iti","itie","ities","itime","iting","ition","itional","itionally","itions","itis","itive","itivity","itle","itled","itmap","ito","itor","itore","itori","itories","itors","itory","itos","its","itsch","itt","itte","itted","ittee","ittel","itten","itter","ittest","itting","ittle","itto","itu","itud","itude","itudes","itul","itung","iture","itut","itute","itution","ituto","ity","itz","itza","itzen","itzer","itzerland","iu","ium","iums","ius","iv","iva","ival","ivalent","ivamente","ivan","ivari","ivas","ivatal","ive","iveau","ived","ivel","ively","ivement","iven","iveness","ivent","iver","ivers","iverse","iversity","ives","ivi","ivid","ividual","ivil","iving","ivity","ivo","ivos","ivot","iw","iwers","ix","ixa","ixed","ixel","ixen","ixon","iy","iz","iza","izable","izada","izado","izar","izard","ization","izations","ize","ized","izen","izer","izers","izes","izi","izia","izin","izing","izio","izione","izioni","izo","izon","izont","izontal","izz","izza","izzata","izzato","izzazione","j","ja","jack","jahr","jak","jal","jamin","jan","jango","jar","jas","jav","java","javascript","javase","javax","jax","jb","jboss","jd","jdbc","jdk","je","ject","jection","jections","jective","jed","jekt","jekte","jel","jem","jen","jer","jes","jest","jet","jets","jev","ji","jih","jin","jk","jl","jm","jna","jo","job","join","joint","jon","jor","jos","jou","jourd","jours","jp","jpeg","jpg","jq","jquery","js","jsfiddle","json","jsp","jt","ju","jub","jud","junit","jure","jus","just","k","ka","kadem","kaf","kafka","kal","kan","kap","kappa","kar","kaz","kazy","kb","kbd","kc","ke","ked","kee","keep","keeper","kehr","keit","keiten","kel","kele","keley","kem","ken","kende","kens","ker","kern","kernel","kes","ket","key","keys","keyword","kg","kh","ki","kie","kiej","kiem","kih","kil","kill","kim","kin","kind","king","kins","kir","kirche","kit","kk","kl","km","kmal","kn","know","known","ko","kol","kom","kommen","kon","kop","kor","kord","kotlin","kou","kov","kow","koz","kr","kre","kreich","kreis","kret","krie","ks","ksam","kt","kte","kten","kter","ktet","ktion","ktionen","ktiv","ktop","ktor","ktr","ktur","ku","kund","kunft","kup","kur","kv","kw","kwargs","ky","l","la","lab","label","labels","lac","lace","lacement","laces","lach","lacht","lack","lad","lade","lag","lage","lagen","lah","lahoma","laim","laimed","lain","lais","lait","lak","lam","lambda","lament","lan","land","landa","lande","lando","lands","lane","lang","langle","language","lant","lap","laps","lapse","lapsed","lar","laration","laravel","lare","larg","large","las","lass","lasse","lassen","last","lat","late","latest","latex","lation","lau","lauf","launch","laus","lav","lava","lave","law","lax","lay","layer","layers","layout","laz","lb","lbl","ld","lder","ldots","le","lea","leading","leaf","lean","leans","lear","learn","learning","lease","leased","leases","leb","leben","lecht","lect","lection","lections","led","ledge","lee","leep","lef","left","leg","legal","legate","lege","legen","legend","legraph","legt","legte","lei","leich","leid","lein","leitung","lej","lek","lem","lemagne","lement","lemma","len","length","leq","leqslant","ler","lera","lers","les","lesh","lesia","less","lessly","let","lete","leted","letin","leton","lets","lett","lette","letter","leur","lev","levant","level","leveland","lex","ley","lez","lg","li","lia","liament","liance","lias","lib","library","libs","lic","lica","licate","licated","licates","lication","lications","lice","lices","lich","liche","lichen","licher","liches","lichkeit","licht","licit","licity","lick","lict","lide","lie","lied","lieder","lient","lier","liers","lies","liest","life","lig","liga","lige","ligen","light","ligt","lij","lijk","lijke","lik","lika","like","likely","lim","limat","lime","limit","limited","limits","limp","lin","line","linear","lined","lines","linewidth","ling","lingen","lings","link","links","lint","linux","lio","lip","lipse","liqu","lique","lire","lis","lish","lished","list","lista","listen","listener","lists","lit","liter","lius","liv","live","liver","lj","ljen","ll","lla","lle","lles","lm","ln","lo","load","loaded","loader","loading","loads","loat","lob","lobal","loc","local","locale","localhost","located","location","lock","locked","log","logger","logging","logic","login","logo","logs","lon","long","longrightarrow","look","looking","lookup","loop","loor","lop","loped","lopedia","lor","los","lose","loss","lossen","lost","loster","lot","lou","lov","low","lower","loy","loyd","loyee","loyment","lp","lr","ls","lst","lt","ltal","ltre","lu","lua","lub","lung","lungen","lus","luss","lv","ly","lying","lymp","lyn","lyph","lywood","m","ma","mac","machine","macht","macro","mad","made","mag","mai","mail","main","major","make","maker","making","mal","male","malloc","mals","man","mana","managed","management","manager","mande","mania","manifest","mann","mannschaft","mans","manual","manuel","many","map","mapping","maps","mapsto","mar","margin","marine","mark","marker","market","marks","markt","mart","mary","mas","mask","mass","maste","master","mat","match","matches","mate","material","math","mathbb","mathbf","mathcal","mathchar","mathfrak","mathop","mathrm","mathscr","mathsf","matically","matrix","maven","max","maxim","may","maybe","maz","mb","mbox","mc","md","me","mean","measure","meck","med","medi","media","mediate","medium","mee","meister","meisterschaft","mel","mem","member","members","memory","men","meno","mense","ment","mente","ments","menu","mer","merce","merge","merk","mers","mes","mess","message","messages","met","meta","metadata","meter","method","methods","metric","metro","metros","mez","mi","mic","microsoft","mid","middle","midt","mier","migr","mil","mile","mill","min","mina","mind","mine","ming","minipage","minister","minus","mir","mis","miss","missing","mission","mit","mitt","mittel","mix","mk","ml","mlung","mm","mn","mo","mobile","mock","mod","modal","mode","model","models","modifier","module","modules","mon","mond","mongodb","mont","month","mor","more","morrow","mort","mos","most","mot","mount","mouse","mouth","mov","move","movie","moz","mozilla","mp","mpeg","mq","ms","msdn","msg","mt","mu","mul","mult","multi","multicol","multicolumn","multip","multiple","multirow","mun","mund","mus","museum","music","must","mut","mutable","mv","mvc","mx","my","mys","mysq","mysql","mysqli","n","na","nab","nabla","nach","nad","nah","nahm","nahme","nahmen","naio","naire","nak","nake","nal","nam","name","named","names","namespace","nan","nant","nap","napshot","nar","nas","nat","native","nats","natural","nav","navbar","navigation","nb","nbsp","nc","nd","nde","nder","ne","nea","near","necess","nect","nection","ned","need","neg","negative","nego","neh","nehm","nehmen","nehmer","nej","nek","nel","nell","nelle","nem","nement","nen","neo","neq","ner","nero","ners","nes","ness","nest","nested","net","nete","nett","network","neum","neur","neut","new","newcommand","news","nex","next","ney","nez","ng","nginx","ni","nia","nic","nica","nice","nick","nico","nie","niej","niejs","nier","nig","night","nih","nik","nika","nil","nim","ning","ningar","ningen","ninger","nings","nio","nis","nisse","nit","nitt","nitz","niu","nius","nja","nl","nm","nn","no","noc","node","nodes","nof","nofollow","nog","noindent","nom","nome","non","none","nonumber","nor","noreferrer","norm","normal","nos","nost","nosti","not","notation","note","notes","nothing","notification","notify","notin","nou","nov","now","nown","np","npm","nr","ns","nsylvan","nt","nten","nth","ntil","nu","null","num","number","numbers","numer","numerable","numeric","numpy","nung","nungen","nut","nx","ny","nych","nym","o","oa","oauth","ob","oba","obar","obb","obe","oben","ober","obi","obierno","obil","obile","obj","object","objects","obox","obre","obs","observ","oby","oc","oca","ocal","ocation","occ","occer","occup","occupation","oce","och","ochastic","oci","ocia","ocity","ock","ocker","ocket","ockey","oco","ocoa","ocr","ocracy","ocrat","ocs","oct","ocument","ocus","ocy","ocz","od","oda","odb","odd","ode","oded","odel","oden","oder","odes","odge","odi","odia","oding","odio","odn","odo","odon","odor","odore","odos","odot","odox","ods","odu","ody","oe","oem","oemd","of","off","office","offs","offset","og","oga","oge","ogen","ogene","ogeneous","ogether","oggle","ogle","ogli","ogn","ogne","ogo","ogonal","ograf","ografi","ografia","ografie","ogram","ograph","ographic","ographical","ographie","ographique","ography","ogs","ogy","oh","ohen","ohl","ohn","oi","oid","oin","oint","oir","oire","oires","ois","oit","oj","ok","oka","okal","okat","oke","oked","oken","oker","okes","oki","oking","oko","okrat","oks","oku","ol","ola","olan","olar","olare","olas","olate","olation","old","older","olds","ole","olean","olen","oles","olf","olg","oli","olia","olid","olin","oline","olis","olit","olk","oll","ollar","ollary","ollow","olly","olo","olog","ologe","ologia","ological","ologie","ologies","ologique","ologische","ologist","ologne","ology","olph","ols","olt","olta","oltre","olu","oly","om","oma","oman","omas","omb","ombres","ome","omed","omega","omen","omena","oment","omer","omet","ometer","omething","ometimes","ometric","ometry","omi","omial","omic","omin","oming","omini","omm","ommen","ommes","ommun","omo","omon","omorph","omorphic","omorphism","omp","oms","omsnitt","omy","on","ona","onal","onas","onato","onaut","onc","once","onces","ond","onda","onde","onden","onder","ondere","onders","ondissement","ondo","onds","one","oned","onel","onen","ones","oney","ong","ongo","ongodb","ongs","oni","onia","onial","onian","onic","onica","onie","oning","onio","onk","online","only","onn","onna","onne","onnen","onnes","onneur","ono","onom","onomie","onomy","ons","onsieur","onso","ont","onte","onto","ony","onym","onyme","onymes","onymous","oo","ood","ook","ool","ools","oom","oon","oop","oor","oot","ooth","op","opacity","ope","oped","open","opens","oper","opera","operation","operator","operatorname","opf","oph","ophe","opher","ople","oplus","opo","opol","oport","opp","opro","ops","opsis","opt","opter","optera","optim","option","optional","options","opts","opus","opy","or","ora","oracle","orage","oral","oration","orb","orch","ord","orde","orden","order","ordered","orders","ordin","ordinary","ordinate","ordinates","ording","ordnet","ordnung","ordo","ordon","ordre","ords","ore","ored","oreferrer","oreign","orem","oren","orer","ores","oret","orf","org","organ","organisation","orge","orgen","ori","oria","orial","orie","orient","orientation","ories","orig","origin","original","origine","oring","orio","orious","oris","orith","orithm","orithms","ork","orld","orm","ormal","orn","ornal","orney","orno","oro","orous","orp","orph","orphism","orr","orrow","orry","ors","orsz","ort","orte","orted","orten","orter","orth","ortheast","orton","oru","orum","orus","ory","os","osa","osas","osc","osci","ose","osed","osen","oser","oses","osex","osh","oshi","osi","osing","osis","osition","oslav","oslov","oso","osof","osoph","osos","osp","ospel","osph","ospital","ospod","oss","ossa","ossen","ost","osta","osten","oster","osti","osto","oston","ostream","osz","ot","ota","otal","ote","oteca","oted","oten","oter","otes","oth","othe","othek","other","othing","othy","oti","otic","otimes","oting","otion","otlin","oto","otos","otr","otrop","ots","ott","otta","otte","otted","otti","otto","ottom","oty","ou","ouble","ouc","ouch","oud","ouest","oug","ough","ought","oul","ould","oun","ounce","ounced","ound","ounded","ounding","ounds","ount","ounter","ountry","oup","oupe","oups","our","ource","ources","ourd","oure","oured","ourg","ouri","ourn","ournal","ours","ourse","ourses","ourt","ous","ouse","oused","ousel","ouses","ousin","ously","ouss","oust","out","oute","outer","outh","output","outs","outube","ouv","ouve","ouvel","ouvelle","ouvelles","ouver","ouvern","ouverneur","ouvert","ouw","ouwd","ouwen","oux","ov","ova","oval","ovan","ovat","ove","oved","oven","over","overflow","overline","overn","override","overy","ovi","ovie","oving","ovis","ovo","ovy","ow","owa","owan","owana","owane","owania","owanie","owano","owany","owe","owed","owego","owej","owel","ower","owi","owie","own","owned","owner","ownik","owo","ows","owski","owy","owych","owym","ox","oy","oz","p","pa","pace","paces","pack","package","packages","pad","padding","pag","page","pages","pair","pal","pan","pandas","panel","paper","par","para","paragraph","parallel","param","parameter","parameters","params","parator","parent","parison","park","parse","parser","part","partial","partition","partment","parts","party","pas","pass","password","paste","pat","patch","path","paths","pattern","pay","payload","payment","pb","pc","pd","pdf","pe","peat","pec","pecially","pecies","pect","pected","pection","pective","ped","pel","pen","penas","pend","pent","people","per","perate","percent","perform","periment","perimental","period","perl","perm","permission","peror","perp","pers","persistence","person","pert","perties","perty","pes","pet","pez","pf","pg","pgf","ph","pha","phabet","phal","phan","phantom","phas","phase","phe","phen","pher","phere","phi","phia","phon","phone","phony","photo","php","phr","phy","phys","physics","pi","pic","pick","picker","picture","pid","pie","piel","pieler","pin","pine","ping","pio","pios","pip","pipe","pis","pisode","pit","pk","pkg","pl","pla","place","placeholder","plain","plan","plane","plant","plate","plates","platform","platz","play","player","plays","ple","plement","plementation","plements","pler","ples","plex","pling","plit","plom","plorer","plot","plotlib","plots","plugin","plugins","plus","ply","pm","pmatrix","pmod","pn","png","po","pod","point","pointer","points","pois","pol","pole","policy","polit","poly","pom","pon","pond","ponder","ponent","ponents","ponse","pont","pool","pop","poque","por","port","portal","porte","porter","ports","pos","posa","pose","posed","poses","position","pository","poss","possible","post","posta","postgresql","posts","pot","pow","power","pp","ppa","ppe","pped","ppel","ppen","pper","ppers","ppet","ppets","ppi","pping","ppings","pply","ppo","pport","ppy","pr","pragma","pre","prec","pred","predict","prefix","preis","prep","prepare","pres","presa","present","presentation","press","pressed","pression","pret","prev","prevent","preview","previous","price","pril","prilis","prim","primary","prime","pring","print","printf","println","prise","prit","priv","private","pro","prob","problem","proc","process","processing","processor","prod","produ","product","production","products","prof","profile","prog","program","programming","progress","proj","project","projects","prom","proof","prop","properties","property","props","prote","protected","proto","protocol","prototype","prov","provider","prowad","proxy","ps","pse","pshire","psi","psilon","pson","psum","pt","pta","ptember","ptic","ption","ptions","pto","pton","ptop","ptr","pts","pty","pu","pub","public","publique","publish","puesta","puis","pull","punkt","pur","pus","push","put","putation","px","py","python","q","qa","qi","ql","qq","qquad","qt","qu","qua","quad","qual","quality","quant","quantity","quare","quarters","que","quel","quelle","quence","quency","quent","quer","query","ques","quest","questa","question","questions","quet","queue","quez","qui","quia","quick","quier","quin","quip","quipe","quire","quired","quis","quisition","quit","quot","quote","r","ra","rab","rable","rac","race","rach","rache","racht","rack","racle","ract","raction","ractor","racy","rad","rade","radio","radius","rado","rael","raf","raft","rag","rage","ragen","rages","ragma","ragment","rah","raham","rai","raid","rails","rain","raine","rained","raint","rais","raise","rait","raj","rak","ral","rale","ram","rama","rame","rams","ran","rance","ranch","rand","random","rane","range","rangle","rank","rano","rant","rap","raph","rapper","rar","rare","ras","rass","raste","rat","rate","rating","raum","rav","raw","ray","rayed","raz","rb","rc","rd","re","rea","react","read","reader","reading","readsheet","ready","real","ream","reas","reason","reate","reb","rebbe","rec","rece","recht","reci","reck","recogn","record","rect","red","redirect","redu","reduce","reducible","ree","reek","reen","reens","rees","reet","ref","refer","reference","refix","reflect","refresh","refs","reg","regex","region","register","registr","regon","regular","reh","rei","reib","reibung","reich","reiche","reichen","rek","rel","reland","related","relation","relative","relax","release","rell","reload","rem","remark","reme","remote","remove","ren","rence","rench","rend","render","rene","reno","rent","rep","repeat","replace","repo","report","repository","req","request","requests","require","required","rer","rera","rero","res","reset","resh","reshold","resize","reso","resol","resolve","resource","resources","resp","respond","respons","response","ress","resse","ression","rest","result","results","ret","retch","reten","rets","rett","retto","return","returns","reu","rev","reven","reverse","review","rew","rewrite","rey","rez","rf","rg","rgb","rh","rho","ri","ria","riage","rial","rian","rias","rib","rible","ribu","ribute","ributed","ributes","ribution","ric","rica","rical","rice","rices","rich","richt","richtung","rick","rico","rics","rict","riction","rid","ride","rides","ridge","rie","rieb","rieben","ried","riel","rien","rier","riere","riers","ries","rif","rifice","rift","riften","rig","right","rightarrow","rii","rij","rijk","rik","rike","rikt","ril","rile","rim","rimin","riminal","rimonio","rin","ring","rinn","rio","rior","riority","riors","rios","rip","rique","rir","ris","rist","rit","rita","rite","riter","riteria","rito","ritt","ritten","ritz","rium","riv","rival","rivate","rive","river","rivial","rix","riz","rizona","rl","rm","rn","ro","road","rob","roc","rock","rod","rodu","roduction","roe","rog","roid","roit","rok","roke","rol","rola","role","roll","rolle","rolled","roller","rollers","rolling","rollo","rom","romagnet","rome","ron","rong","rons","ront","room","rooms","root","rop","roph","ropol","ropri","ropy","ror","ros","rose","ross","rost","rot","rotate","rote","rott","rou","rough","round","rout","route","router","routes","rov","row","rown","rows","rowser","roy","roz","rp","rr","rror","rs","rsg","rt","ru","ruby","ruck","ruct","ruction","ruf","rug","rugu","ruguay","ruit","ruits","rule","rules","rum","rument","run","rund","runner","running","runtime","rup","rupt","rupted","ruption","rus","rust","rut","rv","rvm","rw","rx","ry","rypt","rypted","ryption","rypto","rys","ryty","rz","rze","s","sa","safe","sak","sal","sam","same","sample","samples","san","save","saved","say","sb","sc","scal","scala","scale","scan","scar","sce","scene","sch","schaft","schaften","schap","schau","sche","scheid","scheidung","schein","schema","schemas","schen","scher","schied","schluss","schnitt","school","schrift","schule","schutz","sci","scop","scope","score","scr","screen","scri","scribe","script","scription","scripts","scriptsize","scriptstyle","scroll","sd","sdk","sdl","se","search","season","seau","sec","second","seconds","secret","sect","section","sections","secure","security","sed","see","seed","seen","sef","seg","segment","segu","seh","sein","seite","sel","select","selected","selection","selector","selenium","self","selves","sem","sen","send","sender","sens","sent","sep","separ","seq","sequ","sequence","sequently","ser","serial","serie","series","sero","sers","sert","serv","servable","serve","server","service","services","servlet","session","set","setminus","setopt","sets","sett","setting","settings","setup","sex","sey","sf","sg","sh","sha","shadow","shal","shape","share","shared","sharp","she","sheet","sheets","shell","shift","ship","ships","shire","shop","short","shot","should","show","si","sible","side","sieme","sig","sigma","sign","signal","signed","sil","sim","sime","simeq","similar","simp","simple","sin","since","sing","single","site","sites","six","size","sizeof","sk","ska","skap","ske","ski","skich","skie","skiego","skiej","skih","skim","skip","sko","skog","sku","sky","sl","slant","slash","sleep","slice","slide","slider","slow","slug","sm","small","sn","so","soap","sob","soci","social","sock","socket","soft","software","sol","sole","solute","som","some","something","son","song","sono","sort","sorted","sound","source","sourceforge","sp","space","spaces","span","spark","spe","spec","special","species","specific","spect","speed","spiel","spieler","spl","split","spot","spr","sprach","spre","sprech","spring","springframework","sq","sql","sqlite","sqrt","squ","square","sr","src","ss","ssh","ssl","sson","st","sta","staat","stab","stable","stack","stackexchange","stackoverflow","stad","staden","stadt","stag","stage","stal","stan","stand","standard","standing","star","start","starts","stat","state","statement","states","static","station","stats","status","stav","staw","std","stdio","stdout","ste","sted","stein","stell","stelle","stellen","steller","stelling","stellung","sten","step","steps","ster","sterd","sterdam","sterreich","sters","stmt","sto","stock","stoff","ston","stone","stood","stop","stor","storage","store","story","str","stra","stract","strap","stre","stream","street","strij","string","stringify","strings","strip","stroke","strong","stronom","stru","struct","structor","structure","stud","student","studio","stvo","stwa","stwo","sty","style","styles","stylesheet","su","sub","subfigure","subject","submit","subscribe","subsection","subset","subseteq","subst","substr","substring","subsubsection","success","such","sudo","suit","suite","sum","summary","sun","sup","super","supp","support","supported","sur","sv","svg","svn","sw","swap","sweise","swer","swers","swift","swing","switch","sym","symbol","syn","sync","syntax","sys","system","sz","t","ta","tab","table","tables","tabs","tabular","tac","tag","tagon","tags","taient","tail","tain","taire","tait","take","tal","talet","tan","tar","target","task","tasks","tat","tatywna","tau","tax","tb","tbl","tbody","tc","tcp","td","te","team","tech","techn","teck","ted","teen","teenth","teger","tegr","tei","teil","teilung","tek","tel","tele","tem","tembre","temp","temper","temperaturen","template","templates","temps","ten","tensor","tensorflow","ter","tera","tere","tered","terior","term","termin","tern","ternal","terne","ternoon","tero","terra","terre","ters","tersuch","tery","tes","test","testing","tests","tex","text","textarea","textbf","textcolor","texte","textit","textrm","textsc","textt","texttt","textwidth","tf","tfrac","th","tha","than","that","the","thead","theless","theme","then","theorem","theory","ther","there","thern","thers","thes","thesis","theta","they","thick","thing","third","this","thm","though","thread","threads","three","through","throw","thur","thy","ti","tick","tid","ties","tikz","tikzpicture","til","tilde","tim","time","timeout","timer","times","timestamp","ting","tiny","tion","tip","tis","tit","title","tk","tl","tm","tml","tmp","tn","to","tober","tocol","tod","today","toggle","toire","tok","token","tol","tom","tomcat","ton","tons","tool","tools","top","topic","tor","tot","total","totype","touch","tout","town","tp","tr","tra","trace","track","trad","train","training","trans","transaction","transform","transition","translate","transport","tras","trat","tre","tree","trees","tres","tri","triangle","trigger","trightarrow","trim","tring","tritt","trl","true","try","trz","ts","tt","tta","tte","ttemberg","tto","ttp","tty","tu","tuple","turn","tutorial","tv","tw","twitter","two","tx","txt","ty","typ","type","typen","typename","typeof","types","tz","u","ua","ual","uale","ually","ualmente","uals","uan","uario","uate","ub","uba","ubble","ube","uben","uber","ubern","ubernetes","ublic","ublik","ubre","ubs","ubuntu","uby","uc","uca","ucci","uce","uch","ucha","uchar","uche","uchs","ucht","uchte","ucion","uck","ucker","ucky","uclide","uclidean","uct","ucture","ud","uda","udad","ude","udem","uden","udent","uder","udes","udi","udio","udni","udo","ue","ued","ueil","uel","uela","uelle","uellement","uen","uent","uer","uerdo","uerte","uerto","ues","uese","uest","uesto","uet","uetooth","uez","uf","ufact","ufe","ufen","uff","uffer","uffle","ug","uga","ugby","uge","ugel","ugen","ugg","ugh","ughing","ugin","ugins","ugno","ugo","ugs","ugust","uh","ui","uid","uil","uing","uint","uis","uit","uits","uj","uje","uk","uka","uki","uky","ul","ula","ulaire","ular","ulas","ulate","ulated","ulating","ulation","ulations","ulative","ulator","uld","ule","ulen","uler","ules","ulf","uli","uliar","uling","ulk","ull","ulla","ulle","ulo","ulos","ulp","ulpt","uls","ulse","ulsion","ult","ultado","ultan","ultats","ultimo","ultur","ulture","ulty","ulu","ului","ulus","uly","um","uma","umably","uman","umann","umar","umb","umber","umble","umbled","umbn","umbnail","ume","umed","umen","ument","uments","umer","umerate","umeric","umes","umi","umin","uminate","uming","umm","ummy","umn","ump","umph","umps","umption","ums","un","una","unal","unas","unc","unch","unci","uncia","unct","unction","und","unda","unde","undefined","unden","under","underline","undert","undes","undial","undle","undo","undred","une","unes","unft","ung","unge","ungen","ungs","ungsseite","uni","unic","unicip","uniform","uning","union","unique","unit","unity","univers","unix","unk","unker","unknown","unks","unkt","unless","unn","unnable","unnel","unning","uno","unos","unque","uns","unsigned","unst","unt","unta","unte","unted","unter","until","untime","unto","untu","unwrap","unya","uo","uola","uous","up","update","updated","uper","upload","upp","upper","ups","upt","ur","ura","urable","ural","urale","urance","uras","uration","urb","urban","urbed","urch","urchase","urd","ure","ureau","ured","uren","urent","urer","ures","urg","urger","uri","uria","uries","uring","urity","urk","url","urls","urm","urn","urname","uro","urop","uropa","urope","urr","urre","urrence","urrency","urrent","urs","ursive","ursor","urst","urt","uru","urus","ury","urz","us","usa","usable","usage","usalem","usammen","usb","usc","usch","use","used","usement","usepackage","useppe","user","username","users","uses","uset","usetts","useum","ush","ushed","ushing","using","usion","usk","uso","usqu","usr","uss","ussen","ust","usta","usted","uster","usto","ustom","ustr","ustral","ustration","usz","uszt","usztus","ut","uta","utable","utat","utch","ute","uted","utely","uten","utenant","uter","utes","uteur","utf","uth","uther","uti","util","utils","uting","ution","utions","utive","utlich","uto","utor","utorial","utors","utos","uts","utsch","utt","uttavia","utter","utto","utton","uture","utz","utzt","uuid","uur","uv","uve","uvo","uvud","uw","uwe","ux","uy","uz","uzione","uzz","v","va","val","valid","validate","validation","valu","value","values","van","vanced","vano","var","varchar","vard","vare","varepsilon","vari","variable","variables","variant","varphi","vars","vas","vat","vb","vc","vd","ve","vec","vector","ved","vee","veg","veis","vek","vel","velop","velope","vement","ven","vendor","venir","vens","vent","vention","ventory","venue","ver","vera","verage","verb","verband","vere","verein","verify","verk","verkehr","vern","vers","versary","verse","version","versions","verso","vert","verte","verter","vertical","very","ves","vest","vet","vex","vey","vez","vi","via","viation","vic","vice","vid","video","vider","viders","vidia","vie","vier","view","views","vik","vil","villa","ville","vim","vin","ving","vious","viously","vir","viron","vironment","virt","virti","virtual","vis","vised","visibility","visible","vision","visor","visual","vity","viv","vl","vm","vn","vo","vod","voice","void","voir","voj","voke","vol","vole","volume","volution","von","voor","vor","vos","vote","vous","voy","vr","vre","vs","vspace","vt","vu","vue","vy","w","wa","wach","wad","wagen","wahl","wait","wal","wald","walk","wall","walt","wan","wand","war","ward","wards","ware","warn","warning","wart","was","watch","water","wave","way","ways","wd","we","weak","wealth","web","webdriver","webkit","webpack","website","wed","wedge","week","ween","weet","weg","wehr","wei","weig","weight","weis","weise","weit","wel","well","welt","wen","wend","wendung","wer","werb","werk","werke","werp","wers","wert","west","westen","western","wh","what","when","where","which","while","white","who","why","wi","wich","wick","wicklung","wid","wide","widehat","widet","widetilde","widget","width","wie","wig","wij","wik","wiki","wikipedia","will","win","wind","window","windows","wing","wire","wirtschaft","wise","wissenschaft","with","without","witz","wn","wner","wo","wod","wohl","wol","won","wood","woord","wor","word","wordpress","words","work","worker","working","works","world","wort","worth","wp","wr","wrap","wrapper","writ","write","writer","writing","written","ws","wt","ww","www","wx","wy","x","xa","xaml","xc","xe","xelles","xes","xf","xhtml","xi","xic","xico","xim","ximo","xis","xiv","xl","xls","xml","xmlns","xp","xpath","xs","xsd","xsl","xspace","xt","xtart","xter","xture","xty","xx","xxx","xxxx","xy","xygen","xyz","y","ya","yal","yaml","yan","yar","yard","yaume","yc","ych","yci","ycle","ycler","ycz","yd","ydro","ye","year","yect","yed","yellow","yen","yer","yes","yg","ygon","yi","ying","yj","yk","yl","yle","yles","yll","ylvan","ym","yman","ymbol","yme","ymen","ymi","yml","ymn","ymnas","ymnasium","yn","yna","ynam","ynamic","ynast","ync","ynchron","ynchronous","ynie","ynomial","ynt","yntax","yo","yond","you","your","youtube","yp","ype","ypes","yr","yrus","ys","ysis","yst","ystem","ystycz","ysz","yt","yter","yth","ythm","ython","ytics","ytu","yw","ywna","yy","yyyy","yz","z","za","zahl","zak","zan","zar","zas","zat","zburg","zd","ze","zec","zech","zed","zef","zeg","zeich","zeichnet","zeichnis","zeichnung","zeichnungen","zeit","zeitig","zej","zek","zel","zem","zen","zenia","zenie","zent","zer","zero","zerw","zes","zess","zet","zeta","zetek","zeti","zett","zeug","zeuge","zeum","zew","zh","zi","zia","zial","ziale","zie","ziel","zien","zig","zik","zil","zin","zing","zione","zioni","zip","zk","zm","zn","zna","znam","znik","zo","zon","zone","zony","zor","zos","zott","zs","zt","zte","zten","zu","zug","zung","zw","zy","zych","zyk","zym","zyma","zysk","zyst","zz","zza"],Yx=Object.fromEntries(Dy.map((t,s)=>[t,s])),Lv=new Set;for(const t of Dy)for(let s=0;s<=t.length;s++)Lv.add(t.slice(0,s));const jy=16;function Jx(t,s,n){let o=Yx[n];return t[s]===void 0||t[s].probs[o]===void 0?-1/0:t[s].probs[o]}function Zx(t,s,n){return t[s]===void 0?-1/0:Math.log(Qx(n,Dy,t[s].cum))}function O_(t,s){return s.encode(t)}function Dv(t,s){return t.length===s.length&&t.every((n,o)=>n===s[o])}function eT(t,s){if(t===s)return!0;const n=t.val;for(let o=n.length;o>=0&&o>=n.length-jy;o--){const u=n.slice(0,o),h=t.trie.registry[u];if(h===void 0)break;const v=n.slice(o);let P=Math.max(0,h.tokenization.length-2),f=h.tokenization.length;const b=h.tokenization.slice(P,f),x=s.tokenization.slice(P,f);if(jv(v)&&Dv(b,x))return!0}return!1}function jv(t){return t.length>jy?!1:Lv.has(t)}function Bv(t,s){return t===-1/0?s:s===-1/0?t:t>s?t+Math.log(1+Math.exp(s-t)):s+Math.log(1+Math.exp(t-s))}function C1(t){return t.reduce((s,n)=>Bv(s,n))}function Df(t,s,n,o,u,h,v,P){const f=t.val;if(s&&n>0){let x=t.trie.registry[t.ill_ancestor];t.prior_ill=x.prior_ill+Jx(h,t.ill_ancestor,t.ill_suffix);let k=-1/0;for(let C=Math.max(0,f.length-jy);C<f.length;C++){const N=f.slice(C);if(jv(N)){const X=f.slice(0,C);let oe=t.trie.registry[X];oe.in_character_model&&(k=Bv(k,oe.prior_ill+Zx(h,X,N)))}}t.prior=k}if(!t.in_character_model&&t.trie.registry[t.ill_ancestor].in_character_model&&(t.post_ill_Z=Nv(t,t)+t.prior_ill,o.push([t.val,t.post_ill_Z])),t.post_Z=t.prior+t.likelihood,t.post_Z-u>v&&t.children.length===0){for(const x of"abcdefghijklmnopqrstuvwxyz "){if(t.force_space&&x!==" "||(t.prohibit_space||t.letter===" ")&&x===" ")continue;const k=t.val+x;let C;const N=k.slice(0,-1).lastIndexOf(" "),X=N===-1?"":k.slice(0,N),oe=N===-1?k:k.slice(N+1),re=t.trie.registry[X];if(X.length>0&&re!==void 0){if(oe.length>0&&oe[0]===" ")throw new Error(`val has two consecutive spaces! ${k}`);let G=re.tokenization,D=O_(oe,P).slice(1);C=[...G,...D]}else C=O_(k,P);const H={val:k,letter:x,likelihood:t.likelihood,tokenization:C,children:[],in_character_model:!1,ever_visible_parent:!1,trie:t.trie,letter:x,parent:t,height:t.height+1,period:t.period,offset:Math.random()*t.period,timer_fracs:[...t.timer_fracs]},te=H.tokenization.slice(0,-1);for(let G=1;G<=H.val.length;G++){let D=H.val.slice(0,-G),E=t.trie.registry[D];if(Dv(E.tokenization,te)){H.ill_ancestor=D,H.ill_suffix=H.val.slice(-G);break}}if(H.ill_ancestor===void 0)throw new Error("Could not find ill_ancestor for: "+H.val);t.children.push(H),t.trie.registry[H.val]=H}for(const x of t.children)Df(x,!0,n+1,o,u,h,v,P)}else for(const x of t.children)Df(x,s,n+1,o,u,h,v,P)}function u_(t,s){const n=performance.now(),o=t(...s),u=performance.now();return console.log(`Function ${t.name} took ${u-n} milliseconds to execute.`),o}function tT(t){let s=[];function n(o){s.push(o);for(const u of o.children)n(u)}n(t),s.reverse();for(const o of s)if(o.children.length>0){o.post_Z=C1(o.children.map(h=>h.post_Z));let u=-1/0;for(const h of o.children)h.y_relative_bottom=Math.exp(u-o.post_Z),u=C1([u,h.post_Z]),h.y_relative_top=Math.exp(u-o.post_Z)}}function Rv(t,s,n){t.likelihood+=s,t.timer_fracs.push(n);for(const o of t.children)o.is_visible||Rv(o,s,n)}function Nv(t,s){return eT(t,s)?t.ever_visible_parent?Math.max(...t.children.map(n=>Nv(n,s))):t.likelihood:-1/0}var ro={},Uv={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(t,s,n)=>{t.exports=n.p+"ort-wasm-simd-threaded.jsep.wasm"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(t,s,n)=>{n.r(s),n.d(s,{Environment:()=>it,Interpreter:()=>ut,Template:()=>gt,parse:()=>$e,tokenize:()=>k});var o=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),u=Object.freeze({set:o.Set,for:o.For,in:o.In,is:o.Is,if:o.If,else:o.Else,endif:o.EndIf,elif:o.ElseIf,endfor:o.EndFor,and:o.And,or:o.Or,not:o.Not,"not in":o.NotIn,macro:o.Macro,endmacro:o.EndMacro,true:o.BooleanLiteral,false:o.BooleanLiteral,none:o.NullLiteral,True:o.BooleanLiteral,False:o.BooleanLiteral,None:o.NullLiteral}),h=class{constructor(j,ae){this.value=j,this.type=ae}};function v(j){return/\w/.test(j)}function P(j){return/[0-9]/.test(j)}var f=[["{%",o.OpenStatement],["%}",o.CloseStatement],["{{",o.OpenExpression],["}}",o.CloseExpression],["(",o.OpenParen],[")",o.CloseParen],["{",o.OpenCurlyBracket],["}",o.CloseCurlyBracket],["[",o.OpenSquareBracket],["]",o.CloseSquareBracket],[",",o.Comma],[".",o.Dot],[":",o.Colon],["|",o.Pipe],["<=",o.ComparisonBinaryOperator],[">=",o.ComparisonBinaryOperator],["==",o.ComparisonBinaryOperator],["!=",o.ComparisonBinaryOperator],["<",o.ComparisonBinaryOperator],[">",o.ComparisonBinaryOperator],["+",o.AdditiveBinaryOperator],["-",o.AdditiveBinaryOperator],["*",o.MultiplicativeBinaryOperator],["/",o.MultiplicativeBinaryOperator],["%",o.MultiplicativeBinaryOperator],["=",o.Equals]],b=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function x(j,ae={}){return j.endsWith(`
`)&&(j=j.slice(0,-1)),j=j.replace(/{#.*?#}/gs,"{##}"),ae.lstrip_blocks&&(j=j.replace(/^[ \t]*({[#%])/gm,"$1")),ae.trim_blocks&&(j=j.replace(/([#%]})\n/g,"$1")),j.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function k(j,ae={}){var ot,ct,Ft;const Q=[],de=x(j,ae);let Oe=0;const et=Tt=>{let kt="";for(;Tt(de[Oe]);){if(de[Oe]==="\\"){if(++Oe,Oe>=de.length)throw new SyntaxError("Unexpected end of input");const Ct=de[Oe++],hr=b.get(Ct);if(hr===void 0)throw new SyntaxError(`Unexpected escaped character: ${Ct}`);kt+=hr;continue}if(kt+=de[Oe++],Oe>=de.length)throw new SyntaxError("Unexpected end of input")}return kt};e:for(;Oe<de.length;){const Tt=(ot=Q.at(-1))==null?void 0:ot.type;if(Tt===void 0||Tt===o.CloseStatement||Tt===o.CloseExpression){let Ct="";for(;Oe<de.length&&!(de[Oe]==="{"&&(de[Oe+1]==="%"||de[Oe+1]==="{"));)Ct+=de[Oe++];if(Ct.length>0){Q.push(new h(Ct,o.Text));continue}}et(Ct=>/\s/.test(Ct));const kt=de[Oe];if(kt==="-"||kt==="+"){const Ct=(ct=Q.at(-1))==null?void 0:ct.type;if(Ct===o.Text||Ct===void 0)throw new SyntaxError(`Unexpected character: ${kt}`);switch(Ct){case o.Identifier:case o.NumericLiteral:case o.BooleanLiteral:case o.NullLiteral:case o.StringLiteral:case o.CloseParen:case o.CloseSquareBracket:break;default:{++Oe;const hr=et(P);Q.push(new h(`${kt}${hr}`,hr.length>0?o.NumericLiteral:o.UnaryOperator));continue}}}for(const[Ct,hr]of f)if(de.slice(Oe,Oe+Ct.length)===Ct){Q.push(new h(Ct,hr)),Oe+=Ct.length;continue e}if(kt==="'"||kt==='"'){++Oe;const Ct=et(hr=>hr!==kt);Q.push(new h(Ct,o.StringLiteral)),++Oe;continue}if(P(kt)){const Ct=et(P);Q.push(new h(Ct,o.NumericLiteral));continue}if(v(kt)){const Ct=et(v),hr=Object.hasOwn(u,Ct)?u[Ct]:o.Identifier;hr===o.In&&((Ft=Q.at(-1))==null?void 0:Ft.type)===o.Not?(Q.pop(),Q.push(new h("not in",o.NotIn))):Q.push(new h(Ct,hr));continue}throw new SyntaxError(`Unexpected character: ${kt}`)}return Q}var C=class{constructor(){Te(this,"type","Statement")}},N=class extends C{constructor(ae){super();Te(this,"type","Program");this.body=ae}},X=class extends C{constructor(ae,Q,de){super();Te(this,"type","If");this.test=ae,this.body=Q,this.alternate=de}},oe=class extends C{constructor(ae,Q,de,Oe){super();Te(this,"type","For");this.loopvar=ae,this.iterable=Q,this.body=de,this.defaultBlock=Oe}},re=class extends C{constructor(ae,Q){super();Te(this,"type","Set");this.assignee=ae,this.value=Q}},V=class extends C{constructor(ae,Q,de){super();Te(this,"type","Macro");this.name=ae,this.args=Q,this.body=de}},H=class extends C{constructor(){super(...arguments);Te(this,"type","Expression")}},te=class extends H{constructor(ae,Q,de){super();Te(this,"type","MemberExpression");this.object=ae,this.property=Q,this.computed=de}},G=class extends H{constructor(ae,Q){super();Te(this,"type","CallExpression");this.callee=ae,this.args=Q}},D=class extends H{constructor(ae){super();Te(this,"type","Identifier");this.value=ae}},E=class extends H{constructor(ae){super();Te(this,"type","Literal");this.value=ae}},L=class extends E{constructor(){super(...arguments);Te(this,"type","NumericLiteral")}},S=class extends E{constructor(){super(...arguments);Te(this,"type","StringLiteral")}},se=class extends E{constructor(){super(...arguments);Te(this,"type","BooleanLiteral")}},ee=class extends E{constructor(){super(...arguments);Te(this,"type","NullLiteral")}},pe=class extends E{constructor(){super(...arguments);Te(this,"type","ArrayLiteral")}},he=class extends E{constructor(){super(...arguments);Te(this,"type","TupleLiteral")}},be=class extends E{constructor(){super(...arguments);Te(this,"type","ObjectLiteral")}},Ce=class extends H{constructor(ae,Q,de){super();Te(this,"type","BinaryExpression");this.operator=ae,this.left=Q,this.right=de}},ke=class extends H{constructor(ae,Q){super();Te(this,"type","FilterExpression");this.operand=ae,this.filter=Q}},je=class extends H{constructor(ae,Q){super();Te(this,"type","SelectExpression");this.iterable=ae,this.test=Q}},fe=class extends H{constructor(ae,Q,de){super();Te(this,"type","TestExpression");this.operand=ae,this.negate=Q,this.test=de}},K=class extends H{constructor(ae,Q){super();Te(this,"type","UnaryExpression");this.operator=ae,this.argument=Q}},me=class extends H{constructor(ae=void 0,Q=void 0,de=void 0){super();Te(this,"type","SliceExpression");this.start=ae,this.stop=Q,this.step=de}},ge=class extends H{constructor(ae,Q){super();Te(this,"type","KeywordArgumentExpression");this.key=ae,this.value=Q}};function $e(j){const ae=new N([]);let Q=0;function de(at,bt){const Ot=j[Q++];if(!Ot||Ot.type!==at)throw new Error(`Parser Error: ${bt}. ${Ot.type} !== ${at}.`);return Ot}function Oe(){switch(j[Q].type){case o.Text:return ct();case o.OpenStatement:return Ft();case o.OpenExpression:return Tt();default:throw new SyntaxError(`Unexpected token type: ${j[Q].type}`)}}function et(...at){return Q+at.length<=j.length&&at.some((bt,Ot)=>bt!==j[Q+Ot].type)}function ot(...at){return Q+at.length<=j.length&&at.every((bt,Ot)=>bt===j[Q+Ot].type)}function ct(){return new S(de(o.Text,"Expected text token").value)}function Ft(){de(o.OpenStatement,"Expected opening statement token");let at;switch(j[Q].type){case o.Set:++Q,at=kt(),de(o.CloseStatement,"Expected closing statement token");break;case o.If:++Q,at=Ct(),de(o.OpenStatement,"Expected {% token"),de(o.EndIf,"Expected endif token"),de(o.CloseStatement,"Expected %} token");break;case o.Macro:++Q,at=hr(),de(o.OpenStatement,"Expected {% token"),de(o.EndMacro,"Expected endmacro token"),de(o.CloseStatement,"Expected %} token");break;case o.For:++Q,at=as(),de(o.OpenStatement,"Expected {% token"),de(o.EndFor,"Expected endfor token"),de(o.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${j[Q].type}`)}return at}function Tt(){de(o.OpenExpression,"Expected opening expression token");const at=Gr();return de(o.CloseExpression,"Expected closing expression token"),at}function kt(){const at=Gr();if(ot(o.Equals)){++Q;const bt=kt();return new re(at,bt)}return at}function Ct(){var fs,ci,Dn,Br,Is,Yr,Mn,Sr;const at=Gr();de(o.CloseStatement,"Expected closing statement token");const bt=[],Ot=[];for(;!(((fs=j[Q])==null?void 0:fs.type)===o.OpenStatement&&(((ci=j[Q+1])==null?void 0:ci.type)===o.ElseIf||((Dn=j[Q+1])==null?void 0:Dn.type)===o.Else||((Br=j[Q+1])==null?void 0:Br.type)===o.EndIf));)bt.push(Oe());if(((Is=j[Q])==null?void 0:Is.type)===o.OpenStatement&&((Yr=j[Q+1])==null?void 0:Yr.type)!==o.EndIf)if(++Q,ot(o.ElseIf))de(o.ElseIf,"Expected elseif token"),Ot.push(Ct());else for(de(o.Else,"Expected else token"),de(o.CloseStatement,"Expected closing statement token");!(((Mn=j[Q])==null?void 0:Mn.type)===o.OpenStatement&&((Sr=j[Q+1])==null?void 0:Sr.type)===o.EndIf);)Ot.push(Oe());return new X(at,bt,Ot)}function hr(){const at=Ks();if(at.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const bt=ii();de(o.CloseStatement,"Expected closing statement token");const Ot=[];for(;et(o.OpenStatement,o.EndMacro);)Ot.push(Oe());return new V(at,bt,Ot)}function Cr(at=!1){const bt=at?Ks:Gr,Ot=[bt()],fs=ot(o.Comma);for(;fs&&(++Q,Ot.push(bt()),!!ot(o.Comma)););return fs?new he(Ot):Ot[0]}function as(){const at=Cr(!0);if(!(at instanceof D||at instanceof he))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${at.type} instead`);de(o.In,"Expected `in` keyword following loop variable");const bt=Gr();de(o.CloseStatement,"Expected closing statement token");const Ot=[];for(;et(o.OpenStatement,o.EndFor)&&et(o.OpenStatement,o.Else);)Ot.push(Oe());const fs=[];if(ot(o.OpenStatement,o.Else))for(++Q,++Q,de(o.CloseStatement,"Expected closing statement token");et(o.OpenStatement,o.EndFor);)fs.push(Oe());return new oe(at,bt,Ot,fs)}function Gr(){return Bs()}function Bs(){const at=si();if(ot(o.If)){++Q;const bt=si();if(ot(o.Else)){++Q;const Ot=si();return new X(bt,[at],[Ot])}else return new je(at,bt)}return at}function si(){let at=ni();for(;ot(o.Or);){const bt=j[Q];++Q;const Ot=ni();at=new Ce(bt,at,Ot)}return at}function ni(){let at=On();for(;ot(o.And);){const bt=j[Q];++Q;const Ot=On();at=new Ce(bt,at,Ot)}return at}function On(){let at;for(;ot(o.Not);){const bt=j[Q];++Q;const Ot=On();at=new K(bt,Ot)}return at??Vi()}function Vi(){let at=jt();for(;ot(o.ComparisonBinaryOperator)||ot(o.In)||ot(o.NotIn);){const bt=j[Q];++Q;const Ot=jt();at=new Ce(bt,at,Ot)}return at}function jt(){let at=ai();for(;ot(o.AdditiveBinaryOperator);){const bt=j[Q];++Q;const Ot=ai();at=new Ce(bt,at,Ot)}return at}function an(){const at=ln();return ot(o.OpenParen)?zn(at):at}function zn(at){let bt=new G(at,ii());return ot(o.OpenParen)&&(bt=zn(bt)),bt}function ii(){de(o.OpenParen,"Expected opening parenthesis for arguments list");const at=Mi();return de(o.CloseParen,"Expected closing parenthesis for arguments list"),at}function Mi(){const at=[];for(;!ot(o.CloseParen);){let bt=Gr();if(ot(o.Equals)){if(++Q,!(bt instanceof D))throw new SyntaxError("Expected identifier for keyword argument");const Ot=Gr();bt=new ge(bt,Ot)}at.push(bt),ot(o.Comma)&&++Q}return at}function oi(){const at=[];let bt=!1;for(;!ot(o.CloseSquareBracket);)ot(o.Colon)?(at.push(void 0),++Q,bt=!0):(at.push(Gr()),ot(o.Colon)&&(++Q,bt=!0));if(at.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(bt){if(at.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new me(...at)}return at[0]}function ln(){let at=Ks();for(;ot(o.Dot)||ot(o.OpenSquareBracket);){const bt=j[Q];++Q;let Ot;const fs=bt.type!==o.Dot;if(fs)Ot=oi(),de(o.CloseSquareBracket,"Expected closing square bracket");else if(Ot=Ks(),Ot.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");at=new te(at,Ot,fs)}return at}function ai(){let at=li();for(;ot(o.MultiplicativeBinaryOperator);){const bt=j[Q];++Q;const Ot=li();at=new Ce(bt,at,Ot)}return at}function li(){let at=Ln();for(;ot(o.Is);){++Q;const bt=ot(o.Not);bt&&++Q;let Ot=Ks();if(Ot instanceof se?Ot=new D(Ot.value.toString()):Ot instanceof ee&&(Ot=new D("none")),!(Ot instanceof D))throw new SyntaxError("Expected identifier for the test");at=new fe(at,bt,Ot)}return at}function Ln(){let at=an();for(;ot(o.Pipe);){++Q;let bt=Ks();if(!(bt instanceof D))throw new SyntaxError("Expected identifier for the filter");ot(o.OpenParen)&&(bt=zn(bt)),at=new ke(at,bt)}return at}function Ks(){const at=j[Q];switch(at.type){case o.NumericLiteral:return++Q,new L(Number(at.value));case o.StringLiteral:return++Q,new S(at.value);case o.BooleanLiteral:return++Q,new se(at.value.toLowerCase()==="true");case o.NullLiteral:return++Q,new ee(null);case o.Identifier:return++Q,new D(at.value);case o.OpenParen:{++Q;const bt=Cr();if(j[Q].type!==o.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${j[Q].type} instead`);return++Q,bt}case o.OpenSquareBracket:{++Q;const bt=[];for(;!ot(o.CloseSquareBracket);)bt.push(Gr()),ot(o.Comma)&&++Q;return++Q,new pe(bt)}case o.OpenCurlyBracket:{++Q;const bt=new Map;for(;!ot(o.CloseCurlyBracket);){const Ot=Gr();de(o.Colon,"Expected colon between key and value in object literal");const fs=Gr();bt.set(Ot,fs),ot(o.Comma)&&++Q}return++Q,new be(bt)}default:throw new SyntaxError(`Unexpected token: ${at.type}`)}}for(;Q<j.length;)ae.body.push(Oe());return ae}function We(j,ae,Q=1){ae===void 0&&(ae=j,j=0);const de=[];for(let Oe=j;Oe<ae;Oe+=Q)de.push(Oe);return de}function Se(j,ae,Q,de=1){const Oe=Math.sign(de);Oe>=0?(ae=(ae??(ae=0))<0?Math.max(j.length+ae,0):Math.min(ae,j.length),Q=(Q??(Q=j.length))<0?Math.max(j.length+Q,0):Math.min(Q,j.length)):(ae=(ae??(ae=j.length-1))<0?Math.max(j.length+ae,-1):Math.min(ae,j.length-1),Q=(Q??(Q=-1))<-1?Math.max(j.length+Q,-1):Math.min(Q,j.length-1));const et=[];for(let ot=ae;Oe*ot<Oe*Q;ot+=de)et.push(j[ot]);return et}function Ne(j){return j.replace(/\b\w/g,ae=>ae.toUpperCase())}var He=class{constructor(j=void 0){Te(this,"type","RuntimeValue");Te(this,"value");Te(this,"builtins",new Map);this.value=j}__bool__(){return new Fe(!!this.value)}},Be=class extends He{constructor(){super(...arguments);Te(this,"type","NumericValue")}},le=class extends He{constructor(){super(...arguments);Te(this,"type","StringValue");Te(this,"builtins",new Map([["upper",new Ye(()=>new le(this.value.toUpperCase()))],["lower",new Ye(()=>new le(this.value.toLowerCase()))],["strip",new Ye(()=>new le(this.value.trim()))],["title",new Ye(()=>new le(Ne(this.value)))],["length",new Be(this.value.length)],["rstrip",new Ye(()=>new le(this.value.trimEnd()))],["lstrip",new Ye(()=>new le(this.value.trimStart()))]]))}},Fe=class extends He{constructor(){super(...arguments);Te(this,"type","BooleanValue")}},Re=class extends He{constructor(){super(...arguments);Te(this,"type","ObjectValue");Te(this,"builtins",new Map([["get",new Ye(([ae,Q])=>{if(!(ae instanceof le))throw new Error(`Object key must be a string: got ${ae.type}`);return this.value.get(ae.value)??Q??new Qe})],["items",new Ye(()=>new Ae(Array.from(this.value.entries()).map(([ae,Q])=>new Ae([new le(ae),Q]))))]]))}__bool__(){return new Fe(this.value.size>0)}},ye=class extends Re{constructor(){super(...arguments);Te(this,"type","KeywordArgumentsValue")}},Ae=class extends He{constructor(){super(...arguments);Te(this,"type","ArrayValue");Te(this,"builtins",new Map([["length",new Be(this.value.length)]]))}__bool__(){return new Fe(this.value.length>0)}},Ze=class extends Ae{constructor(){super(...arguments);Te(this,"type","TupleValue")}},Ye=class extends He{constructor(){super(...arguments);Te(this,"type","FunctionValue")}},Qe=class extends He{constructor(){super(...arguments);Te(this,"type","NullValue")}},Ue=class extends He{constructor(){super(...arguments);Te(this,"type","UndefinedValue")}},it=class{constructor(j){Te(this,"variables",new Map([["namespace",new Ye(j=>{if(j.length===0)return new Re(new Map);if(j.length!==1||!(j[0]instanceof Re))throw new Error("`namespace` expects either zero arguments or a single object argument");return j[0]})]]));Te(this,"tests",new Map([["boolean",j=>j.type==="BooleanValue"],["callable",j=>j instanceof Ye],["odd",j=>{if(j.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${j.type}`);return j.value%2!==0}],["even",j=>{if(j.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${j.type}`);return j.value%2===0}],["false",j=>j.type==="BooleanValue"&&!j.value],["true",j=>j.type==="BooleanValue"&&j.value],["none",j=>j.type==="NullValue"],["string",j=>j.type==="StringValue"],["number",j=>j.type==="NumericValue"],["integer",j=>j.type==="NumericValue"&&Number.isInteger(j.value)],["iterable",j=>j.type==="ArrayValue"||j.type==="StringValue"],["mapping",j=>j.type==="ObjectValue"],["lower",j=>{const ae=j.value;return j.type==="StringValue"&&ae===ae.toLowerCase()}],["upper",j=>{const ae=j.value;return j.type==="StringValue"&&ae===ae.toUpperCase()}],["none",j=>j.type==="NullValue"],["defined",j=>j.type!=="UndefinedValue"],["undefined",j=>j.type==="UndefinedValue"],["equalto",(j,ae)=>j.value===ae.value],["eq",(j,ae)=>j.value===ae.value]]));this.parent=j}set(j,ae){return this.declareVariable(j,_t(ae))}declareVariable(j,ae){if(this.variables.has(j))throw new SyntaxError(`Variable already declared: ${j}`);return this.variables.set(j,ae),ae}setVariable(j,ae){return this.variables.set(j,ae),ae}resolve(j){if(this.variables.has(j))return this;if(this.parent)return this.parent.resolve(j);throw new Error(`Unknown variable: ${j}`)}lookupVariable(j){try{return this.resolve(j).variables.get(j)??new Ue}catch{return new Ue}}},ut=class{constructor(j){Te(this,"global");this.global=j??new it}run(j){return this.evaluate(j,this.global)}evaluateBinaryExpression(j,ae){const Q=this.evaluate(j.left,ae);switch(j.operator.value){case"and":return Q.__bool__().value?this.evaluate(j.right,ae):Q;case"or":return Q.__bool__().value?Q:this.evaluate(j.right,ae)}const de=this.evaluate(j.right,ae);switch(j.operator.value){case"==":return new Fe(Q.value==de.value);case"!=":return new Fe(Q.value!=de.value)}if(Q instanceof Ue||de instanceof Ue)throw new Error("Cannot perform operation on undefined values");if(Q instanceof Qe||de instanceof Qe)throw new Error("Cannot perform operation on null values");if(Q instanceof Be&&de instanceof Be)switch(j.operator.value){case"+":return new Be(Q.value+de.value);case"-":return new Be(Q.value-de.value);case"*":return new Be(Q.value*de.value);case"/":return new Be(Q.value/de.value);case"%":return new Be(Q.value%de.value);case"<":return new Fe(Q.value<de.value);case">":return new Fe(Q.value>de.value);case">=":return new Fe(Q.value>=de.value);case"<=":return new Fe(Q.value<=de.value)}else if(Q instanceof Ae&&de instanceof Ae)switch(j.operator.value){case"+":return new Ae(Q.value.concat(de.value))}else if(de instanceof Ae){const Oe=de.value.find(et=>et.value===Q.value)!==void 0;switch(j.operator.value){case"in":return new Fe(Oe);case"not in":return new Fe(!Oe)}}if(Q instanceof le||de instanceof le)switch(j.operator.value){case"+":return new le(Q.value.toString()+de.value.toString())}if(Q instanceof le&&de instanceof le)switch(j.operator.value){case"in":return new Fe(de.value.includes(Q.value));case"not in":return new Fe(!de.value.includes(Q.value))}if(Q instanceof le&&de instanceof Re)switch(j.operator.value){case"in":return new Fe(de.value.has(Q.value));case"not in":return new Fe(!de.value.has(Q.value))}throw new SyntaxError(`Unknown operator "${j.operator.value}" between ${Q.type} and ${de.type}`)}evaluateArguments(j,ae){const Q=[],de=new Map;for(const Oe of j)if(Oe.type==="KeywordArgumentExpression"){const et=Oe;de.set(et.key.value,this.evaluate(et.value,ae))}else{if(de.size>0)throw new Error("Positional arguments must come before keyword arguments");Q.push(this.evaluate(Oe,ae))}return[Q,de]}evaluateFilterExpression(j,ae){const Q=this.evaluate(j.operand,ae);if(j.filter.type==="Identifier"){const de=j.filter;if(de.value==="tojson")return new le(ht(Q));if(Q instanceof Ae)switch(de.value){case"list":return Q;case"first":return Q.value[0];case"last":return Q.value[Q.value.length-1];case"length":return new Be(Q.value.length);case"reverse":return new Ae(Q.value.reverse());case"sort":return new Ae(Q.value.sort((Oe,et)=>{if(Oe.type!==et.type)throw new Error(`Cannot compare different types: ${Oe.type} and ${et.type}`);switch(Oe.type){case"NumericValue":return Oe.value-et.value;case"StringValue":return Oe.value.localeCompare(et.value);default:throw new Error(`Cannot compare type: ${Oe.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${de.value}`)}else if(Q instanceof le)switch(de.value){case"length":return new Be(Q.value.length);case"upper":return new le(Q.value.toUpperCase());case"lower":return new le(Q.value.toLowerCase());case"title":return new le(Ne(Q.value));case"capitalize":return new le(Q.value.charAt(0).toUpperCase()+Q.value.slice(1));case"trim":return new le(Q.value.trim());case"indent":return new le(Q.value.split(`
`).map((Oe,et)=>et===0||Oe.length===0?Oe:"    "+Oe).join(`
`));case"string":return Q;default:throw new Error(`Unknown StringValue filter: ${de.value}`)}else if(Q instanceof Be)switch(de.value){case"abs":return new Be(Math.abs(Q.value));default:throw new Error(`Unknown NumericValue filter: ${de.value}`)}else if(Q instanceof Re)switch(de.value){case"items":return new Ae(Array.from(Q.value.entries()).map(([Oe,et])=>new Ae([new le(Oe),et])));case"length":return new Be(Q.value.size);default:throw new Error(`Unknown ObjectValue filter: ${de.value}`)}throw new Error(`Cannot apply filter "${de.value}" to type: ${Q.type}`)}else if(j.filter.type==="CallExpression"){const de=j.filter;if(de.callee.type!=="Identifier")throw new Error(`Unknown filter: ${de.callee.type}`);const Oe=de.callee.value;if(Oe==="tojson"){const[,et]=this.evaluateArguments(de.args,ae),ot=et.get("indent")??new Qe;if(!(ot instanceof Be||ot instanceof Qe))throw new Error("If set, indent must be a number");return new le(ht(Q,ot.value))}if(Q instanceof Ae){switch(Oe){case"selectattr":case"rejectattr":{const et=Oe==="selectattr";if(Q.value.some(Ct=>!(Ct instanceof Re)))throw new Error(`\`${Oe}\` can only be applied to array of objects`);if(de.args.some(Ct=>Ct.type!=="StringLiteral"))throw new Error(`arguments of \`${Oe}\` must be strings`);const[ot,ct,Ft]=de.args.map(Ct=>this.evaluate(Ct,ae));let Tt;if(ct){const Ct=ae.tests.get(ct.value);if(!Ct)throw new Error(`Unknown test: ${ct.value}`);Tt=Ct}else Tt=(...Ct)=>Ct[0].__bool__().value;const kt=Q.value.filter(Ct=>{const hr=Ct.value.get(ot.value),Cr=hr?Tt(hr,Ft):!1;return et?Cr:!Cr});return new Ae(kt)}case"map":{const[,et]=this.evaluateArguments(de.args,ae);if(et.has("attribute")){const ot=et.get("attribute");if(!(ot instanceof le))throw new Error("attribute must be a string");const ct=et.get("default"),Ft=Q.value.map(Tt=>{if(!(Tt instanceof Re))throw new Error("items in map must be an object");return Tt.value.get(ot.value)??ct??new Ue});return new Ae(Ft)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${Oe}`)}else if(Q instanceof le){switch(Oe){case"indent":{const[et,ot]=this.evaluateArguments(de.args,ae),ct=et.at(0)??ot.get("width")??new Be(4);if(!(ct instanceof Be))throw new Error("width must be a number");const Ft=et.at(1)??ot.get("first")??new Fe(!1),Tt=et.at(2)??ot.get("blank")??new Fe(!1),kt=Q.value.split(`
`),Ct=" ".repeat(ct.value),hr=kt.map((Cr,as)=>!Ft.value&&as===0||!Tt.value&&Cr.length===0?Cr:Ct+Cr);return new le(hr.join(`
`))}}throw new Error(`Unknown StringValue filter: ${Oe}`)}else throw new Error(`Cannot apply filter "${Oe}" to type: ${Q.type}`)}throw new Error(`Unknown filter: ${j.filter.type}`)}evaluateTestExpression(j,ae){const Q=this.evaluate(j.operand,ae),de=ae.tests.get(j.test.value);if(!de)throw new Error(`Unknown test: ${j.test.value}`);const Oe=de(Q);return new Fe(j.negate?!Oe:Oe)}evaluateUnaryExpression(j,ae){const Q=this.evaluate(j.argument,ae);switch(j.operator.value){case"not":return new Fe(!Q.value);default:throw new SyntaxError(`Unknown operator: ${j.operator.value}`)}}evalProgram(j,ae){return this.evaluateBlock(j.body,ae)}evaluateBlock(j,ae){let Q="";for(const de of j){const Oe=this.evaluate(de,ae);Oe.type!=="NullValue"&&Oe.type!=="UndefinedValue"&&(Q+=Oe.value)}return new le(Q)}evaluateIdentifier(j,ae){return ae.lookupVariable(j.value)}evaluateCallExpression(j,ae){const[Q,de]=this.evaluateArguments(j.args,ae);de.size>0&&Q.push(new ye(de));const Oe=this.evaluate(j.callee,ae);if(Oe.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${Oe.type}`);return Oe.value(Q,ae)}evaluateSliceExpression(j,ae,Q){if(!(j instanceof Ae||j instanceof le))throw new Error("Slice object must be an array or string");const de=this.evaluate(ae.start,Q),Oe=this.evaluate(ae.stop,Q),et=this.evaluate(ae.step,Q);if(!(de instanceof Be||de instanceof Ue))throw new Error("Slice start must be numeric or undefined");if(!(Oe instanceof Be||Oe instanceof Ue))throw new Error("Slice stop must be numeric or undefined");if(!(et instanceof Be||et instanceof Ue))throw new Error("Slice step must be numeric or undefined");return j instanceof Ae?new Ae(Se(j.value,de.value,Oe.value,et.value)):new le(Se(Array.from(j.value),de.value,Oe.value,et.value).join(""))}evaluateMemberExpression(j,ae){const Q=this.evaluate(j.object,ae);let de;if(j.computed){if(j.property.type==="SliceExpression")return this.evaluateSliceExpression(Q,j.property,ae);de=this.evaluate(j.property,ae)}else de=new le(j.property.value);let Oe;if(Q instanceof Re){if(!(de instanceof le))throw new Error(`Cannot access property with non-string: got ${de.type}`);Oe=Q.value.get(de.value)??Q.builtins.get(de.value)}else if(Q instanceof Ae||Q instanceof le)if(de instanceof Be)Oe=Q.value.at(de.value),Q instanceof le&&(Oe=new le(Q.value.at(de.value)));else if(de instanceof le)Oe=Q.builtins.get(de.value);else throw new Error(`Cannot access property with non-string/non-number: got ${de.type}`);else{if(!(de instanceof le))throw new Error(`Cannot access property with non-string: got ${de.type}`);Oe=Q.builtins.get(de.value)}return Oe instanceof He?Oe:new Ue}evaluateSet(j,ae){const Q=this.evaluate(j.value,ae);if(j.assignee.type==="Identifier"){const de=j.assignee.value;ae.setVariable(de,Q)}else if(j.assignee.type==="MemberExpression"){const de=j.assignee,Oe=this.evaluate(de.object,ae);if(!(Oe instanceof Re))throw new Error("Cannot assign to member of non-object");if(de.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");Oe.value.set(de.property.value,Q)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(j.assignee)}`);return new Qe}evaluateIf(j,ae){const Q=this.evaluate(j.test,ae);return this.evaluateBlock(Q.__bool__().value?j.body:j.alternate,ae)}evaluateFor(j,ae){const Q=new it(ae);let de,Oe;if(j.iterable.type==="SelectExpression"){const Tt=j.iterable;Oe=this.evaluate(Tt.iterable,Q),de=Tt.test}else Oe=this.evaluate(j.iterable,Q);if(!(Oe instanceof Ae))throw new Error(`Expected iterable type in for loop: got ${Oe.type}`);const et=[],ot=[];for(let Tt=0;Tt<Oe.value.length;++Tt){const kt=new it(Q),Ct=Oe.value[Tt];let hr;if(j.loopvar.type==="Identifier")hr=Cr=>Cr.setVariable(j.loopvar.value,Ct);else if(j.loopvar.type==="TupleLiteral"){const Cr=j.loopvar;if(Ct.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${Ct.type}`);const as=Ct;if(Cr.value.length!==as.value.length)throw new Error(`Too ${Cr.value.length>as.value.length?"few":"many"} items to unpack`);hr=Gr=>{for(let Bs=0;Bs<Cr.value.length;++Bs){if(Cr.value[Bs].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Cr.value[Bs].type}`);Gr.setVariable(Cr.value[Bs].value,as.value[Bs])}}}else throw new Error(`Invalid loop variable(s): ${j.loopvar.type}`);de&&(hr(kt),!this.evaluate(de,kt).__bool__().value)||(et.push(Ct),ot.push(hr))}let ct="",Ft=!0;for(let Tt=0;Tt<et.length;++Tt){const kt=new Map([["index",new Be(Tt+1)],["index0",new Be(Tt)],["revindex",new Be(et.length-Tt)],["revindex0",new Be(et.length-Tt-1)],["first",new Fe(Tt===0)],["last",new Fe(Tt===et.length-1)],["length",new Be(et.length)],["previtem",Tt>0?et[Tt-1]:new Ue],["nextitem",Tt<et.length-1?et[Tt+1]:new Ue]]);Q.setVariable("loop",new Re(kt)),ot[Tt](Q);const Ct=this.evaluateBlock(j.body,Q);ct+=Ct.value,Ft=!1}if(Ft){const Tt=this.evaluateBlock(j.defaultBlock,Q);ct+=Tt.value}return new le(ct)}evaluateMacro(j,ae){return ae.setVariable(j.name.value,new Ye((Q,de)=>{var ot;const Oe=new it(de);Q=Q.slice();let et;((ot=Q.at(-1))==null?void 0:ot.type)==="KeywordArgumentsValue"&&(et=Q.pop());for(let ct=0;ct<j.args.length;++ct){const Ft=j.args[ct],Tt=Q[ct];if(Ft.type==="Identifier"){const kt=Ft;if(!Tt)throw new Error(`Missing positional argument: ${kt.value}`);Oe.setVariable(kt.value,Tt)}else if(Ft.type==="KeywordArgumentExpression"){const kt=Ft,Ct=Tt??(et==null?void 0:et.value.get(kt.key.value))??this.evaluate(kt.value,Oe);Oe.setVariable(kt.key.value,Ct)}else throw new Error(`Unknown argument type: ${Ft.type}`)}return this.evaluateBlock(j.body,Oe)})),new Qe}evaluate(j,ae){if(j===void 0)return new Ue;switch(j.type){case"Program":return this.evalProgram(j,ae);case"Set":return this.evaluateSet(j,ae);case"If":return this.evaluateIf(j,ae);case"For":return this.evaluateFor(j,ae);case"Macro":return this.evaluateMacro(j,ae);case"NumericLiteral":return new Be(Number(j.value));case"StringLiteral":return new le(j.value);case"BooleanLiteral":return new Fe(j.value);case"NullLiteral":return new Qe(j.value);case"ArrayLiteral":return new Ae(j.value.map(Q=>this.evaluate(Q,ae)));case"TupleLiteral":return new Ze(j.value.map(Q=>this.evaluate(Q,ae)));case"ObjectLiteral":{const Q=new Map;for(const[de,Oe]of j.value){const et=this.evaluate(de,ae);if(!(et instanceof le))throw new Error(`Object keys must be strings: got ${et.type}`);Q.set(et.value,this.evaluate(Oe,ae))}return new Re(Q)}case"Identifier":return this.evaluateIdentifier(j,ae);case"CallExpression":return this.evaluateCallExpression(j,ae);case"MemberExpression":return this.evaluateMemberExpression(j,ae);case"UnaryExpression":return this.evaluateUnaryExpression(j,ae);case"BinaryExpression":return this.evaluateBinaryExpression(j,ae);case"FilterExpression":return this.evaluateFilterExpression(j,ae);case"TestExpression":return this.evaluateTestExpression(j,ae);default:throw new SyntaxError(`Unknown node type: ${j.type}`)}}};function _t(j){switch(typeof j){case"number":return new Be(j);case"string":return new le(j);case"boolean":return new Fe(j);case"undefined":return new Ue;case"object":return j===null?new Qe:Array.isArray(j)?new Ae(j.map(_t)):new Re(new Map(Object.entries(j).map(([ae,Q])=>[ae,_t(Q)])));case"function":return new Ye((ae,Q)=>{const de=j(...ae.map(Oe=>Oe.value))??null;return _t(de)});default:throw new Error(`Cannot convert to runtime value: ${j}`)}}function ht(j,ae,Q){const de=Q??0;switch(j.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(j.value);case"ArrayValue":case"ObjectValue":{const Oe=ae?" ".repeat(ae):"",et=`
`+Oe.repeat(de),ot=et+Oe;if(j.type==="ArrayValue"){const ct=j.value.map(Ft=>ht(Ft,ae,de+1));return ae?`[${ot}${ct.join(`,${ot}`)}${et}]`:`[${ct.join(", ")}]`}else{const ct=Array.from(j.value.entries()).map(([Ft,Tt])=>{const kt=`"${Ft}": ${ht(Tt,ae,de+1)}`;return ae?`${ot}${kt}`:kt});return ae?`{${ct.join(",")}${et}}`:`{${ct.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${j.type}`)}}var gt=class{constructor(j){Te(this,"parsed");const ae=k(j,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=$e(ae)}render(j){const ae=new it;ae.set("false",!1),ae.set("true",!0),ae.set("raise_exception",Oe=>{throw new Error(Oe)}),ae.set("range",We);for(const[Oe,et]of Object.entries(j))ae.set(Oe,et);return new ut(ae).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(t,s,n)=>{n.r(s),n.d(s,{registerBackend:()=>h,resolveBackendAndExecutionProviders:()=>P});const o=new Map,u=[],h=(f,b,x)=>{if(b&&typeof b.init=="function"&&typeof b.createInferenceSessionHandler=="function"){const k=o.get(f);if(k===void 0)o.set(f,{backend:b,priority:x});else{if(k.priority>x)return;if(k.priority===x&&k.backend!==b)throw new Error(`cannot register backend "${f}" using priority ${x}`)}if(x>=0){const C=u.indexOf(f);C!==-1&&u.splice(C,1);for(let N=0;N<u.length;N++)if(o.get(u[N]).priority<=x){u.splice(N,0,f);return}u.push(f)}return}throw new TypeError("not a valid backend")},v=async f=>{const b=o.get(f);if(!b)return"backend not found.";if(b.initialized)return b.backend;if(b.aborted)return b.error;{const x=!!b.initPromise;try{return x||(b.initPromise=b.backend.init(f)),await b.initPromise,b.initialized=!0,b.backend}catch(k){return x||(b.error=`${k}`,b.aborted=!0),b.error}finally{delete b.initPromise}}},P=async f=>{const b=f.executionProviders||[],x=b.map(re=>typeof re=="string"?re:re.name),k=x.length===0?u:x;let C;const N=[],X=new Set;for(const re of k){const V=await v(re);typeof V=="string"?N.push({name:re,err:V}):(C||(C=V),C===V&&X.add(re))}if(!C)throw new Error(`no available backend found. ERR: ${N.map(re=>`[${re.name}] ${re.err}`).join(", ")}`);for(const{name:re,err:V}of N)x.includes(re)&&console.warn(`removing requested execution provider "${re}" from session options because it is not available: ${V}`);const oe=b.filter(re=>X.has(typeof re=="string"?re:re.name));return[C,new Proxy(f,{get:(re,V)=>V==="executionProviders"?oe:Reflect.get(re,V)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(t,s,n)=>{n.r(s),n.d(s,{registerBackend:()=>o.registerBackend});var o=n("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(t,s,n)=>{n.r(s),n.d(s,{env:()=>h});var o=n("./node_modules/onnxruntime-common/dist/esm/version.js");let u="warning";const h={wasm:{},webgl:{},webgpu:{},versions:{common:o.version},set logLevel(v){if(v!==void 0){if(typeof v!="string"||["verbose","info","warning","error","fatal"].indexOf(v)===-1)throw new Error(`Unsupported logging level: ${v}`);u=v}},get logLevel(){return u}};Object.defineProperty(h,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(t,s,n)=>{n.r(s),n.d(s,{env:()=>u});var o=n("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const u=o.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(t,s,n)=>{n.r(s),n.d(s,{InferenceSession:()=>h.InferenceSession,TRACE:()=>P.TRACE,TRACE_FUNC_BEGIN:()=>P.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>P.TRACE_FUNC_END,Tensor:()=>v.Tensor,TrainingSession:()=>f.TrainingSession,env:()=>u.env,registerBackend:()=>o.registerBackend});var o=n("./node_modules/onnxruntime-common/dist/esm/backend.js"),u=n("./node_modules/onnxruntime-common/dist/esm/env.js"),h=n("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),v=n("./node_modules/onnxruntime-common/dist/esm/tensor.js");n("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),n("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var P=n("./node_modules/onnxruntime-common/dist/esm/trace.js");n("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),n("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var f=n("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(t,s,n)=>{n.r(s),n.d(s,{InferenceSession:()=>v});var o=n("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),u=n("./node_modules/onnxruntime-common/dist/esm/tensor.js"),h=n("./node_modules/onnxruntime-common/dist/esm/trace.js");class v{constructor(f){this.handler=f}async run(f,b,x){(0,h.TRACE_FUNC_BEGIN)();const k={};let C={};if(typeof f!="object"||f===null||f instanceof u.Tensor||Array.isArray(f))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let N=!0;if(typeof b=="object"){if(b===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(b instanceof u.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(b)){if(b.length===0)throw new TypeError("'fetches' cannot be an empty array.");N=!1;for(const re of b){if(typeof re!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(re)===-1)throw new RangeError(`'fetches' contains invalid output name: ${re}.`);k[re]=null}if(typeof x=="object"&&x!==null)C=x;else if(typeof x<"u")throw new TypeError("'options' must be an object.")}else{let re=!1;const V=Object.getOwnPropertyNames(b);for(const H of this.outputNames)if(V.indexOf(H)!==-1){const te=b[H];(te===null||te instanceof u.Tensor)&&(re=!0,N=!1,k[H]=te)}if(re){if(typeof x=="object"&&x!==null)C=x;else if(typeof x<"u")throw new TypeError("'options' must be an object.")}else C=b}}else if(typeof b<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const re of this.inputNames)if(typeof f[re]>"u")throw new Error(`input '${re}' is missing in 'feeds'.`);if(N)for(const re of this.outputNames)k[re]=null;const X=await this.handler.run(f,k,C),oe={};for(const re in X)if(Object.hasOwnProperty.call(X,re)){const V=X[re];V instanceof u.Tensor?oe[re]=V:oe[re]=new u.Tensor(V.type,V.data,V.dims)}return(0,h.TRACE_FUNC_END)(),oe}async release(){return this.handler.dispose()}static async create(f,b,x,k){(0,h.TRACE_FUNC_BEGIN)();let C,N={};if(typeof f=="string"){if(C=f,typeof b=="object"&&b!==null)N=b;else if(typeof b<"u")throw new TypeError("'options' must be an object.")}else if(f instanceof Uint8Array){if(C=f,typeof b=="object"&&b!==null)N=b;else if(typeof b<"u")throw new TypeError("'options' must be an object.")}else if(f instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&f instanceof SharedArrayBuffer){const V=f;let H=0,te=f.byteLength;if(typeof b=="object"&&b!==null)N=b;else if(typeof b=="number"){if(H=b,!Number.isSafeInteger(H))throw new RangeError("'byteOffset' must be an integer.");if(H<0||H>=V.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${V.byteLength}).`);if(te=f.byteLength-H,typeof x=="number"){if(te=x,!Number.isSafeInteger(te))throw new RangeError("'byteLength' must be an integer.");if(te<=0||H+te>V.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${V.byteLength-H}].`);if(typeof k=="object"&&k!==null)N=k;else if(typeof k<"u")throw new TypeError("'options' must be an object.")}else if(typeof x<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof b<"u")throw new TypeError("'options' must be an object.");C=new Uint8Array(V,H,te)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[X,oe]=await(0,o.resolveBackendAndExecutionProviders)(N),re=await X.createInferenceSessionHandler(C,oe);return(0,h.TRACE_FUNC_END)(),new v(re)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(t,s,n)=>{n.r(s),n.d(s,{InferenceSession:()=>u});var o=n("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const u=o.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(t,s,n)=>{n.r(s)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(t,s,n)=>{n.r(s)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(t,s,n)=>{n.r(s),n.d(s,{tensorToDataURL:()=>o,tensorToImageData:()=>u});const o=(h,v)=>{const P=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);P.width=h.dims[3],P.height=h.dims[2];const f=P.getContext("2d");if(f!=null){let b,x;(v==null?void 0:v.tensorLayout)!==void 0&&v.tensorLayout==="NHWC"?(b=h.dims[2],x=h.dims[3]):(b=h.dims[3],x=h.dims[2]);const k=(v==null?void 0:v.format)!==void 0?v.format:"RGB",C=v==null?void 0:v.norm;let N,X;C===void 0||C.mean===void 0?N=[255,255,255,255]:typeof C.mean=="number"?N=[C.mean,C.mean,C.mean,C.mean]:(N=[C.mean[0],C.mean[1],C.mean[2],0],C.mean[3]!==void 0&&(N[3]=C.mean[3])),C===void 0||C.bias===void 0?X=[0,0,0,0]:typeof C.bias=="number"?X=[C.bias,C.bias,C.bias,C.bias]:(X=[C.bias[0],C.bias[1],C.bias[2],0],C.bias[3]!==void 0&&(X[3]=C.bias[3]));const oe=x*b;let re=0,V=oe,H=oe*2,te=-1;k==="RGBA"?(re=0,V=oe,H=oe*2,te=oe*3):k==="RGB"?(re=0,V=oe,H=oe*2):k==="RBG"&&(re=0,H=oe,V=oe*2);for(let G=0;G<x;G++)for(let D=0;D<b;D++){const E=(h.data[re++]-X[0])*N[0],L=(h.data[V++]-X[1])*N[1],S=(h.data[H++]-X[2])*N[2],se=te===-1?255:(h.data[te++]-X[3])*N[3];f.fillStyle="rgba("+E+","+L+","+S+","+se+")",f.fillRect(D,G,1,1)}if("toDataURL"in P)return P.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},u=(h,v)=>{const P=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let f;if(P!=null){let b,x,k;(v==null?void 0:v.tensorLayout)!==void 0&&v.tensorLayout==="NHWC"?(b=h.dims[2],x=h.dims[1],k=h.dims[3]):(b=h.dims[3],x=h.dims[2],k=h.dims[1]);const C=v!==void 0&&v.format!==void 0?v.format:"RGB",N=v==null?void 0:v.norm;let X,oe;N===void 0||N.mean===void 0?X=[255,255,255,255]:typeof N.mean=="number"?X=[N.mean,N.mean,N.mean,N.mean]:(X=[N.mean[0],N.mean[1],N.mean[2],255],N.mean[3]!==void 0&&(X[3]=N.mean[3])),N===void 0||N.bias===void 0?oe=[0,0,0,0]:typeof N.bias=="number"?oe=[N.bias,N.bias,N.bias,N.bias]:(oe=[N.bias[0],N.bias[1],N.bias[2],0],N.bias[3]!==void 0&&(oe[3]=N.bias[3]));const re=x*b;if(v!==void 0&&(v.format!==void 0&&k===4&&v.format!=="RGBA"||k===3&&v.format!=="RGB"&&v.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const V=4;let H=0,te=1,G=2,D=3,E=0,L=re,S=re*2,se=-1;C==="RGBA"?(E=0,L=re,S=re*2,se=re*3):C==="RGB"?(E=0,L=re,S=re*2):C==="RBG"&&(E=0,S=re,L=re*2),f=P.createImageData(b,x);for(let ee=0;ee<x*b;H+=V,te+=V,G+=V,D+=V,ee++)f.data[H]=(h.data[E++]-oe[0])*X[0],f.data[te]=(h.data[L++]-oe[1])*X[1],f.data[G]=(h.data[S++]-oe[2])*X[2],f.data[D]=se===-1?255:(h.data[se++]-oe[3])*X[3]}else throw new Error("Can not access image data");return f}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(t,s,n)=>{n.r(s)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(t,s,n)=>{n.r(s),n.d(s,{bufferToTensor:()=>u,tensorFromGpuBuffer:()=>P,tensorFromImage:()=>h,tensorFromMLTensor:()=>f,tensorFromPinnedBuffer:()=>b,tensorFromTexture:()=>v});var o=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const u=(x,k)=>{if(x===void 0)throw new Error("Image buffer must be defined");if(k.height===void 0||k.width===void 0)throw new Error("Image height and width must be defined");if(k.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:C,width:N}=k,X=k.norm??{mean:255,bias:0};let oe,re;typeof X.mean=="number"?oe=[X.mean,X.mean,X.mean,X.mean]:oe=[X.mean[0],X.mean[1],X.mean[2],X.mean[3]??255],typeof X.bias=="number"?re=[X.bias,X.bias,X.bias,X.bias]:re=[X.bias[0],X.bias[1],X.bias[2],X.bias[3]??0];const V=k.format!==void 0?k.format:"RGBA",H=k.tensorFormat!==void 0&&k.tensorFormat!==void 0?k.tensorFormat:"RGB",te=C*N,G=H==="RGBA"?new Float32Array(te*4):new Float32Array(te*3);let D=4,E=0,L=1,S=2,se=3,ee=0,pe=te,he=te*2,be=-1;V==="RGB"&&(D=3,E=0,L=1,S=2,se=-1),H==="RGBA"?be=te*3:H==="RBG"?(ee=0,he=te,pe=te*2):H==="BGR"&&(he=0,pe=te,ee=te*2);for(let ke=0;ke<te;ke++,E+=D,S+=D,L+=D,se+=D)G[ee++]=(x[E]+re[0])/oe[0],G[pe++]=(x[L]+re[1])/oe[1],G[he++]=(x[S]+re[2])/oe[2],be!==-1&&se!==-1&&(G[be++]=(x[se]+re[3])/oe[3]);return H==="RGBA"?new o.Tensor("float32",G,[1,4,C,N]):new o.Tensor("float32",G,[1,3,C,N])},h=async(x,k)=>{const C=typeof HTMLImageElement<"u"&&x instanceof HTMLImageElement,N=typeof ImageData<"u"&&x instanceof ImageData,X=typeof ImageBitmap<"u"&&x instanceof ImageBitmap,oe=typeof x=="string";let re,V=k??{};const H=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},te=G=>typeof HTMLCanvasElement<"u"&&G instanceof HTMLCanvasElement||G instanceof OffscreenCanvas?G.getContext("2d"):null;if(C){const G=H();G.width=x.width,G.height=x.height;const D=te(G);if(D!=null){let E=x.height,L=x.width;if(k!==void 0&&k.resizedHeight!==void 0&&k.resizedWidth!==void 0&&(E=k.resizedHeight,L=k.resizedWidth),k!==void 0){if(V=k,k.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");V.tensorFormat="RGBA",V.height=E,V.width=L}else V.tensorFormat="RGBA",V.height=E,V.width=L;D.drawImage(x,0,0),re=D.getImageData(0,0,L,E).data}else throw new Error("Can not access image data")}else if(N){let G,D;if(k!==void 0&&k.resizedWidth!==void 0&&k.resizedHeight!==void 0?(G=k.resizedHeight,D=k.resizedWidth):(G=x.height,D=x.width),k!==void 0&&(V=k),V.format="RGBA",V.height=G,V.width=D,k!==void 0){const E=H();E.width=D,E.height=G;const L=te(E);if(L!=null)L.putImageData(x,0,0),re=L.getImageData(0,0,D,G).data;else throw new Error("Can not access image data")}else re=x.data}else if(X){if(k===void 0)throw new Error("Please provide image config with format for Imagebitmap");const G=H();G.width=x.width,G.height=x.height;const D=te(G);if(D!=null){const E=x.height,L=x.width;return D.drawImage(x,0,0,L,E),re=D.getImageData(0,0,L,E).data,V.height=E,V.width=L,u(re,V)}else throw new Error("Can not access image data")}else{if(oe)return new Promise((G,D)=>{const E=H(),L=te(E);if(!x||!L)return D();const S=new Image;S.crossOrigin="Anonymous",S.src=x,S.onload=()=>{E.width=S.width,E.height=S.height,L.drawImage(S,0,0,E.width,E.height);const se=L.getImageData(0,0,E.width,E.height);V.height=E.height,V.width=E.width,G(u(se.data,V))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(re!==void 0)return u(re,V);throw new Error("Input data provided is not supported - aborted tensor creation")},v=(x,k)=>{const{width:C,height:N,download:X,dispose:oe}=k,re=[1,N,C,4];return new o.Tensor({location:"texture",type:"float32",texture:x,dims:re,download:X,dispose:oe})},P=(x,k)=>{const{dataType:C,dims:N,download:X,dispose:oe}=k;return new o.Tensor({location:"gpu-buffer",type:C??"float32",gpuBuffer:x,dims:N,download:X,dispose:oe})},f=(x,k)=>{const{dataType:C,dims:N,download:X,dispose:oe}=k;return new o.Tensor({location:"ml-tensor",type:C??"float32",mlTensor:x,dims:N,download:X,dispose:oe})},b=(x,k,C)=>new o.Tensor({location:"cpu-pinned",type:x,data:k,dims:C??[k.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(t,s,n)=>{n.r(s)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(t,s,n)=>{n.r(s),n.d(s,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>u,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>o,checkTypedArray:()=>v});const o=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),u=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let h=!1;const v=()=>{if(!h){h=!0;const P=typeof BigInt64Array<"u"&&BigInt64Array.from,f=typeof BigUint64Array<"u"&&BigUint64Array.from,b=typeof Float16Array<"u"&&Float16Array.from;P&&(o.set("int64",BigInt64Array),u.set(BigInt64Array,"int64")),f&&(o.set("uint64",BigUint64Array),u.set(BigUint64Array,"uint64")),b?(o.set("float16",Float16Array),u.set(Float16Array,"float16")):o.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(t,s,n)=>{n.r(s),n.d(s,{Tensor:()=>P});var o=n("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),u=n("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),h=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),v=n("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class P{constructor(b,x,k){(0,h.checkTypedArray)();let C,N;if(typeof b=="object"&&"location"in b)switch(this.dataLocation=b.location,C=b.type,N=b.dims,b.location){case"cpu-pinned":{const oe=h.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(C);if(!oe)throw new TypeError(`unsupported type "${C}" to create tensor from pinned buffer`);if(!(b.data instanceof oe))throw new TypeError(`buffer should be of type ${oe.name}`);this.cpuData=b.data;break}case"texture":{if(C!=="float32")throw new TypeError(`unsupported type "${C}" to create tensor from texture`);this.gpuTextureData=b.texture,this.downloader=b.download,this.disposer=b.dispose;break}case"gpu-buffer":{if(C!=="float32"&&C!=="float16"&&C!=="int32"&&C!=="int64"&&C!=="uint32"&&C!=="uint8"&&C!=="bool"&&C!=="uint4"&&C!=="int4")throw new TypeError(`unsupported type "${C}" to create tensor from gpu buffer`);this.gpuBufferData=b.gpuBuffer,this.downloader=b.download,this.disposer=b.dispose;break}case"ml-tensor":{if(C!=="float32"&&C!=="float16"&&C!=="int32"&&C!=="int64"&&C!=="uint32"&&C!=="uint64"&&C!=="int8"&&C!=="uint8"&&C!=="bool")throw new TypeError(`unsupported type "${C}" to create tensor from MLTensor`);this.mlTensorData=b.mlTensor,this.downloader=b.download,this.disposer=b.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let oe,re;if(typeof b=="string")if(C=b,re=k,b==="string"){if(!Array.isArray(x))throw new TypeError("A string tensor's data must be a string array.");oe=x}else{const V=h.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(b);if(V===void 0)throw new TypeError(`Unsupported tensor type: ${b}.`);if(Array.isArray(x)){if(b==="float16"&&V===Uint16Array||b==="uint4"||b==="int4")throw new TypeError(`Creating a ${b} tensor from number array is not supported. Please use ${V.name} as data.`);b==="uint64"||b==="int64"?oe=V.from(x,BigInt):oe=V.from(x)}else if(x instanceof V)oe=x;else if(x instanceof Uint8ClampedArray)if(b==="uint8")oe=Uint8Array.from(x);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${C} tensor's data must be type of ${V}`)}else if(re=x,Array.isArray(b)){if(b.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const V=typeof b[0];if(V==="string")C="string",oe=b;else if(V==="boolean")C="bool",oe=Uint8Array.from(b);else throw new TypeError(`Invalid element type of data array: ${V}.`)}else if(b instanceof Uint8ClampedArray)C="uint8",oe=Uint8Array.from(b);else{const V=h.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(b.constructor);if(V===void 0)throw new TypeError(`Unsupported type for tensor data: ${b.constructor}.`);C=V,oe=b}if(re===void 0)re=[oe.length];else if(!Array.isArray(re))throw new TypeError("A tensor's dims must be a number array");N=re,this.cpuData=oe,this.dataLocation="cpu"}const X=(0,v.calculateSize)(N);if(this.cpuData&&X!==this.cpuData.length&&!((C==="uint4"||C==="int4")&&Math.ceil(X/2)===this.cpuData.length))throw new Error(`Tensor's size(${X}) does not match data length(${this.cpuData.length}).`);this.type=C,this.dims=N,this.size=X}static async fromImage(b,x){return(0,u.tensorFromImage)(b,x)}static fromTexture(b,x){return(0,u.tensorFromTexture)(b,x)}static fromGpuBuffer(b,x){return(0,u.tensorFromGpuBuffer)(b,x)}static fromMLTensor(b,x){return(0,u.tensorFromMLTensor)(b,x)}static fromPinnedBuffer(b,x,k){return(0,u.tensorFromPinnedBuffer)(b,x,k)}toDataURL(b){return(0,o.tensorToDataURL)(this,b)}toImageData(b){return(0,o.tensorToImageData)(this,b)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(b){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const x=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=x,b&&this.disposer&&(this.disposer(),this.disposer=void 0),x}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(b){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,v.tensorReshape)(this,b)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(t,s,n)=>{n.r(s),n.d(s,{calculateSize:()=>u,tensorReshape:()=>h});var o=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const u=v=>{let P=1;for(let f=0;f<v.length;f++){const b=v[f];if(typeof b!="number"||!Number.isSafeInteger(b))throw new TypeError(`dims[${f}] must be an integer, got: ${b}`);if(b<0)throw new RangeError(`dims[${f}] must be a non-negative integer, got: ${b}`);P*=b}return P},h=(v,P)=>{switch(v.location){case"cpu":return new o.Tensor(v.type,v.data,P);case"cpu-pinned":return new o.Tensor({location:"cpu-pinned",data:v.data,type:v.type,dims:P});case"texture":return new o.Tensor({location:"texture",texture:v.texture,type:v.type,dims:P});case"gpu-buffer":return new o.Tensor({location:"gpu-buffer",gpuBuffer:v.gpuBuffer,type:v.type,dims:P});case"ml-tensor":return new o.Tensor({location:"ml-tensor",mlTensor:v.mlTensor,type:v.type,dims:P});default:throw new Error(`tensorReshape: tensor location ${v.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(t,s,n)=>{n.r(s),n.d(s,{Tensor:()=>u});var o=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const u=o.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(t,s,n)=>{n.r(s),n.d(s,{TRACE:()=>u,TRACE_FUNC_BEGIN:()=>v,TRACE_FUNC_END:()=>P});var o=n("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const u=(f,b)=>{(typeof o.env.trace>"u"?!o.env.wasm.trace:!o.env.trace)||console.timeStamp(`${f}::ORT::${b}`)},h=(f,b)=>{var C;const x=((C=new Error().stack)==null?void 0:C.split(/\r\n|\r|\n/g))||[];let k=!1;for(let N=0;N<x.length;N++){if(k&&!x[N].includes("TRACE_FUNC")){let X=`FUNC_${f}::${x[N].trim().split(" ")[1]}`;b&&(X+=`::${b}`),u("CPU",X);return}x[N].includes("TRACE_FUNC")&&(k=!0)}},v=f=>{(typeof o.env.trace>"u"?!o.env.wasm.trace:!o.env.trace)||h("BEGIN",f)},P=f=>{(typeof o.env.trace>"u"?!o.env.wasm.trace:!o.env.trace)||h("END",f)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(t,s,n)=>{n.r(s),n.d(s,{TrainingSession:()=>v});var o=n("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),u=n("./node_modules/onnxruntime-common/dist/esm/tensor.js");const h="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class v{constructor(f,b,x){this.handler=f,this.hasOptimizerModel=b,this.hasEvalModel=x}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(f,b){const x=f.evalModel||"",k=f.optimizerModel||"",C=b||{},[N,X]=await(0,o.resolveBackendAndExecutionProviders)(C);if(N.createTrainingSessionHandler){const oe=await N.createTrainingSessionHandler(f.checkpointState,f.trainModel,x,k,X);return new v(oe,!!f.optimizerModel,!!f.evalModel)}else throw new Error(h)}typeNarrowingForRunStep(f,b,x,k,C){const N={};let X={};if(typeof x!="object"||x===null||x instanceof u.Tensor||Array.isArray(x))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let oe=!0;if(typeof k=="object"){if(k===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(k instanceof u.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(k)){if(k.length===0)throw new TypeError("'fetches' cannot be an empty array.");oe=!1;for(const re of k){if(typeof re!="string")throw new TypeError("'fetches' must be a string array or an object.");if(b.indexOf(re)===-1)throw new RangeError(`'fetches' contains invalid output name: ${re}.`);N[re]=null}if(typeof C=="object"&&C!==null)X=C;else if(typeof C<"u")throw new TypeError("'options' must be an object.")}else{let re=!1;const V=Object.getOwnPropertyNames(k);for(const H of b)if(V.indexOf(H)!==-1){const te=k[H];(te===null||te instanceof u.Tensor)&&(re=!0,oe=!1,N[H]=te)}if(re){if(typeof C=="object"&&C!==null)X=C;else if(typeof C<"u")throw new TypeError("'options' must be an object.")}else X=k}}else if(typeof k<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const re of f)if(typeof x[re]>"u")throw new Error(`input '${re}' is missing in 'feeds'.`);if(oe)for(const re of b)N[re]=null;return[N,X]}convertHandlerReturnTypeToMapOfTensors(f){const b={};for(const x in f)if(Object.hasOwnProperty.call(f,x)){const k=f[x];k instanceof u.Tensor?b[x]=k:b[x]=new u.Tensor(k.type,k.data,k.dims)}return b}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(f,b,x){const[k,C]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,f,b,x),N=await this.handler.runTrainStep(f,k,C);return this.convertHandlerReturnTypeToMapOfTensors(N)}async runOptimizerStep(f){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(f||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(f,b,x){if(this.hasEvalModel){const[k,C]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,f,b,x),N=await this.handler.runEvalStep(f,k,C);return this.convertHandlerReturnTypeToMapOfTensors(N)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(f=!0){return this.handler.getParametersSize(f)}async loadParametersBuffer(f,b=!0){const x=await this.getParametersSize(b);if(f.length!==4*x)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(f,b)}async getContiguousParameters(f=!0){return this.handler.getContiguousParameters(f)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(t,s,n)=>{n.r(s),n.d(s,{TrainingSession:()=>u});var o=n("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const u=o.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(t,s,n)=>{n.r(s),n.d(s,{version:()=>o});const o="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs":(t,s,n)=>{n.r(s),n.d(s,{InferenceSession:()=>ht,TRACE:()=>Ze,TRACE_FUNC_BEGIN:()=>Qe,TRACE_FUNC_END:()=>Ue,Tensor:()=>ye,TrainingSession:()=>ct,default:()=>Xv,env:()=>S,registerBackend:()=>X});/*!
 * ONNX Runtime Web v1.20.1
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var o=Object.defineProperty,u=Object.getOwnPropertyDescriptor,h=Object.getOwnPropertyNames,v=Object.prototype.hasOwnProperty,P=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,i)=>(typeof require<"u"?require:r)[i]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),f=(e,r)=>()=>(e&&(r=e(e=0)),r),b=(e,r)=>{for(var i in r)o(e,i,{get:r[i],enumerable:!0})},x=(e,r,i,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let l of h(r))!v.call(e,l)&&l!==i&&o(e,l,{get:()=>r[l],enumerable:!(a=u(r,l))||a.enumerable});return e},k=e=>x(o({},"__esModule",{value:!0}),e),C,N,X,oe,re,V=f(()=>{C=new Map,N=[],X=(e,r,i)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let a=C.get(e);if(a===void 0)C.set(e,{backend:r,priority:i});else{if(a.priority>i)return;if(a.priority===i&&a.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${i}`)}if(i>=0){let l=N.indexOf(e);l!==-1&&N.splice(l,1);for(let d=0;d<N.length;d++)if(C.get(N[d]).priority<=i){N.splice(d,0,e);return}N.push(e)}return}throw new TypeError("not a valid backend")},oe=async e=>{let r=C.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let i=!!r.initPromise;try{return i||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(a){return i||(r.error=`${a}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},re=async e=>{let r=e.executionProviders||[],i=r.map(y=>typeof y=="string"?y:y.name),a=i.length===0?N:i,l,d=[],c=new Set;for(let y of a){let w=await oe(y);typeof w=="string"?d.push({name:y,err:w}):(l||(l=w),l===w&&c.add(y))}if(!l)throw new Error(`no available backend found. ERR: ${d.map(y=>`[${y.name}] ${y.err}`).join(", ")}`);for(let{name:y,err:w}of d)i.includes(y)&&console.warn(`removing requested execution provider "${y}" from session options because it is not available: ${w}`);let g=r.filter(y=>c.has(typeof y=="string"?y:y.name));return[l,new Proxy(e,{get:(y,w)=>w==="executionProviders"?g:Reflect.get(y,w)})]}}),H=f(()=>{V()}),te,G=f(()=>{te="1.20.1"}),D,E,L=f(()=>{G(),D="warning",E={wasm:{},webgl:{},webgpu:{},versions:{common:te},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);D=e}},get logLevel(){return D}},Object.defineProperty(E,"logLevel",{enumerable:!0})}),S,se=f(()=>{L(),S=E}),ee,pe,he=f(()=>{ee=(e,r)=>{let i=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);i.width=e.dims[3],i.height=e.dims[2];let a=i.getContext("2d");if(a!=null){let l,d;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(l=e.dims[2],d=e.dims[3]):(l=e.dims[3],d=e.dims[2]);let c=(r==null?void 0:r.format)!==void 0?r.format:"RGB",g=r==null?void 0:r.norm,y,w;g===void 0||g.mean===void 0?y=[255,255,255,255]:typeof g.mean=="number"?y=[g.mean,g.mean,g.mean,g.mean]:(y=[g.mean[0],g.mean[1],g.mean[2],0],g.mean[3]!==void 0&&(y[3]=g.mean[3])),g===void 0||g.bias===void 0?w=[0,0,0,0]:typeof g.bias=="number"?w=[g.bias,g.bias,g.bias,g.bias]:(w=[g.bias[0],g.bias[1],g.bias[2],0],g.bias[3]!==void 0&&(w[3]=g.bias[3]));let F=d*l,$=0,m=F,R=F*2,W=-1;c==="RGBA"?($=0,m=F,R=F*2,W=F*3):c==="RGB"?($=0,m=F,R=F*2):c==="RBG"&&($=0,R=F,m=F*2);for(let q=0;q<d;q++)for(let ne=0;ne<l;ne++){let ie=(e.data[$++]-w[0])*y[0],Z=(e.data[m++]-w[1])*y[1],_e=(e.data[R++]-w[2])*y[2],ue=W===-1?255:(e.data[W++]-w[3])*y[3];a.fillStyle="rgba("+ie+","+Z+","+_e+","+ue+")",a.fillRect(ne,q,1,1)}if("toDataURL"in i)return i.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},pe=(e,r)=>{let i=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),a;if(i!=null){let l,d,c;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(l=e.dims[2],d=e.dims[1],c=e.dims[3]):(l=e.dims[3],d=e.dims[2],c=e.dims[1]);let g=r!==void 0&&r.format!==void 0?r.format:"RGB",y=r==null?void 0:r.norm,w,F;y===void 0||y.mean===void 0?w=[255,255,255,255]:typeof y.mean=="number"?w=[y.mean,y.mean,y.mean,y.mean]:(w=[y.mean[0],y.mean[1],y.mean[2],255],y.mean[3]!==void 0&&(w[3]=y.mean[3])),y===void 0||y.bias===void 0?F=[0,0,0,0]:typeof y.bias=="number"?F=[y.bias,y.bias,y.bias,y.bias]:(F=[y.bias[0],y.bias[1],y.bias[2],0],y.bias[3]!==void 0&&(F[3]=y.bias[3]));let $=d*l;if(r!==void 0&&(r.format!==void 0&&c===4&&r.format!=="RGBA"||c===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let m=4,R=0,W=1,q=2,ne=3,ie=0,Z=$,_e=$*2,ue=-1;g==="RGBA"?(ie=0,Z=$,_e=$*2,ue=$*3):g==="RGB"?(ie=0,Z=$,_e=$*2):g==="RBG"&&(ie=0,_e=$,Z=$*2),a=i.createImageData(l,d);for(let we=0;we<d*l;R+=m,W+=m,q+=m,ne+=m,we++)a.data[R]=(e.data[ie++]-F[0])*w[0],a.data[W]=(e.data[Z++]-F[1])*w[1],a.data[q]=(e.data[_e++]-F[2])*w[2],a.data[ne]=ue===-1?255:(e.data[ue++]-F[3])*w[3]}else throw new Error("Can not access image data");return a}}),be,Ce,ke,je,fe,K,me=f(()=>{Re(),be=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:i,width:a}=r,l=r.norm??{mean:255,bias:0},d,c;typeof l.mean=="number"?d=[l.mean,l.mean,l.mean,l.mean]:d=[l.mean[0],l.mean[1],l.mean[2],l.mean[3]??255],typeof l.bias=="number"?c=[l.bias,l.bias,l.bias,l.bias]:c=[l.bias[0],l.bias[1],l.bias[2],l.bias[3]??0];let g=r.format!==void 0?r.format:"RGBA",y=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",w=i*a,F=y==="RGBA"?new Float32Array(w*4):new Float32Array(w*3),$=4,m=0,R=1,W=2,q=3,ne=0,ie=w,Z=w*2,_e=-1;g==="RGB"&&($=3,m=0,R=1,W=2,q=-1),y==="RGBA"?_e=w*3:y==="RBG"?(ne=0,Z=w,ie=w*2):y==="BGR"&&(Z=0,ie=w,ne=w*2);for(let ue=0;ue<w;ue++,m+=$,W+=$,R+=$,q+=$)F[ne++]=(e[m]+c[0])/d[0],F[ie++]=(e[R]+c[1])/d[1],F[Z++]=(e[W]+c[2])/d[2],_e!==-1&&q!==-1&&(F[_e++]=(e[q]+c[3])/d[3]);return y==="RGBA"?new Fe("float32",F,[1,4,i,a]):new Fe("float32",F,[1,3,i,a])},Ce=async(e,r)=>{let i=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,a=typeof ImageData<"u"&&e instanceof ImageData,l=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,d=typeof e=="string",c,g=r??{},y=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},w=F=>typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||F instanceof OffscreenCanvas?F.getContext("2d"):null;if(i){let F=y();F.width=e.width,F.height=e.height;let $=w(F);if($!=null){let m=e.height,R=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(m=r.resizedHeight,R=r.resizedWidth),r!==void 0){if(g=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");g.tensorFormat="RGBA",g.height=m,g.width=R}else g.tensorFormat="RGBA",g.height=m,g.width=R;$.drawImage(e,0,0),c=$.getImageData(0,0,R,m).data}else throw new Error("Can not access image data")}else if(a){let F,$;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(F=r.resizedHeight,$=r.resizedWidth):(F=e.height,$=e.width),r!==void 0&&(g=r),g.format="RGBA",g.height=F,g.width=$,r!==void 0){let m=y();m.width=$,m.height=F;let R=w(m);if(R!=null)R.putImageData(e,0,0),c=R.getImageData(0,0,$,F).data;else throw new Error("Can not access image data")}else c=e.data}else if(l){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let F=y();F.width=e.width,F.height=e.height;let $=w(F);if($!=null){let m=e.height,R=e.width;return $.drawImage(e,0,0,R,m),c=$.getImageData(0,0,R,m).data,g.height=m,g.width=R,be(c,g)}else throw new Error("Can not access image data")}else{if(d)return new Promise((F,$)=>{let m=y(),R=w(m);if(!e||!R)return $();let W=new Image;W.crossOrigin="Anonymous",W.src=e,W.onload=()=>{m.width=W.width,m.height=W.height,R.drawImage(W,0,0,m.width,m.height);let q=R.getImageData(0,0,m.width,m.height);g.height=m.height,g.width=m.width,F(be(q.data,g))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(c!==void 0)return be(c,g);throw new Error("Input data provided is not supported - aborted tensor creation")},ke=(e,r)=>{let{width:i,height:a,download:l,dispose:d}=r,c=[1,a,i,4];return new Fe({location:"texture",type:"float32",texture:e,dims:c,download:l,dispose:d})},je=(e,r)=>{let{dataType:i,dims:a,download:l,dispose:d}=r;return new Fe({location:"gpu-buffer",type:i??"float32",gpuBuffer:e,dims:a,download:l,dispose:d})},fe=(e,r)=>{let{dataType:i,dims:a,download:l,dispose:d}=r;return new Fe({location:"ml-tensor",type:i??"float32",mlTensor:e,dims:a,download:l,dispose:d})},K=(e,r,i)=>new Fe({location:"cpu-pinned",type:e,data:r,dims:i??[r.length]})}),ge,$e,We,Se,Ne=f(()=>{ge=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),$e=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),We=!1,Se=()=>{if(!We){We=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,i=typeof Float16Array<"u"&&Float16Array.from;e&&(ge.set("int64",BigInt64Array),$e.set(BigInt64Array,"int64")),r&&(ge.set("uint64",BigUint64Array),$e.set(BigUint64Array,"uint64")),i?(ge.set("float16",Float16Array),$e.set(Float16Array,"float16")):ge.set("float16",Uint16Array)}}}),He,Be,le=f(()=>{Re(),He=e=>{let r=1;for(let i=0;i<e.length;i++){let a=e[i];if(typeof a!="number"||!Number.isSafeInteger(a))throw new TypeError(`dims[${i}] must be an integer, got: ${a}`);if(a<0)throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${a}`);r*=a}return r},Be=(e,r)=>{switch(e.location){case"cpu":return new Fe(e.type,e.data,r);case"cpu-pinned":return new Fe({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Fe({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Fe({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Fe({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Fe,Re=f(()=>{he(),me(),Ne(),le(),Fe=class{constructor(e,r,i){Se();let a,l;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,a=e.type,l=e.dims,e.location){case"cpu-pinned":{let c=ge.get(a);if(!c)throw new TypeError(`unsupported type "${a}" to create tensor from pinned buffer`);if(!(e.data instanceof c))throw new TypeError(`buffer should be of type ${c.name}`);this.cpuData=e.data;break}case"texture":{if(a!=="float32")throw new TypeError(`unsupported type "${a}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(a!=="float32"&&a!=="float16"&&a!=="int32"&&a!=="int64"&&a!=="uint32"&&a!=="uint8"&&a!=="bool"&&a!=="uint4"&&a!=="int4")throw new TypeError(`unsupported type "${a}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(a!=="float32"&&a!=="float16"&&a!=="int32"&&a!=="int64"&&a!=="uint32"&&a!=="uint64"&&a!=="int8"&&a!=="uint8"&&a!=="bool")throw new TypeError(`unsupported type "${a}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let c,g;if(typeof e=="string")if(a=e,g=i,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");c=r}else{let y=ge.get(e);if(y===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&y===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${y.name} as data.`);e==="uint64"||e==="int64"?c=y.from(r,BigInt):c=y.from(r)}else if(r instanceof y)c=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")c=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${a} tensor's data must be type of ${y}`)}else if(g=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let y=typeof e[0];if(y==="string")a="string",c=e;else if(y==="boolean")a="bool",c=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${y}.`)}else if(e instanceof Uint8ClampedArray)a="uint8",c=Uint8Array.from(e);else{let y=$e.get(e.constructor);if(y===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);a=y,c=e}if(g===void 0)g=[c.length];else if(!Array.isArray(g))throw new TypeError("A tensor's dims must be a number array");l=g,this.cpuData=c,this.dataLocation="cpu"}let d=He(l);if(this.cpuData&&d!==this.cpuData.length&&!((a==="uint4"||a==="int4")&&Math.ceil(d/2)===this.cpuData.length))throw new Error(`Tensor's size(${d}) does not match data length(${this.cpuData.length}).`);this.type=a,this.dims=l,this.size=d}static async fromImage(e,r){return Ce(e,r)}static fromTexture(e,r){return ke(e,r)}static fromGpuBuffer(e,r){return je(e,r)}static fromMLTensor(e,r){return fe(e,r)}static fromPinnedBuffer(e,r,i){return K(e,r,i)}toDataURL(e){return ee(this,e)}toImageData(e){return pe(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Be(this,e)}}}),ye,Ae=f(()=>{Re(),ye=Fe}),Ze,Ye,Qe,Ue,it=f(()=>{L(),Ze=(e,r)=>{(typeof E.trace>"u"?!E.wasm.trace:!E.trace)||console.timeStamp(`${e}::ORT::${r}`)},Ye=(e,r)=>{var l;let i=((l=new Error().stack)==null?void 0:l.split(/\r\n|\r|\n/g))||[],a=!1;for(let d=0;d<i.length;d++){if(a&&!i[d].includes("TRACE_FUNC")){let c=`FUNC_${e}::${i[d].trim().split(" ")[1]}`;r&&(c+=`::${r}`),Ze("CPU",c);return}i[d].includes("TRACE_FUNC")&&(a=!0)}},Qe=e=>{(typeof E.trace>"u"?!E.wasm.trace:!E.trace)||Ye("BEGIN",e)},Ue=e=>{(typeof E.trace>"u"?!E.wasm.trace:!E.trace)||Ye("END",e)}}),ut,_t=f(()=>{V(),Ae(),it(),ut=class Vv{constructor(r){this.handler=r}async run(r,i,a){Qe();let l={},d={};if(typeof r!="object"||r===null||r instanceof ye||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let c=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof ye)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");c=!1;for(let w of i){if(typeof w!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(w)===-1)throw new RangeError(`'fetches' contains invalid output name: ${w}.`);l[w]=null}if(typeof a=="object"&&a!==null)d=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else{let w=!1,F=Object.getOwnPropertyNames(i);for(let $ of this.outputNames)if(F.indexOf($)!==-1){let m=i[$];(m===null||m instanceof ye)&&(w=!0,c=!1,l[$]=m)}if(w){if(typeof a=="object"&&a!==null)d=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else d=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let w of this.inputNames)if(typeof r[w]>"u")throw new Error(`input '${w}' is missing in 'feeds'.`);if(c)for(let w of this.outputNames)l[w]=null;let g=await this.handler.run(r,l,d),y={};for(let w in g)if(Object.hasOwnProperty.call(g,w)){let F=g[w];F instanceof ye?y[w]=F:y[w]=new ye(F.type,F.data,F.dims)}return Ue(),y}async release(){return this.handler.dispose()}static async create(r,i,a,l){Qe();let d,c={};if(typeof r=="string"){if(d=r,typeof i=="object"&&i!==null)c=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(d=r,typeof i=="object"&&i!==null)c=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let F=r,$=0,m=r.byteLength;if(typeof i=="object"&&i!==null)c=i;else if(typeof i=="number"){if($=i,!Number.isSafeInteger($))throw new RangeError("'byteOffset' must be an integer.");if($<0||$>=F.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${F.byteLength}).`);if(m=r.byteLength-$,typeof a=="number"){if(m=a,!Number.isSafeInteger(m))throw new RangeError("'byteLength' must be an integer.");if(m<=0||$+m>F.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${F.byteLength-$}].`);if(typeof l=="object"&&l!==null)c=l;else if(typeof l<"u")throw new TypeError("'options' must be an object.")}else if(typeof a<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof i<"u")throw new TypeError("'options' must be an object.");d=new Uint8Array(F,$,m)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[g,y]=await re(c),w=await g.createInferenceSessionHandler(d,y);return Ue(),new Vv(w)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),ht,gt=f(()=>{_t(),ht=ut}),j=f(()=>{}),ae=f(()=>{}),Q=f(()=>{}),de=f(()=>{}),Oe,et,ot=f(()=>{V(),Ae(),Oe="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",et=class Wv{constructor(r,i,a){this.handler=r,this.hasOptimizerModel=i,this.hasEvalModel=a}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(r,i){let a=r.evalModel||"",l=r.optimizerModel||"",d=i||{},[c,g]=await re(d);if(c.createTrainingSessionHandler){let y=await c.createTrainingSessionHandler(r.checkpointState,r.trainModel,a,l,g);return new Wv(y,!!r.optimizerModel,!!r.evalModel)}else throw new Error(Oe)}typeNarrowingForRunStep(r,i,a,l,d){let c={},g={};if(typeof a!="object"||a===null||a instanceof ye||Array.isArray(a))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let y=!0;if(typeof l=="object"){if(l===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(l instanceof ye)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(l)){if(l.length===0)throw new TypeError("'fetches' cannot be an empty array.");y=!1;for(let w of l){if(typeof w!="string")throw new TypeError("'fetches' must be a string array or an object.");if(i.indexOf(w)===-1)throw new RangeError(`'fetches' contains invalid output name: ${w}.`);c[w]=null}if(typeof d=="object"&&d!==null)g=d;else if(typeof d<"u")throw new TypeError("'options' must be an object.")}else{let w=!1,F=Object.getOwnPropertyNames(l);for(let $ of i)if(F.indexOf($)!==-1){let m=l[$];(m===null||m instanceof ye)&&(w=!0,y=!1,c[$]=m)}if(w){if(typeof d=="object"&&d!==null)g=d;else if(typeof d<"u")throw new TypeError("'options' must be an object.")}else g=l}}else if(typeof l<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let w of r)if(typeof a[w]>"u")throw new Error(`input '${w}' is missing in 'feeds'.`);if(y)for(let w of i)c[w]=null;return[c,g]}convertHandlerReturnTypeToMapOfTensors(r){let i={};for(let a in r)if(Object.hasOwnProperty.call(r,a)){let l=r[a];l instanceof ye?i[a]=l:i[a]=new ye(l.type,l.data,l.dims)}return i}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(r,i,a){let[l,d]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,r,i,a),c=await this.handler.runTrainStep(r,l,d);return this.convertHandlerReturnTypeToMapOfTensors(c)}async runOptimizerStep(r){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(r||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(r,i,a){if(this.hasEvalModel){let[l,d]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,r,i,a),c=await this.handler.runEvalStep(r,l,d);return this.convertHandlerReturnTypeToMapOfTensors(c)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(r=!0){return this.handler.getParametersSize(r)}async loadParametersBuffer(r,i=!0){let a=await this.getParametersSize(i);if(r.length!==4*a)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(r,i)}async getContiguousParameters(r=!0){return this.handler.getContiguousParameters(r)}async release(){return this.handler.dispose()}}}),ct,Ft=f(()=>{ot(),ct=et}),Tt={};b(Tt,{InferenceSession:()=>ht,TRACE:()=>Ze,TRACE_FUNC_BEGIN:()=>Qe,TRACE_FUNC_END:()=>Ue,Tensor:()=>ye,TrainingSession:()=>ct,env:()=>S,registerBackend:()=>X});var kt=f(()=>{H(),se(),gt(),Ae(),j(),ae(),it(),Q(),de(),Ft()}),Ct=f(()=>{}),hr={};b(hr,{default:()=>Gr});var Cr,as,Gr,Bs=f(()=>{var e;Ry(),Is(),Ln(),Cr="ort-wasm-proxy-worker",as=((e=globalThis.self)==null?void 0:e.name)===Cr,as&&(self.onmessage=r=>{let{type:i,in:a}=r.data;try{switch(i){case"init-wasm":Dn(a.wasm).then(()=>{$h(a).then(()=>{postMessage({type:i})},l=>{postMessage({type:i,err:l})})},l=>{postMessage({type:i,err:l})});break;case"init-ep":{let{epName:l,env:d}=a;fi(d,l).then(()=>{postMessage({type:i})},c=>{postMessage({type:i,err:c})});break}case"copy-from":{let{buffer:l}=a,d=Wm(l);postMessage({type:i,out:d});break}case"create":{let{model:l,options:d}=a;fg(l,d).then(c=>{postMessage({type:i,out:c})},c=>{postMessage({type:i,err:c})});break}case"release":gg(a),postMessage({type:i});break;case"run":{let{sessionId:l,inputIndices:d,inputs:c,outputIndices:g,options:y}=a;yg(l,d,c,g,new Array(g.length).fill(null),y).then(w=>{w.some(F=>F[3]!=="cpu")?postMessage({type:i,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:i,out:w},bg([...c,...w]))},w=>{postMessage({type:i,err:w})});break}case"end-profiling":wg(a),postMessage({type:i});break;default:}}catch(l){postMessage({type:i,err:l})}}),Gr=as?null:r=>new Worker(r??an,{type:"module",name:Cr})}),si={};b(si,{default:()=>Vi});var ni,On,Vi,jt=f(()=>{var e;On=(ni=import.meta.url,async function(r={}){function i(){return ur.buffer!=qt.buffer&&Ls(),qt}function a(){return ur.buffer!=qt.buffer&&Ls(),wr}function l(){return ur.buffer!=qt.buffer&&Ls(),Ke}function d(){return ur.buffer!=qt.buffer&&Ls(),dt}function c(){return ur.buffer!=qt.buffer&&Ls(),Ht}function g(){return ur.buffer!=qt.buffer&&Ls(),$r}function y(){return ur.buffer!=qt.buffer&&Ls(),ys}function w(){return ur.buffer!=qt.buffer&&Ls(),Km}var F,$,m=Object.assign({},r),R=new Promise((p,M)=>{F=p,$=M}),W=typeof window=="object",q=typeof importScripts=="function",ne=q&&self.name=="em-pthread";m.mountExternalData=(p,M)=>{p.startsWith("./")&&(p=p.substring(2)),(m.Fb||(m.Fb=new Map)).set(p,M)},m.unmountExternalData=()=>{delete m.Fb};var ie=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let Z=()=>{let p=(O,B,Y)=>(...Me)=>{let Xe=$i,nt=B==null?void 0:B();Me=O(...Me);let wt=B==null?void 0:B();return nt!==wt&&(O=wt,Y(nt),B=Y=null),$i!=Xe?new Promise((Et,Wt)=>{Rg={resolve:Et,reject:Wt}}):Me},M=O=>async(...B)=>{var Y;try{if(m.Eb)throw Error("Session already started");let Me=m.Eb={fc:B[0],errors:[]},Xe=await O(...B);if(m.Eb!==Me)throw Error("Session mismatch");(Y=m.Gb)==null||Y.flush();let nt=Me.errors;if(0<nt.length){let wt=await Promise.all(nt);if(wt=wt.filter(Et=>Et),0<wt.length)throw Error(wt.join(`
`))}return Xe}finally{m.Eb=null}};m._OrtCreateSession=p(m._OrtCreateSession,()=>m._OrtCreateSession,O=>m._OrtCreateSession=O),m._OrtRun=M(p(m._OrtRun,()=>m._OrtRun,O=>m._OrtRun=O)),m._OrtRunWithBinding=M(p(m._OrtRunWithBinding,()=>m._OrtRunWithBinding,O=>m._OrtRunWithBinding=O)),m._OrtBindInput=p(m._OrtBindInput,()=>m._OrtBindInput,O=>m._OrtBindInput=O),Z=void 0};m.jsepInit=(p,M)=>{if(Z==null||Z(),p==="webgpu"){[m.Gb,m.Ub,m.Yb,m.Nb,m.Xb,m.jb,m.Zb,m.bc,m.Vb,m.Wb,m.$b]=M;let O=m.Gb;m.jsepRegisterBuffer=(B,Y,Me,Xe)=>O.registerBuffer(B,Y,Me,Xe),m.jsepGetBuffer=B=>O.getBuffer(B),m.jsepCreateDownloader=(B,Y,Me)=>O.createDownloader(B,Y,Me),m.jsepOnReleaseSession=B=>{O.onReleaseSession(B)},m.jsepOnRunStart=B=>O.onRunStart(B),m.cc=(B,Y)=>{O.upload(B,Y)}}else if(p==="webnn"){[m.Gb,m.ac,m.Ob,m.jsepEnsureTensor,m.dc,m.jsepDownloadTensor]=M,m.jsepReleaseTensorId=m.Ob;let O=m.Gb;m.jsepOnRunStart=B=>O.onRunStart(B),m.jsepRegisterMLContext=(B,Y)=>{O.registerMLContext(B,Y)},m.jsepOnReleaseSession=B=>{O.onReleaseSession(B)},m.jsepCreateMLTensorDownloader=(B,Y)=>O.createMLTensorDownloader(B,Y),m.jsepRegisterMLTensor=(B,Y,Me)=>O.registerMLTensor(B,Y,Me)}};var _e,ue,we=Object.assign({},m),Ge="./this.program",Le=(p,M)=>{throw M},st="";(W||q)&&(q?st=self.location.href:typeof document<"u"&&document.currentScript&&(st=document.currentScript.src),ni&&(st=ni),st=st.startsWith("blob:")?"":st.substr(0,st.replace(/[?#].*/,"").lastIndexOf("/")+1),q&&(ue=p=>{var M=new XMLHttpRequest;return M.open("GET",p,!1),M.responseType="arraybuffer",M.send(null),new Uint8Array(M.response)}),_e=(p,M,O)=>{var B=new XMLHttpRequest;B.open("GET",p,!0),B.responseType="arraybuffer",B.onload=()=>{B.status==200||B.status==0&&B.response?M(B.response):O()},B.onerror=O,B.send(null)});var Mt,St=console.log.bind(console),sr=console.error.bind(console),lr=St,Nt=sr;if(Object.assign(m,we),we=null,ne){let p=function(M){try{var O=M.data,B=O.cmd;if(B==="load"){let Y=[];self.onmessage=Me=>Y.push(Me),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let Me of Y)p(Me);self.onmessage=p};for(let Me of O.handlers)m[Me]&&!m[Me].proxy||(m[Me]=(...Xe)=>{postMessage({Mb:"callHandler",oc:Me,args:Xe})},Me=="print"&&(lr=m[Me]),Me=="printErr"&&(Nt=m[Me]));ur=O.wasmMemory,Ls(),Ir(O.wasmModule)}else if(B==="run"){Wg(O.pthread_ptr,0,0,1,0,0),Dg(O.pthread_ptr),Jv(),c0(),Ur||(ow(),Ur=!0);try{Zv(O.start_routine,O.arg)}catch(Y){if(Y!="unwind")throw Y}}else B==="cancel"?Ac()&&of(-1):O.target!=="setimmediate"&&(B==="checkMailbox"?Ur&&Qm():B&&(Nt(`worker: received unknown command ${B}`),Nt(O)))}catch(Y){throw aw(),Y}};var Ir,Ur=!1;Nt=function(...M){M=M.join(" "),console.error(M)},self.alert=function(...M){postMessage({Mb:"alert",text:M.join(" "),qc:Ac()})},m.instantiateWasm=(M,O)=>new Promise(B=>{Ir=Y=>{Y=new WebAssembly.Instance(Y,n0()),O(Y),B()}}),self.onunhandledrejection=M=>{throw M.reason||M},self.onmessage=p}m.wasmBinary&&(Mt=m.wasmBinary);var ur,Or,zt,qt,wr,Ke,dt,Ht,$r,ys,Ms,Fo,Km,nn=!1;function Ls(){var p=ur.buffer;m.HEAP8=qt=new Int8Array(p),m.HEAP16=Ke=new Int16Array(p),m.HEAPU8=wr=new Uint8Array(p),m.HEAPU16=dt=new Uint16Array(p),m.HEAP32=Ht=new Int32Array(p),m.HEAPU32=$r=new Uint32Array(p),m.HEAPF32=ys=new Float32Array(p),m.HEAPF64=Km=new Float64Array(p),m.HEAP64=Ms=new BigInt64Array(p),m.HEAPU64=Fo=new BigUint64Array(p)}if(!ne){if(!((ur=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof ie))throw Nt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");Ls()}var Fa=[],Cs=[],qs=[],Wn=0,Oo=null;function Hm(){if(--Wn==0&&Oo){var p=Oo;Oo=null,p()}}function Pc(p){throw Nt(p="Aborted("+p+")"),nn=!0,zt=1,p=new WebAssembly.RuntimeError(p+". Build with -sASSERTIONS for more info."),$(p),p}var kg,e0=p=>p.startsWith("data:application/octet-stream;base64,"),t0=p=>p.startsWith("file://");function r0(p){if(p==kg&&Mt)return new Uint8Array(Mt);if(ue)return ue(p);throw"both async and sync fetching of the wasm failed"}function s0(p,M,O){return function(B){if(!Mt&&(W||q)){if(typeof fetch=="function"&&!t0(B))return fetch(B,{credentials:"same-origin"}).then(Y=>{if(!Y.ok)throw`failed to load wasm binary file at '${B}'`;return Y.arrayBuffer()}).catch(()=>r0(B));if(_e)return new Promise((Y,Me)=>{_e(B,Xe=>Y(new Uint8Array(Xe)),Me)})}return Promise.resolve().then(()=>r0(B))}(p).then(B=>WebAssembly.instantiate(B,M)).then(O,B=>{Nt(`failed to asynchronously prepare wasm: ${B}`),Pc(B)})}function n0(){return{a:{O:Yv,Aa:Qv,b:t2,aa:h0,B:g0,qa:_0,Y:w0,_:b0,ra:v0,oa:M0,ha:x0,na:T0,L:k0,Z:E0,W:P0,pa:C0,X:S0,wa:r2,F:s2,Q:n2,P:o2,E:l2,u:c2,q:u2,G:d2,A:y2,R:w2,ua:b2,ka:v2,U:M2,ba:x2,H:T2,ja:Dg,ta:k2,t:E2,x:S2,o:A2,l:$2,c:zg,n:F2,j:L2,w:D2,p:j2,g:B2,s:R2,m:N2,e:U2,k:V2,i:W2,h:G2,d:q2,ea:K2,fa:H2,ga:X2,ca:V0,da:W0,T:Q2,f:Y2,D:J2,I:Z2,M:eM,y:tM,sa:rM,V:sM,v:q0,z:nM,N:iM,S:oM,za:aM,ya:lM,la:X0,ma:Q0,$:Ag,C:Y0,K:J0,ia:Z0,J:ew,a:ur,xa:Sg,va:sw,r:dM}}}var Eg={868340:(p,M,O,B,Y)=>{if(m===void 0||!m.Fb)return 1;if((p=Rs(p>>>0)).startsWith("./")&&(p=p.substring(2)),!(p=m.Fb.get(p)))return 2;if(B>>>=0,(M>>>=0)+(O>>>=0)>p.byteLength)return 3;try{let Me=p.subarray(M,M+O);switch(Y){case 0:a().set(Me,B>>>0);break;case 1:m.cc(B,Me);break;default:return 4}return 0}catch{return 4}},869023:(p,M,O)=>{m.dc(p,a().subarray(M>>>0,M+O>>>0))},869086:()=>m.ac(),869127:p=>{m.Ob(p)},869163:()=>{m.Vb()},869194:()=>{m.Wb()},869223:()=>{m.$b()},869248:p=>m.Ub(p),869281:p=>m.Yb(p),869313:(p,M,O)=>{m.Nb(p,M,O,!0)},869352:(p,M,O)=>{m.Nb(p,M,O)},869385:()=>typeof wasmOffsetConverter<"u",869442:p=>{m.jb("Abs",p,void 0)},869493:p=>{m.jb("Neg",p,void 0)},869544:p=>{m.jb("Floor",p,void 0)},869597:p=>{m.jb("Ceil",p,void 0)},869649:p=>{m.jb("Reciprocal",p,void 0)},869707:p=>{m.jb("Sqrt",p,void 0)},869759:p=>{m.jb("Exp",p,void 0)},869810:p=>{m.jb("Erf",p,void 0)},869861:p=>{m.jb("Sigmoid",p,void 0)},869916:(p,M,O)=>{m.jb("HardSigmoid",p,{alpha:M,beta:O})},869995:p=>{m.jb("Log",p,void 0)},870046:p=>{m.jb("Sin",p,void 0)},870097:p=>{m.jb("Cos",p,void 0)},870148:p=>{m.jb("Tan",p,void 0)},870199:p=>{m.jb("Asin",p,void 0)},870251:p=>{m.jb("Acos",p,void 0)},870303:p=>{m.jb("Atan",p,void 0)},870355:p=>{m.jb("Sinh",p,void 0)},870407:p=>{m.jb("Cosh",p,void 0)},870459:p=>{m.jb("Asinh",p,void 0)},870512:p=>{m.jb("Acosh",p,void 0)},870565:p=>{m.jb("Atanh",p,void 0)},870618:p=>{m.jb("Tanh",p,void 0)},870670:p=>{m.jb("Not",p,void 0)},870721:(p,M,O)=>{m.jb("Clip",p,{min:M,max:O})},870790:p=>{m.jb("Clip",p,void 0)},870842:(p,M)=>{m.jb("Elu",p,{alpha:M})},870900:p=>{m.jb("Gelu",p,void 0)},870952:p=>{m.jb("Relu",p,void 0)},871004:(p,M)=>{m.jb("LeakyRelu",p,{alpha:M})},871068:(p,M)=>{m.jb("ThresholdedRelu",p,{alpha:M})},871138:(p,M)=>{m.jb("Cast",p,{to:M})},871196:p=>{m.jb("Add",p,void 0)},871247:p=>{m.jb("Sub",p,void 0)},871298:p=>{m.jb("Mul",p,void 0)},871349:p=>{m.jb("Div",p,void 0)},871400:p=>{m.jb("Pow",p,void 0)},871451:p=>{m.jb("Equal",p,void 0)},871504:p=>{m.jb("Greater",p,void 0)},871559:p=>{m.jb("GreaterOrEqual",p,void 0)},871621:p=>{m.jb("Less",p,void 0)},871673:p=>{m.jb("LessOrEqual",p,void 0)},871732:(p,M,O,B,Y)=>{m.jb("ReduceMean",p,{keepDims:!!M,noopWithEmptyAxes:!!O,axes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},871891:(p,M,O,B,Y)=>{m.jb("ReduceMax",p,{keepDims:!!M,noopWithEmptyAxes:!!O,axes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},872049:(p,M,O,B,Y)=>{m.jb("ReduceMin",p,{keepDims:!!M,noopWithEmptyAxes:!!O,axes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},872207:(p,M,O,B,Y)=>{m.jb("ReduceProd",p,{keepDims:!!M,noopWithEmptyAxes:!!O,axes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},872366:(p,M,O,B,Y)=>{m.jb("ReduceSum",p,{keepDims:!!M,noopWithEmptyAxes:!!O,axes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},872524:(p,M,O,B,Y)=>{m.jb("ReduceL1",p,{keepDims:!!M,noopWithEmptyAxes:!!O,axes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},872681:(p,M,O,B,Y)=>{m.jb("ReduceL2",p,{keepDims:!!M,noopWithEmptyAxes:!!O,axes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},872838:(p,M,O,B,Y)=>{m.jb("ReduceLogSum",p,{keepDims:!!M,noopWithEmptyAxes:!!O,axes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},872999:(p,M,O,B,Y)=>{m.jb("ReduceSumSquare",p,{keepDims:!!M,noopWithEmptyAxes:!!O,axes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},873163:(p,M,O,B,Y)=>{m.jb("ReduceLogSumExp",p,{keepDims:!!M,noopWithEmptyAxes:!!O,axes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},873327:p=>{m.jb("Where",p,void 0)},873380:(p,M,O)=>{m.jb("Transpose",p,{perm:M?Array.from(c().subarray(M>>>0,O>>>0)):[]})},873488:(p,M,O,B)=>{m.jb("DepthToSpace",p,{blocksize:M,mode:Rs(O),format:B?"NHWC":"NCHW"})},873621:(p,M,O,B)=>{m.jb("DepthToSpace",p,{blocksize:M,mode:Rs(O),format:B?"NHWC":"NCHW"})},873754:(p,M,O,B,Y,Me,Xe,nt,wt,Et,Wt,br,zr,Ve,_r)=>{m.jb("ConvTranspose",p,{format:wt?"NHWC":"NCHW",autoPad:M,dilations:[O],group:B,kernelShape:[Y],pads:[Me,Xe],strides:[nt],wIsConst:()=>!!i()[Et>>>0],outputPadding:Wt?Array.from(c().subarray(Wt>>>0,br>>>0)):[],outputShape:zr?Array.from(c().subarray(zr>>>0,Ve>>>0)):[],activation:Rs(_r)})},874155:(p,M,O,B,Y,Me,Xe,nt,wt,Et,Wt,br,zr,Ve)=>{m.jb("ConvTranspose",p,{format:nt?"NHWC":"NCHW",autoPad:M,dilations:Array.from(c().subarray(O>>>0,2+(O>>>0)>>>0)),group:B,kernelShape:Array.from(c().subarray(Y>>>0,2+(Y>>>0)>>>0)),pads:Array.from(c().subarray(Me>>>0,4+(Me>>>0)>>>0)),strides:Array.from(c().subarray(Xe>>>0,2+(Xe>>>0)>>>0)),wIsConst:()=>!!i()[wt>>>0],outputPadding:Et?Array.from(c().subarray(Et>>>0,Wt>>>0)):[],outputShape:br?Array.from(c().subarray(br>>>0,zr>>>0)):[],activation:Rs(Ve)})},874720:(p,M,O,B,Y,Me,Xe,nt,wt,Et,Wt,br,zr,Ve,_r)=>{m.jb("ConvTranspose",p,{format:wt?"NHWC":"NCHW",autoPad:M,dilations:[O],group:B,kernelShape:[Y],pads:[Me,Xe],strides:[nt],wIsConst:()=>!!i()[Et>>>0],outputPadding:Wt?Array.from(c().subarray(Wt>>>0,br>>>0)):[],outputShape:zr?Array.from(c().subarray(zr>>>0,Ve>>>0)):[],activation:Rs(_r)})},875121:(p,M,O,B,Y,Me,Xe,nt,wt,Et,Wt,br,zr,Ve)=>{m.jb("ConvTranspose",p,{format:nt?"NHWC":"NCHW",autoPad:M,dilations:Array.from(c().subarray(O>>>0,2+(O>>>0)>>>0)),group:B,kernelShape:Array.from(c().subarray(Y>>>0,2+(Y>>>0)>>>0)),pads:Array.from(c().subarray(Me>>>0,4+(Me>>>0)>>>0)),strides:Array.from(c().subarray(Xe>>>0,2+(Xe>>>0)>>>0)),wIsConst:()=>!!i()[wt>>>0],outputPadding:Et?Array.from(c().subarray(Et>>>0,Wt>>>0)):[],outputShape:br?Array.from(c().subarray(br>>>0,zr>>>0)):[],activation:Rs(Ve)})},875686:(p,M)=>{m.jb("GlobalAveragePool",p,{format:M?"NHWC":"NCHW"})},875777:(p,M,O,B,Y,Me,Xe,nt,wt,Et,Wt,br,zr,Ve)=>{m.jb("AveragePool",p,{format:Ve?"NHWC":"NCHW",auto_pad:M,ceil_mode:O,count_include_pad:B,storage_order:Y,dilations:Me?Array.from(c().subarray(Me>>>0,Xe>>>0)):[],kernel_shape:nt?Array.from(c().subarray(nt>>>0,wt>>>0)):[],pads:Et?Array.from(c().subarray(Et>>>0,Wt>>>0)):[],strides:br?Array.from(c().subarray(br>>>0,zr>>>0)):[]})},876192:(p,M)=>{m.jb("GlobalAveragePool",p,{format:M?"NHWC":"NCHW"})},876283:(p,M,O,B,Y,Me,Xe,nt,wt,Et,Wt,br,zr,Ve)=>{m.jb("AveragePool",p,{format:Ve?"NHWC":"NCHW",auto_pad:M,ceil_mode:O,count_include_pad:B,storage_order:Y,dilations:Me?Array.from(c().subarray(Me>>>0,Xe>>>0)):[],kernel_shape:nt?Array.from(c().subarray(nt>>>0,wt>>>0)):[],pads:Et?Array.from(c().subarray(Et>>>0,Wt>>>0)):[],strides:br?Array.from(c().subarray(br>>>0,zr>>>0)):[]})},876698:(p,M)=>{m.jb("GlobalMaxPool",p,{format:M?"NHWC":"NCHW"})},876785:(p,M,O,B,Y,Me,Xe,nt,wt,Et,Wt,br,zr,Ve)=>{m.jb("MaxPool",p,{format:Ve?"NHWC":"NCHW",auto_pad:M,ceil_mode:O,count_include_pad:B,storage_order:Y,dilations:Me?Array.from(c().subarray(Me>>>0,Xe>>>0)):[],kernel_shape:nt?Array.from(c().subarray(nt>>>0,wt>>>0)):[],pads:Et?Array.from(c().subarray(Et>>>0,Wt>>>0)):[],strides:br?Array.from(c().subarray(br>>>0,zr>>>0)):[]})},877196:(p,M)=>{m.jb("GlobalMaxPool",p,{format:M?"NHWC":"NCHW"})},877283:(p,M,O,B,Y,Me,Xe,nt,wt,Et,Wt,br,zr,Ve)=>{m.jb("MaxPool",p,{format:Ve?"NHWC":"NCHW",auto_pad:M,ceil_mode:O,count_include_pad:B,storage_order:Y,dilations:Me?Array.from(c().subarray(Me>>>0,Xe>>>0)):[],kernel_shape:nt?Array.from(c().subarray(nt>>>0,wt>>>0)):[],pads:Et?Array.from(c().subarray(Et>>>0,Wt>>>0)):[],strides:br?Array.from(c().subarray(br>>>0,zr>>>0)):[]})},877694:(p,M,O,B,Y)=>{m.jb("Gemm",p,{alpha:M,beta:O,transA:B,transB:Y})},877798:p=>{m.jb("MatMul",p,void 0)},877852:(p,M,O,B)=>{m.jb("ArgMax",p,{keepDims:!!M,selectLastIndex:!!O,axis:B})},877960:(p,M,O,B)=>{m.jb("ArgMin",p,{keepDims:!!M,selectLastIndex:!!O,axis:B})},878068:(p,M)=>{m.jb("Softmax",p,{axis:M})},878131:(p,M)=>{m.jb("Concat",p,{axis:M})},878191:(p,M,O,B,Y)=>{m.jb("Split",p,{axis:M,numOutputs:O,splitSizes:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},878331:p=>{m.jb("Expand",p,void 0)},878385:(p,M)=>{m.jb("Gather",p,{axis:Number(M)})},878456:(p,M)=>{m.jb("GatherElements",p,{axis:Number(M)})},878535:(p,M,O,B,Y,Me,Xe,nt,wt,Et,Wt)=>{m.jb("Resize",p,{antialias:M,axes:O?Array.from(c().subarray(O>>>0,B>>>0)):[],coordinateTransformMode:Rs(Y),cubicCoeffA:Me,excludeOutside:Xe,extrapolationValue:nt,keepAspectRatioPolicy:Rs(wt),mode:Rs(Et),nearestMode:Rs(Wt)})},878881:(p,M,O,B,Y,Me,Xe)=>{m.jb("Slice",p,{starts:M?Array.from(c().subarray(M>>>0,O>>>0)):[],ends:B?Array.from(c().subarray(B>>>0,Y>>>0)):[],axes:Me?Array.from(c().subarray(Me>>>0,Xe>>>0)):[]})},879097:p=>{m.jb("Tile",p,void 0)},879149:(p,M,O)=>{m.jb("InstanceNormalization",p,{epsilon:M,format:O?"NHWC":"NCHW"})},879263:(p,M,O)=>{m.jb("InstanceNormalization",p,{epsilon:M,format:O?"NHWC":"NCHW"})},879377:p=>{m.jb("Range",p,void 0)},879430:(p,M)=>{m.jb("Einsum",p,{equation:Rs(M)})},879511:(p,M,O,B,Y)=>{m.jb("Pad",p,{mode:M,value:O,pads:B?Array.from(c().subarray(B>>>0,Y>>>0)):[]})},879638:(p,M,O,B,Y,Me)=>{m.jb("BatchNormalization",p,{epsilon:M,momentum:O,spatial:!!Y,trainingMode:!!B,format:Me?"NHWC":"NCHW"})},879807:(p,M,O,B,Y,Me)=>{m.jb("BatchNormalization",p,{epsilon:M,momentum:O,spatial:!!Y,trainingMode:!!B,format:Me?"NHWC":"NCHW"})},879976:(p,M,O)=>{m.jb("CumSum",p,{exclusive:Number(M),reverse:Number(O)})},880073:(p,M,O)=>{m.jb("DequantizeLinear",p,{axis:M,blockSize:O})},880163:(p,M,O,B,Y,Me,Xe,nt,wt)=>{m.jb("Attention",p,{numHeads:M,isUnidirectional:O,maskFilterValue:B,scale:Y,doRotary:Me,qkvHiddenSizes:Xe?Array.from(c().subarray(Number(nt)>>>0,Number(nt)+Xe>>>0)):[],pastPresentShareBuffer:!!wt})},880435:p=>{m.jb("BiasAdd",p,void 0)},880490:p=>{m.jb("BiasSplitGelu",p,void 0)},880551:p=>{m.jb("FastGelu",p,void 0)},880607:(p,M,O,B,Y,Me,Xe,nt,wt,Et,Wt,br,zr,Ve,_r,cs)=>{m.jb("Conv",p,{format:br?"NHWC":"NCHW",auto_pad:M,dilations:O?Array.from(c().subarray(O>>>0,B>>>0)):[],group:Y,kernel_shape:Me?Array.from(c().subarray(Me>>>0,Xe>>>0)):[],pads:nt?Array.from(c().subarray(nt>>>0,wt>>>0)):[],strides:Et?Array.from(c().subarray(Et>>>0,Wt>>>0)):[],w_is_const:()=>!!i()[zr>>>0],activation:Rs(Ve),activation_params:_r?Array.from(y().subarray(_r>>>0,cs>>>0)):[]})},881103:p=>{m.jb("Gelu",p,void 0)},881155:(p,M,O,B)=>{m.jb("GroupQueryAttention",p,{numHeads:M,kvNumHeads:O,scale:B})},881268:(p,M,O,B)=>{m.jb("LayerNormalization",p,{axis:M,epsilon:O,simplified:!!B})},881379:(p,M,O,B)=>{m.jb("LayerNormalization",p,{axis:M,epsilon:O,simplified:!!B})},881490:(p,M,O,B,Y,Me)=>{m.jb("MatMulNBits",p,{k:M,n:O,accuracyLevel:B,bits:Y,blockSize:Me})},881617:(p,M,O,B,Y,Me)=>{m.jb("MultiHeadAttention",p,{numHeads:M,isUnidirectional:O,maskFilterValue:B,scale:Y,doRotary:Me})},881776:(p,M)=>{m.jb("QuickGelu",p,{alpha:M})},881840:(p,M,O,B,Y)=>{m.jb("RotaryEmbedding",p,{interleaved:!!M,numHeads:O,rotaryEmbeddingDim:B,scale:Y})},881979:(p,M,O)=>{m.jb("SkipLayerNormalization",p,{epsilon:M,simplified:!!O})},882081:(p,M,O)=>{m.jb("SkipLayerNormalization",p,{epsilon:M,simplified:!!O})},882183:(p,M,O,B)=>{m.jb("GatherBlockQuantized",p,{gatherAxis:M,quantizeAxis:O,blockSize:B})},882304:p=>{m.Zb(p)},882338:(p,M)=>m.bc(p,M,m.Eb.fc,m.Eb.errors)};function Qv(p,M,O){return j0(async()=>{await m.Xb(p,M,O)})}function Yv(){return typeof wasmOffsetConverter<"u"}function Pg(p){this.name="ExitStatus",this.message=`Program terminated with exit(${p})`,this.status=p}var Cg=p=>{p.terminate(),p.onmessage=()=>{}},i0=p=>{zo.length==0&&(d0(),u0(zo[0]));var M=zo.pop();if(!M)return 6;za.push(M),Ai[p.Ab]=M,M.Ab=p.Ab;var O={cmd:"run",start_routine:p.hc,arg:p.Qb,pthread_ptr:p.Ab};return M.postMessage(O,p.mc),0},Oa=0,ss=(p,M,...O)=>{for(var B=2*O.length,Y=Kg(),Me=qg(8*B),Xe=Me>>>3,nt=0;nt<O.length;nt++){var wt=O[nt];typeof wt=="bigint"?(Ms[Xe+2*nt]=1n,Ms[Xe+2*nt+1]=wt):(Ms[Xe+2*nt]=0n,w()[Xe+2*nt+1>>>0]=wt)}return p=lw(p,0,B,Me,M),af(Y),p};function Sg(p){if(ne)return ss(0,1,p);if(zt=p,!(0<Oa)){for(var M of za)Cg(M);for(M of zo)Cg(M);zo=[],za=[],Ai=[],nn=!0}Le(p,new Pg(p))}function o0(p){if(ne)return ss(1,0,p);Ag(p)}var Ag=p=>{if(zt=p,ne)throw o0(p),"unwind";Sg(p)},zo=[],za=[],a0=[],Ai={},l0=p=>{var M=p.Ab;delete Ai[M],zo.push(p),za.splice(za.indexOf(p),1),p.Ab=0,Gg(M)};function c0(){a0.forEach(p=>p())}var u0=p=>new Promise(M=>{p.onmessage=Y=>{var Me=(Y=Y.data).cmd;if(Y.targetThread&&Y.targetThread!=Ac()){var Xe=Ai[Y.targetThread];Xe?Xe.postMessage(Y,Y.transferList):Nt(`Internal error! Worker sent a message "${Me}" to target pthread ${Y.targetThread}, but that thread no longer exists!`)}else Me==="checkMailbox"?Qm():Me==="spawnThread"?i0(Y):Me==="cleanupThread"?l0(Ai[Y.thread]):Me==="killThread"?(Y=Y.thread,Me=Ai[Y],delete Ai[Y],Cg(Me),Gg(Y),za.splice(za.indexOf(Me),1),Me.Ab=0):Me==="cancelThread"?Ai[Y.thread].postMessage({cmd:"cancel"}):Me==="loaded"?(p.loaded=!0,M(p)):Me==="alert"?alert(`Thread ${Y.threadId}: ${Y.text}`):Y.target==="setimmediate"?p.postMessage(Y):Me==="callHandler"?m[Y.handler](...Y.args):Me&&Nt(`worker sent an unknown command ${Me}`)},p.onerror=Y=>{throw Nt(`worker sent an error! ${Y.filename}:${Y.lineno}: ${Y.message}`),Y};var O,B=[];for(O of[])m.hasOwnProperty(O)&&B.push(O);p.postMessage({cmd:"load",handlers:B,wasmMemory:ur,wasmModule:Or})});function d0(){var p=new Worker(new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});zo.push(p)}var Xm=p=>{for(;0<p.length;)p.shift()(m)},Jv=()=>{var p=Ac(),M=g()[p+52>>>2>>>0];p=g()[p+56>>>2>>>0],uw(M,M-p),af(M)},Zv=(p,M)=>{Oa=0,p=dw(p,M),0<Oa?zt=p:of(p)};class e2{constructor(M){this.Jb=M-24}}function t2(p,M,O){var B=new e2(p>>>=0);throw M>>>=0,O>>>=0,g()[B.Jb+16>>>2>>>0]=0,g()[B.Jb+4>>>2>>>0]=M,g()[B.Jb+8>>>2>>>0]=O,p}function p0(p,M,O,B){return ne?ss(2,1,p,M,O,B):h0(p,M,O,B)}function h0(p,M,O,B){if(p>>>=0,M>>>=0,O>>>=0,B>>>=0,ie===void 0)return Nt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Y=[];return ne&&Y.length===0?p0(p,M,O,B):(p={hc:O,Ab:p,Qb:B,mc:Y},ne?(p.Mb="spawnThread",postMessage(p,Y),0):i0(p))}var m0=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,f0=(p,M,O)=>{var B=(M>>>=0)+O;for(O=M;p[O]&&!(O>=B);)++O;if(16<O-M&&p.buffer&&m0)return m0.decode(p.buffer instanceof ie?p.slice(M,O):p.subarray(M,O));for(B="";M<O;){var Y=p[M++];if(128&Y){var Me=63&p[M++];if((224&Y)==192)B+=String.fromCharCode((31&Y)<<6|Me);else{var Xe=63&p[M++];65536>(Y=(240&Y)==224?(15&Y)<<12|Me<<6|Xe:(7&Y)<<18|Me<<12|Xe<<6|63&p[M++])?B+=String.fromCharCode(Y):(Y-=65536,B+=String.fromCharCode(55296|Y>>10,56320|1023&Y))}}else B+=String.fromCharCode(Y)}return B},Rs=(p,M)=>(p>>>=0)?f0(a(),p,M):"";function g0(p,M,O){return ne?ss(3,1,p,M,O):0}function _0(p,M){if(ne)return ss(4,1,p,M)}var Ig=p=>{for(var M=0,O=0;O<p.length;++O){var B=p.charCodeAt(O);127>=B?M++:2047>=B?M+=2:55296<=B&&57343>=B?(M+=4,++O):M+=3}return M},y0=(p,M,O,B)=>{if(!(0<B))return 0;var Y=O>>>=0;B=O+B-1;for(var Me=0;Me<p.length;++Me){var Xe=p.charCodeAt(Me);if(55296<=Xe&&57343>=Xe&&(Xe=65536+((1023&Xe)<<10)|1023&p.charCodeAt(++Me)),127>=Xe){if(O>=B)break;M[O++>>>0]=Xe}else{if(2047>=Xe){if(O+1>=B)break;M[O++>>>0]=192|Xe>>6}else{if(65535>=Xe){if(O+2>=B)break;M[O++>>>0]=224|Xe>>12}else{if(O+3>=B)break;M[O++>>>0]=240|Xe>>18,M[O++>>>0]=128|Xe>>12&63}M[O++>>>0]=128|Xe>>6&63}M[O++>>>0]=128|63&Xe}}return M[O>>>0]=0,O-Y},Cc=(p,M,O)=>y0(p,a(),M,O);function w0(p,M){if(ne)return ss(5,1,p,M)}function b0(p,M,O){if(ne)return ss(6,1,p,M,O)}function v0(p,M,O){return ne?ss(7,1,p,M,O):0}function M0(p,M){if(ne)return ss(8,1,p,M)}function x0(p,M,O){if(ne)return ss(9,1,p,M,O)}function T0(p,M,O,B){if(ne)return ss(10,1,p,M,O,B)}function k0(p,M,O,B){if(ne)return ss(11,1,p,M,O,B)}function E0(p,M,O,B){if(ne)return ss(12,1,p,M,O,B)}function P0(p){if(ne)return ss(13,1,p)}function C0(p,M){if(ne)return ss(14,1,p,M)}function S0(p,M,O){if(ne)return ss(15,1,p,M,O)}var A0,Lo,r2=()=>{Pc("")},Ii=p=>{for(var M="";a()[p>>>0];)M+=A0[a()[p++>>>0]];return M},$g={},Fg={};function eo(p,M,O={}){if(!("argPackAdvance"in M))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(B,Y,Me={}){var Xe=Y.name;if(!B)throw new Lo(`type "${Xe}" must have a positive integer typeid pointer`);if(Fg.hasOwnProperty(B)){if(Me.Sb)return;throw new Lo(`Cannot register type '${Xe}' twice`)}Fg[B]=Y,$g.hasOwnProperty(B)&&(Y=$g[B],delete $g[B],Y.forEach(nt=>nt()))}(p,M,O)}var I0=(p,M,O)=>{switch(M){case 1:return O?B=>i()[B>>>0]:B=>a()[B>>>0];case 2:return O?B=>l()[B>>>1>>>0]:B=>d()[B>>>1>>>0];case 4:return O?B=>c()[B>>>2>>>0]:B=>g()[B>>>2>>>0];case 8:return O?B=>Ms[B>>>3]:B=>Fo[B>>>3];default:throw new TypeError(`invalid integer width (${M}): ${p}`)}};function s2(p,M,O){O>>>=0,eo(p>>>=0,{name:M=Ii(M>>>0),fromWireType:B=>B,toWireType:function(B,Y){if(typeof Y!="bigint"&&typeof Y!="number")throw Y=Y===null?"null":(B=typeof Y)=="object"||B==="array"||B==="function"?Y.toString():""+Y,new TypeError(`Cannot convert "${Y}" to ${this.name}`);return typeof Y=="number"&&(Y=BigInt(Y)),Y},argPackAdvance:Do,readValueFromPointer:I0(M,O,M.indexOf("u")==-1),Db:null})}var Do=8;function n2(p,M,O,B){eo(p>>>=0,{name:M=Ii(M>>>0),fromWireType:function(Y){return!!Y},toWireType:function(Y,Me){return Me?O:B},argPackAdvance:Do,readValueFromPointer:function(Y){return this.fromWireType(a()[Y>>>0])},Db:null})}var Og=[],to=[];function zg(p){9<(p>>>=0)&&--to[p+1]==0&&(to[p]=void 0,Og.push(p))}var Gn=p=>{if(!p)throw new Lo("Cannot use deleted val. handle = "+p);return to[p]},qn=p=>{switch(p){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let M=Og.pop()||to.length;return to[M]=p,to[M+1]=1,M}};function Lg(p){return this.fromWireType(g()[p>>>2>>>0])}var i2={name:"emscripten::val",fromWireType:p=>{var M=Gn(p);return zg(p),M},toWireType:(p,M)=>qn(M),argPackAdvance:Do,readValueFromPointer:Lg,Db:null};function o2(p){return eo(p>>>0,i2)}var a2=(p,M)=>{switch(M){case 4:return function(O){return this.fromWireType(y()[O>>>2>>>0])};case 8:return function(O){return this.fromWireType(w()[O>>>3>>>0])};default:throw new TypeError(`invalid float width (${M}): ${p}`)}};function l2(p,M,O){O>>>=0,eo(p>>>=0,{name:M=Ii(M>>>0),fromWireType:B=>B,toWireType:(B,Y)=>Y,argPackAdvance:Do,readValueFromPointer:a2(M,O),Db:null})}function c2(p,M,O,B,Y){if(p>>>=0,O>>>=0,M=Ii(M>>>0),Y===-1&&(Y=4294967295),Y=nt=>nt,B===0){var Me=32-8*O;Y=nt=>nt<<Me>>>Me}var Xe=M.includes("unsigned")?function(nt,wt){return wt>>>0}:function(nt,wt){return wt};eo(p,{name:M,fromWireType:Y,toWireType:Xe,argPackAdvance:Do,readValueFromPointer:I0(M,O,B!==0),Db:null})}function u2(p,M,O){function B(Me){var Xe=g()[Me>>>2>>>0];return Me=g()[Me+4>>>2>>>0],new Y(i().buffer,Me,Xe)}var Y=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][M];eo(p>>>=0,{name:O=Ii(O>>>0),fromWireType:B,argPackAdvance:Do,readValueFromPointer:B},{Sb:!0})}function d2(p,M){p>>>=0;var O=(M=Ii(M>>>0))==="std::string";eo(p,{name:M,fromWireType:function(B){var Y=g()[B>>>2>>>0],Me=B+4;if(O)for(var Xe=Me,nt=0;nt<=Y;++nt){var wt=Me+nt;if(nt==Y||a()[wt>>>0]==0){if(Xe=Rs(Xe,wt-Xe),Et===void 0)var Et=Xe;else Et+="\0",Et+=Xe;Xe=wt+1}}else{for(Et=Array(Y),nt=0;nt<Y;++nt)Et[nt]=String.fromCharCode(a()[Me+nt>>>0]);Et=Et.join("")}return Fi(B),Et},toWireType:function(B,Y){Y instanceof ArrayBuffer&&(Y=new Uint8Array(Y));var Me=typeof Y=="string";if(!(Me||Y instanceof Uint8Array||Y instanceof Uint8ClampedArray||Y instanceof Int8Array))throw new Lo("Cannot pass non-string to std::string");var Xe=O&&Me?Ig(Y):Y.length,nt=nf(4+Xe+1),wt=nt+4;if(g()[nt>>>2>>>0]=Xe,O&&Me)Cc(Y,wt,Xe+1);else if(Me)for(Me=0;Me<Xe;++Me){var Et=Y.charCodeAt(Me);if(255<Et)throw Fi(wt),new Lo("String has UTF-16 code units that do not fit in 8 bits");a()[wt+Me>>>0]=Et}else for(Me=0;Me<Xe;++Me)a()[wt+Me>>>0]=Y[Me];return B!==null&&B.push(Fi,nt),nt},argPackAdvance:Do,readValueFromPointer:Lg,Db(B){Fi(B)}})}var $0=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,p2=(p,M)=>{for(var O=p>>1,B=O+M/2;!(O>=B)&&d()[O>>>0];)++O;if(32<(O<<=1)-p&&$0)return $0.decode(a().slice(p,O));for(O="",B=0;!(B>=M/2);++B){var Y=l()[p+2*B>>>1>>>0];if(Y==0)break;O+=String.fromCharCode(Y)}return O},h2=(p,M,O)=>{if(O??(O=2147483647),2>O)return 0;var B=M;O=(O-=2)<2*p.length?O/2:p.length;for(var Y=0;Y<O;++Y){var Me=p.charCodeAt(Y);l()[M>>>1>>>0]=Me,M+=2}return l()[M>>>1>>>0]=0,M-B},m2=p=>2*p.length,f2=(p,M)=>{for(var O=0,B="";!(O>=M/4);){var Y=c()[p+4*O>>>2>>>0];if(Y==0)break;++O,65536<=Y?(Y-=65536,B+=String.fromCharCode(55296|Y>>10,56320|1023&Y)):B+=String.fromCharCode(Y)}return B},g2=(p,M,O)=>{if(M>>>=0,O??(O=2147483647),4>O)return 0;var B=M;O=B+O-4;for(var Y=0;Y<p.length;++Y){var Me=p.charCodeAt(Y);if(55296<=Me&&57343>=Me&&(Me=65536+((1023&Me)<<10)|1023&p.charCodeAt(++Y)),c()[M>>>2>>>0]=Me,(M+=4)+4>O)break}return c()[M>>>2>>>0]=0,M-B},_2=p=>{for(var M=0,O=0;O<p.length;++O){var B=p.charCodeAt(O);55296<=B&&57343>=B&&++O,M+=4}return M};function y2(p,M,O){if(p>>>=0,M>>>=0,O=Ii(O>>>=0),M===2)var B=p2,Y=h2,Me=m2,Xe=nt=>d()[nt>>>1>>>0];else M===4&&(B=f2,Y=g2,Me=_2,Xe=nt=>g()[nt>>>2>>>0]);eo(p,{name:O,fromWireType:nt=>{for(var wt,Et=g()[nt>>>2>>>0],Wt=nt+4,br=0;br<=Et;++br){var zr=nt+4+br*M;br!=Et&&Xe(zr)!=0||(Wt=B(Wt,zr-Wt),wt===void 0?wt=Wt:(wt+="\0",wt+=Wt),Wt=zr+M)}return Fi(nt),wt},toWireType:(nt,wt)=>{if(typeof wt!="string")throw new Lo(`Cannot pass non-string to C++ string type ${O}`);var Et=Me(wt),Wt=nf(4+Et+M);return g()[Wt>>>2>>>0]=Et/M,Y(wt,Wt+4,Et+M),nt!==null&&nt.push(Fi,Wt),Wt},argPackAdvance:Do,readValueFromPointer:Lg,Db(nt){Fi(nt)}})}function w2(p,M){eo(p>>>=0,{Tb:!0,name:M=Ii(M>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var b2=()=>1;function v2(p){Wg(p>>>0,!q,1,!W,131072,!1),c0()}var F0=p=>{if(!nn)try{if(p(),!(0<Oa))try{ne?of(zt):Ag(zt)}catch(M){M instanceof Pg||M=="unwind"||Le(1,M)}}catch(M){M instanceof Pg||M=="unwind"||Le(1,M)}};function Dg(p){p>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(c(),p>>>2,p).value.then(Qm),p+=128,Atomics.store(c(),p>>>2,1))}var Qm=()=>{var p=Ac();p&&(Dg(p),F0(cw))};function M2(p,M){(p>>>=0)==M>>>0?setTimeout(Qm):ne?postMessage({targetThread:p,cmd:"checkMailbox"}):(p=Ai[p])&&p.postMessage({cmd:"checkMailbox"})}var jg=[];function x2(p,M,O,B,Y){for(M>>>=0,B/=2,jg.length=B,O=Y>>>0>>>3,Y=0;Y<B;Y++)jg[Y]=Ms[O+2*Y]?Ms[O+2*Y+1]:w()[O+2*Y+1>>>0];return(M?Eg[M]:pM[p])(...jg)}function T2(p){p>>>=0,ne?postMessage({cmd:"cleanupThread",thread:p}):l0(Ai[p])}function k2(p){}var Bg=(p,M)=>{var O=Fg[p];if(O===void 0)throw p=iw(p),O=Ii(p),Fi(p),new Lo(`${M} has unknown type ${O}`);return O},O0=(p,M,O)=>{var B=[];return p=p.toWireType(B,O),B.length&&(g()[M>>>2>>>0]=qn(B)),p};function E2(p,M,O){return M>>>=0,O>>>=0,p=Gn(p>>>0),M=Bg(M,"emval::as"),O0(M,O,p)}var Ym=p=>{try{p()}catch(M){Pc(M)}},jo=0,$i=null,z0=0,Jm=[],L0={},D0={},P2=0,Rg=null,C2=[];function j0(p){return function(M){if(!nn){if(jo===0){var O=!1,B=!1;M((Y=0)=>{if(!nn&&(z0=Y,O=!0,B)){jo=2,Ym(()=>mw($i)),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.resume(),Y=!1;try{var Me=function(){var wt=c()[$i+8>>>2>>>0];return wt=Ut[D0[wt]],--Oa,wt()}()}catch(wt){Me=wt,Y=!0}var Xe=!1;if(!$i){var nt=Rg;nt&&(Rg=null,(Y?nt.reject:nt.resolve)(Me),Xe=!0)}if(Y&&!Xe)throw Me}}),B=!0,O||(jo=1,$i=function(){var Y=nf(65548),Me=Y+12;g()[Y>>>2>>>0]=Me,g()[Y+4>>>2>>>0]=Me+65536,Me=Jm[0];var Xe=L0[Me];return Xe===void 0&&(Xe=P2++,L0[Me]=Xe,D0[Xe]=Me),Me=Xe,c()[Y+8>>>2>>>0]=Me,Y}(),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.pause(),Ym(()=>pw($i)))}else jo===2?(jo=0,Ym(fw),Fi($i),$i=null,C2.forEach(F0)):Pc(`invalid state: ${jo}`);return z0}}(M=>{p().then(M)})}function S2(p){return p>>>=0,j0(()=>(p=Gn(p)).then(qn))}var Zm=[];function A2(p,M,O,B){return O>>>=0,B>>>=0,(p=Zm[p>>>0])(null,M=Gn(M>>>0),O,B)}var I2={},ef=p=>{var M=I2[p];return M===void 0?Ii(p):M};function $2(p,M,O,B,Y){return O>>>=0,B>>>=0,Y>>>=0,(p=Zm[p>>>0])(M=Gn(M>>>0),M[O=ef(O)],B,Y)}var B0=()=>typeof globalThis=="object"?globalThis:Function("return this")();function F2(p){return(p>>>=0)==0?qn(B0()):(p=ef(p),qn(B0()[p]))}var O2=p=>{var M=Zm.length;return Zm.push(p),M},z2=(p,M)=>{for(var O=Array(p),B=0;B<p;++B)O[B]=Bg(g()[M+4*B>>>2>>>0],"parameter "+B);return O},R0=(p,M)=>Object.defineProperty(M,"name",{value:p});function L2(p,M,O){var B=(M=z2(p,M>>>0)).shift();p--;var Y=`return function (obj, func, destructorsRef, args) {
`,Me=0,Xe=[];O===0&&Xe.push("obj");for(var nt=["retType"],wt=[B],Et=0;Et<p;++Et)Xe.push("arg"+Et),nt.push("argType"+Et),wt.push(M[Et]),Y+=`  var arg${Et} = argType${Et}.readValueFromPointer(args${Me?"+"+Me:""});
`,Me+=M[Et].argPackAdvance;return Y+=`  var rv = ${O===1?"new func":"func.call"}(${Xe.join(", ")});
`,B.Tb||(nt.push("emval_returnValue"),wt.push(O0),Y+=`  return emval_returnValue(retType, destructorsRef, rv);
`),nt.push(Y+`};
`),p=function(Wt){var br=Function;if(!(br instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof br} which is not a function`);var zr=R0(br.name||"unknownFunctionName",function(){});return zr.prototype=br.prototype,zr=new zr,(Wt=br.apply(zr,Wt))instanceof Object?Wt:zr}(nt)(...wt),O=`methodCaller<(${M.map(Wt=>Wt.name).join(", ")}) => ${B.name}>`,O2(R0(O,p))}function D2(p){return p=ef(p>>>0),qn(m[p])}function j2(p,M){return M>>>=0,p=Gn(p>>>0),M=Gn(M),qn(p[M])}function B2(p){9<(p>>>=0)&&(to[p+1]+=1)}function R2(){return qn([])}function N2(p){p=Gn(p>>>0);for(var M=Array(p.length),O=0;O<p.length;O++)M[O]=p[O];return qn(M)}function U2(p){return qn(ef(p>>>0))}function V2(){return qn({})}function W2(p){for(var M=Gn(p>>>=0);M.length;){var O=M.pop();M.pop()(O)}zg(p)}function G2(p,M,O){M>>>=0,O>>>=0,p=Gn(p>>>0),M=Gn(M),O=Gn(O),p[M]=O}function q2(p,M){return M>>>=0,p=(p=Bg(p>>>0,"_emval_take_value")).readValueFromPointer(M),qn(p)}function K2(p,M){p=-9007199254740992>p||9007199254740992<p?NaN:Number(p),M>>>=0,p=new Date(1e3*p),c()[M>>>2>>>0]=p.getUTCSeconds(),c()[M+4>>>2>>>0]=p.getUTCMinutes(),c()[M+8>>>2>>>0]=p.getUTCHours(),c()[M+12>>>2>>>0]=p.getUTCDate(),c()[M+16>>>2>>>0]=p.getUTCMonth(),c()[M+20>>>2>>>0]=p.getUTCFullYear()-1900,c()[M+24>>>2>>>0]=p.getUTCDay(),p=(p.getTime()-Date.UTC(p.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,c()[M+28>>>2>>>0]=p}var Sc=p=>p%4==0&&(p%100!=0||p%400==0),N0=[0,31,60,91,121,152,182,213,244,274,305,335],U0=[0,31,59,90,120,151,181,212,243,273,304,334];function H2(p,M){p=-9007199254740992>p||9007199254740992<p?NaN:Number(p),M>>>=0,p=new Date(1e3*p),c()[M>>>2>>>0]=p.getSeconds(),c()[M+4>>>2>>>0]=p.getMinutes(),c()[M+8>>>2>>>0]=p.getHours(),c()[M+12>>>2>>>0]=p.getDate(),c()[M+16>>>2>>>0]=p.getMonth(),c()[M+20>>>2>>>0]=p.getFullYear()-1900,c()[M+24>>>2>>>0]=p.getDay();var O=(Sc(p.getFullYear())?N0:U0)[p.getMonth()]+p.getDate()-1|0;c()[M+28>>>2>>>0]=O,c()[M+36>>>2>>>0]=-60*p.getTimezoneOffset(),O=new Date(p.getFullYear(),6,1).getTimezoneOffset();var B=new Date(p.getFullYear(),0,1).getTimezoneOffset();p=0|(O!=B&&p.getTimezoneOffset()==Math.min(B,O)),c()[M+32>>>2>>>0]=p}function X2(p){p>>>=0;var M=new Date(c()[p+20>>>2>>>0]+1900,c()[p+16>>>2>>>0],c()[p+12>>>2>>>0],c()[p+8>>>2>>>0],c()[p+4>>>2>>>0],c()[p>>>2>>>0],0),O=c()[p+32>>>2>>>0],B=M.getTimezoneOffset(),Y=new Date(M.getFullYear(),6,1).getTimezoneOffset(),Me=new Date(M.getFullYear(),0,1).getTimezoneOffset(),Xe=Math.min(Me,Y);return 0>O?c()[p+32>>>2>>>0]=+(Y!=Me&&Xe==B):0<O!=(Xe==B)&&(Y=Math.max(Me,Y),M.setTime(M.getTime()+6e4*((0<O?Xe:Y)-B))),c()[p+24>>>2>>>0]=M.getDay(),O=(Sc(M.getFullYear())?N0:U0)[M.getMonth()]+M.getDate()-1|0,c()[p+28>>>2>>>0]=O,c()[p>>>2>>>0]=M.getSeconds(),c()[p+4>>>2>>>0]=M.getMinutes(),c()[p+8>>>2>>>0]=M.getHours(),c()[p+12>>>2>>>0]=M.getDate(),c()[p+16>>>2>>>0]=M.getMonth(),c()[p+20>>>2>>>0]=M.getYear(),p=M.getTime(),BigInt(isNaN(p)?-1:p/1e3)}function V0(p,M,O,B,Y,Me,Xe){return ne?ss(16,1,p,M,O,B,Y,Me,Xe):-52}function W0(p,M,O,B,Y,Me){if(ne)return ss(17,1,p,M,O,B,Y,Me)}function Q2(p,M,O,B){p>>>=0,M>>>=0,O>>>=0,B>>>=0;var Y=new Date().getFullYear(),Me=new Date(Y,0,1),Xe=new Date(Y,6,1);Y=Me.getTimezoneOffset();var nt=Xe.getTimezoneOffset(),wt=Math.max(Y,nt);g()[p>>>2>>>0]=60*wt,c()[M>>>2>>>0]=+(Y!=nt),Me=(p=Et=>Et.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(Me),Xe=p(Xe),nt<Y?(Cc(Me,O,17),Cc(Xe,B,17)):(Cc(Me,B,17),Cc(Xe,O,17))}var Ng=[],G0=(p,M)=>{Ng.length=0;for(var O;O=a()[p++>>>0];){var B=O!=105;M+=(B&=O!=112)&&M%8?4:0,Ng.push(O==112?g()[M>>>2>>>0]:O==106?Ms[M>>>3]:O==105?c()[M>>>2>>>0]:w()[M>>>3>>>0]),M+=B?8:4}return Ng};function Y2(p,M,O){return p>>>=0,M=G0(M>>>0,O>>>0),Eg[p](...M)}function J2(p,M,O){return p>>>=0,M=G0(M>>>0,O>>>0),Eg[p](...M)}var Z2=()=>{},eM=()=>Date.now();function tM(p,M){return Nt(Rs(p>>>0,M>>>0))}var q0,rM=()=>{throw Oa+=1,"unwind"};function sM(){return 4294901760}q0=()=>performance.timeOrigin+performance.now();var nM=()=>navigator.hardwareConcurrency;function iM(){return Pc("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function oM(p){p>>>=0;var M=a().length;if(p<=M||4294901760<p)return!1;for(var O=1;4>=O;O*=2){var B=M*(1+.2/O);B=Math.min(B,p+100663296);var Y=Math;B=Math.max(p,B);e:{Y=(Y.min.call(Y,4294901760,B+(65536-B%65536)%65536)-ur.buffer.byteLength+65535)/65536;try{ur.grow(Y),Ls();var Me=1;break e}catch{}Me=void 0}if(Me)return!0}return!1}var tf=()=>(Pc("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),zh={},K0=p=>{p.forEach(M=>{tf()})};function aM(){var p=Error().stack.toString().split(`
`);return p[0]=="Error"&&p.shift(),K0(p),zh.Pb=tf(),zh.ec=p,zh.Pb}function lM(p,M,O){if(p>>>=0,M>>>=0,zh.Pb==p)var B=zh.ec;else(B=Error().stack.toString().split(`
`))[0]=="Error"&&B.shift(),K0(B);for(var Y=3;B[Y]&&tf()!=p;)++Y;for(p=0;p<O&&B[p+Y];++p)c()[M+4*p>>>2>>>0]=tf();return p}var Ug,Vg={},H0=()=>{if(!Ug){var p,M={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:Ge};for(p in Vg)Vg[p]===void 0?delete M[p]:M[p]=Vg[p];var O=[];for(p in M)O.push(`${p}=${M[p]}`);Ug=O}return Ug};function X0(p,M){if(ne)return ss(18,1,p,M);p>>>=0,M>>>=0;var O=0;return H0().forEach((B,Y)=>{var Me=M+O;for(Y=g()[p+4*Y>>>2>>>0]=Me,Me=0;Me<B.length;++Me)i()[Y++>>>0]=B.charCodeAt(Me);i()[Y>>>0]=0,O+=B.length+1}),0}function Q0(p,M){if(ne)return ss(19,1,p,M);p>>>=0,M>>>=0;var O=H0();g()[p>>>2>>>0]=O.length;var B=0;return O.forEach(Y=>B+=Y.length+1),g()[M>>>2>>>0]=B,0}function Y0(p){return ne?ss(20,1,p):52}function J0(p,M,O,B){return ne?ss(21,1,p,M,O,B):52}function Z0(p,M,O,B){return ne?ss(22,1,p,M,O,B):70}var cM=[null,[],[]];function ew(p,M,O,B){if(ne)return ss(23,1,p,M,O,B);M>>>=0,O>>>=0,B>>>=0;for(var Y=0,Me=0;Me<O;Me++){var Xe=g()[M>>>2>>>0],nt=g()[M+4>>>2>>>0];M+=8;for(var wt=0;wt<nt;wt++){var Et=a()[Xe+wt>>>0],Wt=cM[p];Et===0||Et===10?((p===1?lr:Nt)(f0(Wt,0)),Wt.length=0):Wt.push(Et)}Y+=nt}return g()[B>>>2>>>0]=Y,0}var tw=[31,29,31,30,31,30,31,31,30,31,30,31],rw=[31,28,31,30,31,30,31,31,30,31,30,31],uM=(p,M)=>{i().set(p,M>>>0)};function sw(p,M,O,B){function Y(Ve,_r,cs){for(Ve=typeof Ve=="number"?Ve.toString():Ve||"";Ve.length<_r;)Ve=cs[0]+Ve;return Ve}function Me(Ve,_r){return Y(Ve,_r,"0")}function Xe(Ve,_r){function cs(_w){return 0>_w?-1:0<_w?1:0}var La;return(La=cs(Ve.getFullYear()-_r.getFullYear()))===0&&(La=cs(Ve.getMonth()-_r.getMonth()))===0&&(La=cs(Ve.getDate()-_r.getDate())),La}function nt(Ve){switch(Ve.getDay()){case 0:return new Date(Ve.getFullYear()-1,11,29);case 1:return Ve;case 2:return new Date(Ve.getFullYear(),0,3);case 3:return new Date(Ve.getFullYear(),0,2);case 4:return new Date(Ve.getFullYear(),0,1);case 5:return new Date(Ve.getFullYear()-1,11,31);case 6:return new Date(Ve.getFullYear()-1,11,30)}}function wt(Ve){var _r=Ve.Bb;for(Ve=new Date(new Date(Ve.Cb+1900,0,1).getTime());0<_r;){var cs=Ve.getMonth(),La=(Sc(Ve.getFullYear())?tw:rw)[cs];if(!(_r>La-Ve.getDate())){Ve.setDate(Ve.getDate()+_r);break}_r-=La-Ve.getDate()+1,Ve.setDate(1),11>cs?Ve.setMonth(cs+1):(Ve.setMonth(0),Ve.setFullYear(Ve.getFullYear()+1))}return cs=new Date(Ve.getFullYear()+1,0,4),_r=nt(new Date(Ve.getFullYear(),0,4)),cs=nt(cs),0>=Xe(_r,Ve)?0>=Xe(cs,Ve)?Ve.getFullYear()+1:Ve.getFullYear():Ve.getFullYear()-1}p>>>=0,M>>>=0,O>>>=0,B>>>=0;var Et=g()[B+40>>>2>>>0];for(var Wt in B={kc:c()[B>>>2>>>0],jc:c()[B+4>>>2>>>0],Hb:c()[B+8>>>2>>>0],Lb:c()[B+12>>>2>>>0],Ib:c()[B+16>>>2>>>0],Cb:c()[B+20>>>2>>>0],ub:c()[B+24>>>2>>>0],Bb:c()[B+28>>>2>>>0],rc:c()[B+32>>>2>>>0],ic:c()[B+36>>>2>>>0],lc:Et?Rs(Et):""},O=Rs(O),Et={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})O=O.replace(new RegExp(Wt,"g"),Et[Wt]);var br="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),zr="January February March April May June July August September October November December".split(" ");for(Wt in Et={"%a":Ve=>br[Ve.ub].substring(0,3),"%A":Ve=>br[Ve.ub],"%b":Ve=>zr[Ve.Ib].substring(0,3),"%B":Ve=>zr[Ve.Ib],"%C":Ve=>Me((Ve.Cb+1900)/100|0,2),"%d":Ve=>Me(Ve.Lb,2),"%e":Ve=>Y(Ve.Lb,2," "),"%g":Ve=>wt(Ve).toString().substring(2),"%G":wt,"%H":Ve=>Me(Ve.Hb,2),"%I":Ve=>((Ve=Ve.Hb)==0?Ve=12:12<Ve&&(Ve-=12),Me(Ve,2)),"%j":Ve=>{for(var _r=0,cs=0;cs<=Ve.Ib-1;_r+=(Sc(Ve.Cb+1900)?tw:rw)[cs++]);return Me(Ve.Lb+_r,3)},"%m":Ve=>Me(Ve.Ib+1,2),"%M":Ve=>Me(Ve.jc,2),"%n":()=>`
`,"%p":Ve=>0<=Ve.Hb&&12>Ve.Hb?"AM":"PM","%S":Ve=>Me(Ve.kc,2),"%t":()=>"	","%u":Ve=>Ve.ub||7,"%U":Ve=>Me(Math.floor((Ve.Bb+7-Ve.ub)/7),2),"%V":Ve=>{var _r=Math.floor((Ve.Bb+7-(Ve.ub+6)%7)/7);if(2>=(Ve.ub+371-Ve.Bb-2)%7&&_r++,_r)_r==53&&((cs=(Ve.ub+371-Ve.Bb)%7)==4||cs==3&&Sc(Ve.Cb)||(_r=1));else{_r=52;var cs=(Ve.ub+7-Ve.Bb-1)%7;(cs==4||cs==5&&Sc(Ve.Cb%400-1))&&_r++}return Me(_r,2)},"%w":Ve=>Ve.ub,"%W":Ve=>Me(Math.floor((Ve.Bb+7-(Ve.ub+6)%7)/7),2),"%y":Ve=>(Ve.Cb+1900).toString().substring(2),"%Y":Ve=>Ve.Cb+1900,"%z":Ve=>{var _r=0<=(Ve=Ve.ic);return Ve=Math.abs(Ve)/60,(_r?"+":"-")+("0000"+(Ve/60*100+Ve%60)).slice(-4)},"%Z":Ve=>Ve.lc,"%%":()=>"%"},O=O.replace(/%%/g,"\0\0"),Et)O.includes(Wt)&&(O=O.replace(new RegExp(Wt,"g"),Et[Wt](B)));return Wt=function(Ve){var _r=Array(Ig(Ve)+1);return y0(Ve,_r,0,_r.length),_r}(O=O.replace(/\0\0/g,"%")),Wt.length>M?0:(uM(Wt,p),Wt.length-1)}function dM(p,M,O,B){return sw(p>>>0,M>>>0,O>>>0,B>>>0)}ne||function(){for(var p=m.numThreads-1;p--;)d0();Fa.unshift(()=>{Wn++,function(M){ne?M():Promise.all(zo.map(u0)).then(M)}(()=>Hm())})}();for(var nw=Array(256),rf=0;256>rf;++rf)nw[rf]=String.fromCharCode(rf);A0=nw,Lo=m.BindingError=class extends Error{constructor(p){super(p),this.name="BindingError"}},m.InternalError=class extends Error{constructor(p){super(p),this.name="InternalError"}},to.push(0,1,void 0,1,null,1,!0,1,!1,1),m.count_emval_handles=()=>to.length/2-5-Og.length;var pM=[Sg,o0,p0,g0,_0,w0,b0,v0,M0,x0,T0,k0,E0,P0,C0,S0,V0,W0,X0,Q0,Y0,J0,Z0,ew],Ut=function(){function p(O,B){return Ut=O.exports,Ut=function(){var Y=Ut,Me={};for(let[Xe,nt]of Object.entries(Y))Me[Xe]=typeof nt=="function"?(...wt)=>{Jm.push(Xe);try{return nt(...wt)}finally{nn||(Jm.pop(),$i&&jo===1&&Jm.length===0&&(jo=0,Oa+=1,Ym(hw),typeof Fibers<"u"&&Fibers.sc()))}}:nt;return Me}(),Ut=function(){var Y=Ut,Me=nt=>wt=>nt(wt)>>>0,Xe=nt=>()=>nt()>>>0;return(Y=Object.assign({},Y)).Ca=Me(Y.Ca),Y.fb=Xe(Y.fb),Y.gb=Me(Y.gb),Y.emscripten_main_runtime_thread_id=Xe(Y.emscripten_main_runtime_thread_id),Y.sb=Me(Y.sb),Y.tb=Xe(Y.tb),Y}(),a0.push(Ut.ib),Cs.unshift(Ut.Ba),Or=B,Hm(),Ut}var M=n0();if(Wn++,m.instantiateWasm)try{return m.instantiateWasm(M,p)}catch(O){Nt(`Module.instantiateWasm callback failed with error: ${O}`),$(O)}return kg||(kg=m.locateFile?e0("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":m.locateFile?m.locateFile("ort-wasm-simd-threaded.jsep.wasm",st):st+"ort-wasm-simd-threaded.jsep.wasm":new URL(n("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),n.b).href),function(O,B){var Y=kg;return Mt||typeof WebAssembly.instantiateStreaming!="function"||e0(Y)||t0(Y)||typeof fetch!="function"?s0(Y,O,B):fetch(Y,{credentials:"same-origin"}).then(Me=>WebAssembly.instantiateStreaming(Me,O).then(B,function(Xe){return Nt(`wasm streaming compile failed: ${Xe}`),Nt("falling back to ArrayBuffer instantiation"),s0(Y,O,B)}))}(M,function(O){p(O.instance,O.module)}).catch($),{}}(),iw=p=>(iw=Ut.Ca)(p),ow=()=>(ow=Ut.Da)();m._OrtInit=(p,M)=>(m._OrtInit=Ut.Ea)(p,M),m._OrtGetLastError=(p,M)=>(m._OrtGetLastError=Ut.Fa)(p,M),m._OrtCreateSessionOptions=(p,M,O,B,Y,Me,Xe,nt,wt,Et)=>(m._OrtCreateSessionOptions=Ut.Ga)(p,M,O,B,Y,Me,Xe,nt,wt,Et),m._OrtAppendExecutionProvider=(p,M)=>(m._OrtAppendExecutionProvider=Ut.Ha)(p,M),m._OrtAddFreeDimensionOverride=(p,M,O)=>(m._OrtAddFreeDimensionOverride=Ut.Ia)(p,M,O),m._OrtAddSessionConfigEntry=(p,M,O)=>(m._OrtAddSessionConfigEntry=Ut.Ja)(p,M,O),m._OrtReleaseSessionOptions=p=>(m._OrtReleaseSessionOptions=Ut.Ka)(p),m._OrtCreateSession=(p,M,O)=>(m._OrtCreateSession=Ut.La)(p,M,O),m._OrtReleaseSession=p=>(m._OrtReleaseSession=Ut.Ma)(p),m._OrtGetInputOutputCount=(p,M,O)=>(m._OrtGetInputOutputCount=Ut.Na)(p,M,O),m._OrtGetInputName=(p,M)=>(m._OrtGetInputName=Ut.Oa)(p,M),m._OrtGetOutputName=(p,M)=>(m._OrtGetOutputName=Ut.Pa)(p,M),m._OrtFree=p=>(m._OrtFree=Ut.Qa)(p),m._OrtCreateTensor=(p,M,O,B,Y,Me)=>(m._OrtCreateTensor=Ut.Ra)(p,M,O,B,Y,Me),m._OrtGetTensorData=(p,M,O,B,Y)=>(m._OrtGetTensorData=Ut.Sa)(p,M,O,B,Y),m._OrtReleaseTensor=p=>(m._OrtReleaseTensor=Ut.Ta)(p),m._OrtCreateRunOptions=(p,M,O,B)=>(m._OrtCreateRunOptions=Ut.Ua)(p,M,O,B),m._OrtAddRunConfigEntry=(p,M,O)=>(m._OrtAddRunConfigEntry=Ut.Va)(p,M,O),m._OrtReleaseRunOptions=p=>(m._OrtReleaseRunOptions=Ut.Wa)(p),m._OrtCreateBinding=p=>(m._OrtCreateBinding=Ut.Xa)(p),m._OrtBindInput=(p,M,O)=>(m._OrtBindInput=Ut.Ya)(p,M,O),m._OrtBindOutput=(p,M,O,B)=>(m._OrtBindOutput=Ut.Za)(p,M,O,B),m._OrtClearBoundOutputs=p=>(m._OrtClearBoundOutputs=Ut._a)(p),m._OrtReleaseBinding=p=>(m._OrtReleaseBinding=Ut.$a)(p),m._OrtRunWithBinding=(p,M,O,B,Y)=>(m._OrtRunWithBinding=Ut.ab)(p,M,O,B,Y),m._OrtRun=(p,M,O,B,Y,Me,Xe,nt)=>(m._OrtRun=Ut.bb)(p,M,O,B,Y,Me,Xe,nt),m._OrtEndProfiling=p=>(m._OrtEndProfiling=Ut.cb)(p),m._JsepOutput=(p,M,O)=>(m._JsepOutput=Ut.db)(p,M,O),m._JsepGetNodeName=p=>(m._JsepGetNodeName=Ut.eb)(p);var sf,Ac=()=>(Ac=Ut.fb)(),nf=m._malloc=p=>(nf=m._malloc=Ut.gb)(p),Fi=m._free=p=>(Fi=m._free=Ut.hb)(p),Wg=(p,M,O,B,Y,Me)=>(Wg=Ut.kb)(p,M,O,B,Y,Me),aw=()=>(aw=Ut.lb)(),lw=(p,M,O,B,Y)=>(lw=Ut.mb)(p,M,O,B,Y),Gg=p=>(Gg=Ut.nb)(p),of=p=>(of=Ut.ob)(p),cw=()=>(cw=Ut.pb)(),uw=(p,M)=>(uw=Ut.qb)(p,M),af=p=>(af=Ut.rb)(p),qg=p=>(qg=Ut.sb)(p),Kg=()=>(Kg=Ut.tb)(),dw=m.dynCall_ii=(p,M)=>(dw=m.dynCall_ii=Ut.vb)(p,M),pw=p=>(pw=Ut.wb)(p),hw=()=>(hw=Ut.xb)(),mw=p=>(mw=Ut.yb)(p),fw=()=>(fw=Ut.zb)();function gw(){0<Wn||(ne?(F(m),ne||Xm(Cs),startWorker(m)):(Xm(Fa),0<Wn||sf||(sf=!0,m.calledRun=!0,nn||(ne||Xm(Cs),F(m),ne||Xm(qs)))))}return m.___start_em_js=882450,m.___stop_em_js=882672,m.stackSave=()=>Kg(),m.stackRestore=p=>af(p),m.stackAlloc=p=>qg(p),m.UTF8ToString=Rs,m.stringToUTF8=Cc,m.lengthBytesUTF8=Ig,Oo=function p(){sf||gw(),sf||(Oo=p)},gw(),R}),Vi=On,((e=globalThis.self)==null?void 0:e.name)==="em-pthread"&&On()}),an,zn,ii,Mi,oi,ln,ai,li,Ln=f(()=>{var e,r;Ct(),an=import.meta.url??(typeof document<"u"?(e=document.currentScript)==null?void 0:e.src:typeof self<"u"?(r=self.location)==null?void 0:r.href:void 0),zn=typeof location>"u"?void 0:location.origin,ii=(i,a)=>{try{let l=a??an;return(l?new URL(i,l):new URL(i)).origin===zn}catch{return!1}},Mi=async i=>{let a=await(await fetch(i,{credentials:"same-origin"})).blob();return URL.createObjectURL(a)},oi=(Bs(),k(hr)).default,ln=async()=>{if(!an)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(ii(an))return[void 0,oi()];let i=await Mi(an);return[i,oi(i)]},ai=(jt(),k(si)).default,li=async(i,a,l)=>[void 0,ai]}),Ks,at,bt,Ot,fs,ci,Dn,Br,Is=f(()=>{Ln(),at=!1,bt=!1,Ot=!1,fs=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},ci=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Dn=async e=>{if(at)return Promise.resolve();if(bt)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Ot)throw new Error("previous call to 'initializeWebAssembly()' failed.");bt=!0;let r=e.initTimeout,i=e.numThreads;if(!ci())throw new Error("WebAssembly SIMD is not supported in the current environment.");let a=fs();i>1&&!a&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+i+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=i=1);let l=e.wasmPaths,d=typeof l=="string"?l:void 0,c=l==null?void 0:l.mjs,g=(c==null?void 0:c.href)??c,y=l==null?void 0:l.wasm,w=(y==null?void 0:y.href)??y,F=e.wasmBinary,[$,m]=await li(g,d,i>1),R=!1,W=[];if(r>0&&W.push(new Promise(q=>{setTimeout(()=>{R=!0,q()},r)})),W.push(new Promise((q,ne)=>{let ie={numThreads:i};F?ie.wasmBinary=F:(w||d)&&(ie.locateFile=(Z,_e)=>w??(d??_e)+Z),m(ie).then(Z=>{bt=!1,at=!0,Ks=Z,q(),$&&URL.revokeObjectURL($)},Z=>{bt=!1,Ot=!0,ne(Z)})})),await Promise.race(W),R)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Br=()=>{if(at&&Ks)return Ks;throw new Error("WebAssembly is not initialized yet.")}}),Yr,Mn,Sr,Wi=f(()=>{Is(),Yr=(e,r)=>{let i=Br(),a=i.lengthBytesUTF8(e)+1,l=i._malloc(a);return i.stringToUTF8(e,l,a),r.push(l),l},Mn=(e,r,i,a)=>{if(typeof e=="object"&&e!==null){if(i.has(e))throw new Error("Circular reference in options");i.add(e)}Object.entries(e).forEach(([l,d])=>{let c=r?r+l:l;if(typeof d=="object")Mn(d,c+".",i,a);else if(typeof d=="string"||typeof d=="number")a(c,d.toString());else if(typeof d=="boolean")a(c,d?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof d}`)})},Sr=e=>{let r=Br(),i=r.stackSave();try{let a=r.stackAlloc(8);r._OrtGetLastError(a,a+4);let l=r.HEAP32[a/4],d=r.HEAPU32[a/4+1],c=d?r.UTF8ToString(d):"";throw new Error(`${e} ERROR_CODE: ${l}, ERROR_MESSAGE: ${c}`)}finally{r.stackRestore(i)}}}),ui,Jo=f(()=>{Is(),Wi(),ui=e=>{let r=Br(),i=0,a=[],l=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)l.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)l.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(l.terminate=!1);let d=0;return(e==null?void 0:e.tag)!==void 0&&(d=Yr(e.tag,a)),i=r._OrtCreateRunOptions(l.logSeverityLevel,l.logVerbosityLevel,!!l.terminate,d),i===0&&Sr("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&Mn(e.extra,"",new WeakSet,(c,g)=>{let y=Yr(c,a),w=Yr(g,a);r._OrtAddRunConfigEntry(i,y,w)!==0&&Sr(`Can't set a run config entry: ${c} - ${g}.`)}),[i,a]}catch(d){throw i!==0&&r._OrtReleaseRunOptions(i),a.forEach(c=>r._free(c)),d}}}),po,ho,mo,jn,fo,Zo=f(()=>{Is(),Wi(),po=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},ho=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},mo=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(i=>(typeof i=="string"?i:i.name)==="webgpu")&&(e.enableMemPattern=!1)},jn=(e,r,i)=>{for(let a of r){let l=typeof a=="string"?a:a.name;switch(l){case"webnn":if(l="WEBNN",typeof a!="string"){let c=a==null?void 0:a.deviceType;if(c){let g=Yr("deviceType",i),y=Yr(c,i);Br()._OrtAddSessionConfigEntry(e,g,y)!==0&&Sr(`Can't set a session config entry: 'deviceType' - ${c}.`)}}break;case"webgpu":if(l="JS",typeof a!="string"){let c=a;if(c!=null&&c.preferredLayout){if(c.preferredLayout!=="NCHW"&&c.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${c.preferredLayout}`);let g=Yr("preferredLayout",i),y=Yr(c.preferredLayout,i);Br()._OrtAddSessionConfigEntry(e,g,y)!==0&&Sr(`Can't set a session config entry: 'preferredLayout' - ${c.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${l}`)}let d=Yr(l,i);Br()._OrtAppendExecutionProvider(e,d)!==0&&Sr(`Can't append execution provider: ${l}.`)}},fo=e=>{let r=Br(),i=0,a=[],l=e||{};mo(l);try{let d=po(l.graphOptimizationLevel??"all"),c=ho(l.executionMode??"sequential"),g=typeof l.logId=="string"?Yr(l.logId,a):0,y=l.logSeverityLevel??2;if(!Number.isInteger(y)||y<0||y>4)throw new Error(`log serverity level is not valid: ${y}`);let w=l.logVerbosityLevel??0;if(!Number.isInteger(w)||w<0||w>4)throw new Error(`log verbosity level is not valid: ${w}`);let F=typeof l.optimizedModelFilePath=="string"?Yr(l.optimizedModelFilePath,a):0;if(i=r._OrtCreateSessionOptions(d,!!l.enableCpuMemArena,!!l.enableMemPattern,c,!!l.enableProfiling,0,g,y,w,F),i===0&&Sr("Can't create session options."),l.executionProviders&&jn(i,l.executionProviders,a),l.enableGraphCapture!==void 0){if(typeof l.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${l.enableGraphCapture}`);let $=Yr("enableGraphCapture",a),m=Yr(l.enableGraphCapture.toString(),a);r._OrtAddSessionConfigEntry(i,$,m)!==0&&Sr(`Can't set a session config entry: 'enableGraphCapture' - ${l.enableGraphCapture}.`)}if(l.freeDimensionOverrides)for(let[$,m]of Object.entries(l.freeDimensionOverrides)){if(typeof $!="string")throw new Error(`free dimension override name must be a string: ${$}`);if(typeof m!="number"||!Number.isInteger(m)||m<0)throw new Error(`free dimension override value must be a non-negative integer: ${m}`);let R=Yr($,a);r._OrtAddFreeDimensionOverride(i,R,m)!==0&&Sr(`Can't set a free dimension override: ${$} - ${m}.`)}return l.extra!==void 0&&Mn(l.extra,"",new WeakSet,($,m)=>{let R=Yr($,a),W=Yr(m,a);r._OrtAddSessionConfigEntry(i,R,W)!==0&&Sr(`Can't set a session config entry: ${$} - ${m}.`)}),[i,a]}catch(d){throw i!==0&&r._OrtReleaseSessionOptions(i),a.forEach(c=>r._free(c)),d}}}),di,cn,Bn,Rn,xi,Gi,qi,Ki,Dt=f(()=>{di=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},cn=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Bn=(e,r)=>{let i=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],a=typeof r=="number"?r:r.reduce((l,d)=>l*d,1);return i>0?Math.ceil(a*i):void 0},Rn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},xi=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Gi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",qi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool",Ki=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),Hi,go=f(()=>{Ct(),Hi=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let i=r.headers.get("Content-Length"),a=i?parseInt(i,10):0;if(a<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let l=r.body.getReader(),d;try{d=new ArrayBuffer(a)}catch(g){if(g instanceof RangeError){let y=Math.ceil(a/65536);d=new WebAssembly.Memory({initial:y,maximum:y}).buffer}else throw g}let c=0;for(;;){let{done:g,value:y}=await l.read();if(g)break;let w=y.byteLength;new Uint8Array(d,c,w).set(y),c+=w}return new Uint8Array(d,0,a)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),_o,yo,Xi,wo,Qi,Yi,Mr,Ee=f(()=>{Dt(),_o=["V","I","W","E","F"],yo=(e,r)=>{console.log(`[${_o[e]},${new Date().toISOString()}]${r}`)},Qi=(e,r)=>{Xi=e,wo=r},Yi=(e,r)=>{let i=xi(e),a=xi(Xi);i>=a&&yo(i,typeof r=="function"?r():r)},Mr=(...e)=>{wo&&Yi(...e)}}),I,J=f(()=>{Dt(),I=(e,r)=>new(Rn(r))(e)}),ce=f(()=>{}),ve,Pe,qe,lt,mt,pt,xt,Qt,xr,nr=f(()=>{Ee(),ce(),ve=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Pe=[],qe=e=>Math.ceil(e/16)*16,lt=e=>{for(let r=0;r<Pe.length;r++){let i=Pe[r];if(e<=i)return i}return Math.ceil(e/16)*16},mt=1,pt=()=>mt++,xt=async(e,r,i,a)=>{let l=qe(i),d=e.device.createBuffer({size:l,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let c=e.getCommandEncoder();e.endComputePass(),c.copyBufferToBuffer(r,0,d,0,l),e.flush(),await d.mapAsync(GPUMapMode.READ);let g=d.getMappedRange();if(a){let y=a();return y.set(new Uint8Array(g,0,i)),y}else return new Uint8Array(g.slice(0,i))}finally{d.destroy()}},Qt=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of ve)Pe.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[])}upload(e,r){let i=r.buffer,a=r.byteOffset,l=r.byteLength,d=qe(l),c=this.storageCache.get(e);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==l)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${l}`);let g=this.backend.device.createBuffer({mappedAtCreation:!0,size:d,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),y=g.getMappedRange();new Uint8Array(y).set(new Uint8Array(i,a,l)),g.unmap();let w=this.backend.getCommandEncoder();this.backend.endComputePass(),w.copyBufferToBuffer(g,0,c.gpuData.buffer,0,d),Mr("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(g)}memcpy(e,r){let i=this.storageCache.get(e);if(!i)throw new Error("source gpu data for memcpy does not exist");let a=this.storageCache.get(r);if(!a)throw new Error("destination gpu data for memcpy does not exist");if(i.originalSize!==a.originalSize)throw new Error("inconsistent source and destination gpu data size");let l=qe(i.originalSize),d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(i.gpuData.buffer,0,a.gpuData.buffer,0,l)}registerExternalBuffer(e,r,i){let a;if(i){if(a=i[0],e===i[1])return Mr("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${a}, buffer is the same, skip.`),a;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else a=pt();return this.storageCache.set(a,{gpuData:{id:a,type:0,buffer:e},originalSize:r}),Mr("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${a}, registered.`),a}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),Mr("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let i=lt(e),a,l=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,d=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(l||d){let g=(l?this.freeBuffers:this.freeUniformBuffers).get(i);g?g.length>0?a=g.pop():a=this.backend.device.createBuffer({size:i,usage:r}):a=this.backend.device.createBuffer({size:i,usage:r})}else a=this.backend.device.createBuffer({size:i,usage:r});let c={id:pt(),type:0,buffer:a};return this.storageCache.set(c.id,{gpuData:c,originalSize:e}),Mr("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${c.id}`),c}get(e){var r;return(r=this.storageCache.get(e))==null?void 0:r.gpuData}release(e){let r=this.storageCache.get(e);if(!r)throw new Error("releasing data does not exist");return Mr("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(e,r){let i=this.storageCache.get(e);if(!i)throw new Error("data does not exist");await xt(this.backend,i.gpuData.buffer,i.originalSize,r)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=ve.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let i=this.freeBuffers.get(e.size)||[];r===void 0||i.length>=r?e.destroy():i.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let i=this.freeUniformBuffers.get(e.size)||[];r===void 0||i.length>=r?e.destroy():i.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(i=>{i.destroy()}),this.capturedPendingBuffers.delete(e))}},xr=(...e)=>new Qt(...e)}),Dr,er,mr=f(()=>{Dr=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},er=e=>new Dr(e)}),Hs,gs,De,Tr,vs,Xs,un,Kt=f(()=>{Hs=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},gs=class{static calcShape(e,r,i=!1){let a=e.length,l=r.length;if(a===0)return r;if(l===0)return e;let d=Math.max(e.length,r.length),c=new Array(d);if(i){if(a<2||l<2)return;let g=Hs.calcMatMulShape([e[a-2],e[a-1]],[r[l-2],r[l-1]]);if(g===void 0)return;[c[d-2],c[d-1]]=g}for(let g=i?3:1;g<=d;g++){let y=a-g<0?1:e[a-g],w=l-g<0?1:r[l-g];if(y!==w&&y>1&&w>1)return;let F=Math.max(y,w);if(y&&w)c[d-g]=Math.max(y,w);else{if(F>1)return;c[d-g]=0}}return c}static isValidBroadcast(e,r){let i=e.length,a=r.length;if(i>a)return!1;for(let l=1;l<=i;l++)if(e[i-l]!==1&&e[i-l]!==r[a-l])return!1;return!0}},De=class xf{static size(r){return xf.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,i=4){let a=r.length;if(a===0)return[];let l=new Array(a),d=a-1;for(;d>=0;){if(r[d]%i===0){l[d]=r[d]/i;break}if(i%r[d]!==0)throw new Error("cannot convert shape");l[d]=1,i/=r[d],d--}for(d--;d>=0;d--)l[d]=r[d];return l}static sizeFromDimension(r,i){if(i<0||i>r.length)throw new Error(`invalid dimension of ${i} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return xf.getSizeFromDimensionRange(r,i,r.length)}static sizeToDimension(r,i){if(i<0||i>r.length)throw new Error(`invalid dimension of ${i} for sizeToDimension as Tensor has ${r.length} dimensions.`);return xf.getSizeFromDimensionRange(r,0,i)}static getSizeFromDimensionRange(r,i,a){let l=1;for(let d=i;d<a;d++){if(r[d]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");l*=r[d]}return l}static computeStrides(r){let i=r.length;if(i===0)return[];if(i===1)return[1];let a=new Array(i);a[i-1]=1,a[i-2]=r[i-1];for(let l=i-3;l>=0;--l)a[l]=a[l+1]*r[l+1];return a}static normalizeAxis(r,i){if(r<-i&&r>=i)throw new Error("unsupported axis for this operation.");return r<0?r+i:r}static normalizeAxes(r,i){return r.map(a=>this.normalizeAxis(a,i??r.length))}static sortBasedOnPerm(r,i){return i?i.map(a=>r[a]):r.slice().reverse()}static padShape(r,i){let a=r.length;return r.map((l,d)=>l+i[d]+i[d+a])}static areEqual(r,i){return r.length!==i.length?!1:r.every((a,l)=>a===i[l])}},Tr=class Uh{static adjustPoolAttributes(r,i,a,l,d,c){if(!r&&a.length!==i.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let g=0;g<i.length-2;g++)g>=a.length?a.push(i[g+2]):a[g]=i[g+2];for(let g=0;g<a.length;g++)if(g<l.length){if(l[g]<0)throw new Error("strides should be greater than or equal to 1")}else l.push(1);for(let g=0;g<a.length;g++)if(g<d.length){if(d[g]<0)throw new Error("dilations should be greater than or equal to 1")}else d.push(1);for(let g=0;g<a.length*2;g++)if(g<c.length){if(c[g]<0)throw new Error("pad should be greater than or equal to 1")}else c.push(0);for(let g=0;g<a.length;g++){if(a[g]<=0)throw new Error("kernel shapes need to be greater than 0");if(c[g]>=a[g]||c[g+a.length]>=a[g])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,i,a,l,d,c,g){if(g){if(d.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(i.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(l.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let y=0;y<r.length-2;y++)Uh.adjustPadAndReturnShape(r[y+(c?1:2)],i[y],a[y],l[y],d,y,y+r.length-2,g)}}static computePoolOutputShape(r,i,a,l,d,c,g){if(i.length<=0)throw new Error("input shape must be of size greater than 0");let y=[i[0],i[1]];return Uh.computeShapeHelper(r,i,y,a,l,d,c,g),y}static computeConvOutputShape(r,i,a,l,d,c,g){if(r.length<=0||i.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let y=[r[0],i[0]];return Uh.computeShapeHelper(!1,r,y,a,l,d,c,g),y}static computeShapeHelper(r,i,a,l,d,c,g,y){if(r)for(let w=0;w<i.length-2;w++)a.push(1);else for(let w=0;w<i.length-2;w++)a.push(Uh.adjustPadAndReturnShape(i[w+2],l[w],d[w],c[w],g,w,w+i.length-2,y))}static adjustPadAndReturnShape(r,i,a,l,d,c,g,y){let w=a*(l-1)+1;if(y&&y!=="NOTSET")switch(y){case"VALID":return d[c]=0,d[g]=0,Math.floor((r-w)/i+1);case"SAME_LOWER":case"SAME_UPPER":if(a!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let F=((r+i-1)/i-1)*i+l-r;return d[c]=Math.floor(y==="SAME_LOWER"?(F+1)/2:F/2),d[g]=F-d[c],Math.floor((r+F-l)/i+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+d[c]+d[g]-w)/i+1)}},vs=class{static getShapeOfGemmResult(e,r,i,a,l){if(e.length!==2||i.length!==2)throw new Error("shape need to be of size 2");let d,c,g;r?(d=e[1],c=e[0]):(d=e[0],c=e[1]);let y=-1;if(a?(g=i[0],y=1):(g=i[1],y=0),i[y]!==c)throw new Error("dimension mismatch");if(d<=0||g<=0||c<=0)throw new Error("invalid shape specified");if(l&&!gs.isValidBroadcast(l,[d,g]))throw new Error("gemm: invalid bias shape for broadcast");return[d,g,c]}},Xs=-34028234663852886e22,un=34028234663852886e22}),ts,Gs,dr,kr,yt,ir,Hr,xn,Tn,At,ea,tt,$t,Ha,Jc,Xa,bo,or=f(()=>{Dt(),Kt(),ts=64,Gs=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},dr=(e,r=1)=>{let i=Gs(e,r);return typeof i=="string"?i:i[0]},kr=(e,r=1)=>{let i=Gs(e,r);return typeof i=="string"?i:i[1]},yt=(...e)=>{let r=[];return e.forEach(i=>{i.length!==0&&r.push({type:12,data:i},{type:12,data:De.computeStrides(i)})}),r},ir=e=>e%4===0?4:e%2===0?2:1,Hr=(e="f32",r,i="0")=>!r||r===1?`${e}(${i})`:`vec${r}<${e}>(${i})`,xn=(e,r,i)=>e==="f32"?i:r===1?`f32(${i})`:`vec${r}<f32>(${i})`,Tn=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,At=(e,r,i,a)=>e.startsWith("uniforms.")&&i>4?typeof r=="string"?a==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:a==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:i>1?`${e}[${r}]`:e,ea=(e,r,i,a,l)=>{let d=typeof i=="number",c=d?i:i.length,g=[...new Array(c).keys()],y=c<2?"u32":c<=4?`vec${c}<u32>`:`array<u32, ${c}>`,w=Gs(r,l),F=typeof w=="string"?w:w[1],$=typeof w=="string"?w:w[0],m={indices:y,value:F,storage:$,tensor:r},R=Ke=>typeof Ke=="string"?Ke:`${Ke}u`,W={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},q=d?"uniforms.":"",ne=`${q}${e}_shape`,ie=`${q}${e}_strides`,Z="";for(let Ke=0;Ke<c-1;Ke++)Z+=`
    let dim${Ke} = current / ${At(ie,Ke,c)};
    let rest${Ke} = current % ${At(ie,Ke,c)};
    indices[${Ke}] = dim${Ke};
    current = rest${Ke};
    `;Z+=`indices[${c-1}] = current;`;let _e=c<2?"":`
  fn o2i_${e}(offset: u32) -> ${m.indices} {
    var indices: ${m.indices};
    var current = offset;
    ${Z}
    return indices;
  }`,ue=Ke=>(W.offsetToIndices=!0,c<2?Ke:`o2i_${e}(${Ke})`),we=[];if(c>=2)for(let Ke=c-1;Ke>=0;Ke--)we.push(`${At(ie,Ke,c)} * (indices[${Ke}])`);let Ge=c<2?"":`
  fn i2o_${e}(indices: ${m.indices}) -> u32 {
    return ${we.join("+")};
  }`,Le=Ke=>(W.indicesToOffset=!0,c<2?Ke:`i2o_${e}(${Ke})`),st=(...Ke)=>c===0?"0u":`${m.indices}(${Ke.map(R).join(",")})`,Mt=(Ke,dt)=>c<2?`${Ke}`:`${At(Ke,dt,c)}`,St=(Ke,dt,Ht)=>c<2?`${Ke}=${Ht};`:`${At(Ke,dt,c)}=${Ht};`,sr={},lr=(Ke,dt)=>{W.broadcastedIndicesToOffset=!0;let Ht=`${dt.name}broadcastedIndicesTo${e}Offset`;if(Ht in sr)return`${Ht}(${Ke})`;let $r=[];for(let ys=c-1;ys>=0;ys--){let Ms=dt.indicesGet("outputIndices",ys+dt.rank-c);$r.push(`${Mt(ie,ys)} * (${Ms} % ${Mt(ne,ys)})`)}return sr[Ht]=`fn ${Ht}(outputIndices: ${dt.type.indices}) -> u32 {
             return ${$r.length>0?$r.join("+"):"0u"};
           }`,`${Ht}(${Ke})`},Nt=(Ke,dt)=>(()=>{if(m.storage===m.value)return`${e}[${Ke}]=${dt};`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`${e}[${Ke}]=vec2<u32>(u32(${dt}), select(0u, 0xFFFFFFFFu, ${dt} < 0));`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`${e}[${Ke}]=vec2<u32>(u32(${dt}), 0u);`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`${e}[${Ke}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${dt}));`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),Ir=Ke=>(()=>{if(m.storage===m.value)return`${e}[${Ke}]`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`i32(${e}[${Ke}].x)`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`u32(${e}[${Ke}].x)`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${Ke}] & 0xFFu), bool(${e}[${Ke}] & 0xFF00u), bool(${e}[${Ke}] & 0xFF0000u), bool(${e}[${Ke}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),Ur=c<2?"":`
  fn get_${e}ByIndices(indices: ${m.indices}) -> ${F} {
    return ${Ir(`i2o_${e}(indices)`)};
  }`,ur=c<2?"":(()=>{let Ke=g.map(Ht=>`d${Ht}: u32`).join(", "),dt=g.map(Ht=>`d${Ht}`).join(", ");return`
  fn get_${e}(${Ke}) -> ${F} {
    return get_${e}ByIndices(${st(dt)});
  }`})(),Or=(...Ke)=>{if(Ke.length!==c)throw new Error(`indices length must be ${c}`);let dt=Ke.map(R).join(",");return c===0?Ir("0u"):c===1?Ir(dt[0]):(W.get=!0,W.getByIndices=!0,W.indicesToOffset=!0,`get_${e}(${dt})`)},zt=Ke=>c<2?Ir(Ke):(W.getByIndices=!0,W.indicesToOffset=!0,`get_${e}ByIndices(${Ke})`),qt=c<2?"":`
  fn set_${e}ByIndices(indices: ${m.indices}, value: ${F}) {
    ${Nt(`i2o_${e}(indices)`,"value")}
  }`,wr=c<2?"":(()=>{let Ke=g.map(Ht=>`d${Ht}: u32`).join(", "),dt=g.map(Ht=>`d${Ht}`).join(", ");return`
  fn set_${e}(${Ke}, value: ${F}) {
    set_${e}ByIndices(${st(dt)}, value);
  }`})();return{impl:()=>{let Ke=[],dt=!1;return W.offsetToIndices&&(Ke.push(_e),dt=!0),W.indicesToOffset&&(Ke.push(Ge),dt=!0),W.broadcastedIndicesToOffset&&(Object.values(sr).forEach(Ht=>Ke.push(Ht)),dt=!0),W.set&&(Ke.push(wr),dt=!0),W.setByIndices&&(Ke.push(qt),dt=!0),W.get&&(Ke.push(ur),dt=!0),W.getByIndices&&(Ke.push(Ur),dt=!0),!d&&dt&&Ke.unshift(`const ${ne} = ${m.indices}(${i.join(",")});`,`const ${ie} = ${m.indices}(${De.computeStrides(i).join(",")});`),Ke.join(`
`)},type:m,offsetToIndices:ue,indicesToOffset:Le,broadcastedIndicesToOffset:lr,indices:st,indicesGet:Mt,indicesSet:St,set:(...Ke)=>{if(Ke.length!==c+1)throw new Error(`indices length must be ${c}`);let dt=Ke[c];if(typeof dt!="string")throw new Error("value must be string");let Ht=Ke.slice(0,c).map(R).join(",");return c===0?Nt("0u",dt):c===1?Nt(Ht[0],dt):(W.set=!0,W.setByIndices=!0,W.indicesToOffset=!0,`set_${e}(${Ht}, ${dt})`)},setByOffset:Nt,setByIndices:(Ke,dt)=>c<2?Nt(Ke,dt):(W.setByIndices=!0,W.indicesToOffset=!0,`set_${e}ByIndices(${Ke}, ${dt});`),get:Or,getByOffset:Ir,getByIndices:zt,usage:a,name:e,strides:ie,shape:ne,rank:c}},tt=(e,r,i,a=1)=>ea(e,r,i,"input",a),$t=(e,r,i,a=1)=>ea(e,r,i,"output",a),Ha=(e,r,i,a=1)=>ea(e,r,i,"internal",a),Jc=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=ts){let r=typeof e=="number"?e:e[0],i=typeof e=="number"?1:e[1],a=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||i>this.limits.maxComputeWorkgroupSizeY||a>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${i}, ${a}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*i*a>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${i}, ${a}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let l=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,d=l?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=l?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*i*a}u + local_idx;`;return`@compute @workgroup_size(${r}, ${i}, ${a})
  fn main(${d}) {
    ${c}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let i=e.usage==="input"?"read":"read_write",a=e.type.storage;return`@group(0) @binding(${r}) var<storage, ${i}> ${e.name}: array<${a}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,i=1){return this.uniforms.push({name:e,type:r,length:i}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:i,length:a}of this.uniforms)if(a&&a>4)i==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${i}>, ${Math.ceil(a/8)}>`):e.push(`${r}:array<vec4<${i}>, ${Math.ceil(a/4)}>`);else{let l=a==null||a===1?i:`vec${a}<${i}>`;e.push(`${r}:${l}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},Xa=(e,r)=>new Jc(e,r),bo=(e,r)=>{let i=e.length,a=[];for(let l=0;l<i;l++){let d=i-1-l,c=e[d]||1;(r[r.length-1-l]||1)>1&&c===1&&a.unshift(d)}return a}}),Qa,Ya,ta,Zc,eu,Qs,tu,ru,Nn=f(()=>{Dt(),Kt(),mr(),or(),Qa=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Ya=(e,r)=>r&&r.length!==e?[...new Array(e).keys()].reverse():r,ta=(e,r)=>De.sortBasedOnPerm(e,Ya(e.length,r)),Zc=(e,r,i,a)=>{let l=`fn perm(i: ${a.type.indices}) -> ${i.type.indices} {
    var a: ${i.type.indices};`;for(let d=0;d<r;++d)l+=i.indicesSet("a",e[d],`i[${d}]`);return l+="return a;}"},eu=(e,r)=>{let i=[],a=[];for(let l=0;l<e.length;++l)e[l]!==1&&i.push(e[l]),e[r[l]]!==1&&a.push(r[l]);return{newShape:i,newPerm:a}},Qs=(e,r)=>{let i=e.dataType,a=e.dims.length,l=Ya(a,r),d=ta(e.dims,l),{newShape:c,newPerm:g}=eu(e.dims,l),y=De.areEqual(g,[2,3,1]),w=De.areEqual(g,[3,1,2]),F=c.length===2&&g[0]>g[1]||y||w,$=F?c:e.dims,m=d;F&&($=y?[c[0],c[1]*c[2]]:w?[c[0]*c[1],c[2]]:c,m=[$[1],$[0]]);let R=tt("a",i,$.length),W=$t("output",i,m.length),q=16,ne;return F?ne=ie=>`
  ${ie.registerUniform("output_size","u32").declareVariables(R,W)}
  var<workgroup> tile : array<array<${W.type.value}, ${q+1}>, ${q}>;
  ${ie.mainStart([q,q,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${q} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${q}u + local_id.x;
    let input_row = workgroup_id_x * ${q}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${R.getByIndices(`${R.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${q}u + local_id.x;
    let output_row = workgroup_id_y * ${q}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${W.setByIndices(`${W.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`:ne=ie=>`
  ${ie.registerUniform("output_size","u32").declareVariables(R,W)}

  ${Zc(l,a,R,W)}

  ${ie.mainStart()}
    ${ie.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${W.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${W.setByOffset("global_idx",R.getByIndices("aIndices"))}
  }`,{name:F?"TransposeShared":"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let ie=De.size(d);return{outputs:[{dims:d,dataType:e.dataType}],dispatchGroup:F?{x:Math.ceil(m[1]/q),y:Math.ceil(m[0]/q)}:{x:Math.ceil(ie/64)},programUniforms:[{type:12,data:ie},...yt($,m)]}},getShaderSource:ne}},tu=(e,r)=>{Qa(e.inputs),e.compute(Qs(e.inputs[0],r.perm))},ru=e=>er({perm:e.perm})}),Ti,su,sm,nu,nm,iu,Ja,ou,au,lu,dn,cu,ra,uu,du,pu,Za,hu,mu,el,fu,im=f(()=>{Dt(),Kt(),or(),al(),Nn(),Ti={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},su={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},sm={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},nu={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},nm=(e,r)=>{let i=[];for(let a=r-e;a<r;++a)i.push(a);return i},iu=(e,r)=>{let i=[],a=e.length;for(let d=0;d<a;d++)r.indexOf(d)===-1&&i.push(e[d]);let l=r.map(d=>e[d]);return[i,l]},Ja=(e,r)=>{let i=e.length+r.length,a=[],l=0;for(let d=0;d<i;d++)r.indexOf(d)===-1?a.push(e[l++]):a.push(1);return a},ou=(e,r)=>{for(let i=0;i<e.length;++i)if(e[e.length-i-1]!==r-1-i)return!1;return!0},au=(e,r)=>{let i=[];if(!ou(e,r)){for(let a=0;a<r;++a)e.indexOf(a)===-1&&i.push(a);e.forEach(a=>i.push(a))}return i},lu=(e,r,i,a,l,d,c)=>{let g=i[0].dims,y=De.size(d),w=De.size(c),F=tt("_A",i[0].dataType,g),$=$t("output",l,d),m=32,R=`
          var<workgroup> aBestValues : array<f32, ${m}>;
       `;return{name:e,shaderCache:r,getShaderSource:W=>`
        ${W.registerUniform("reduceSize","u32").declareVariables(F,$)}
        ${R}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${W.mainStart(m)}

          let outputIndex = global_idx / ${m};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${sm[a]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${m}) {
           let candidate = f32(${F.getByOffset("offset + k")});
           bestValue = ${Ti[a]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${m}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${su[a]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${$.setByOffset("outputIndex",`${a==="mean"?`${$.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${$.type.storage}(${nu[a]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:d,dataType:l}],dispatchGroup:{x:y},programUniforms:[{type:12,data:w}]})}},dn=(e,r,i,a)=>{let l=e.inputs.length===1?i:na(e.inputs,i),d=l.axes;d.length===0&&!l.noopWithEmptyAxes&&(d=e.inputs[0].dims.map((R,W)=>W));let c=De.normalizeAxes(d,e.inputs[0].dims.length),g=c,y=e.inputs[0],w=au(g,e.inputs[0].dims.length);w.length>0&&(y=e.compute(Qs(e.inputs[0],w),{inputs:[0],outputs:[-1]})[0],g=nm(g.length,y.dims.length));let[F,$]=iu(y.dims,g),m=F;l.keepDims&&(m=Ja(F,c)),e.compute(lu(r,{hint:l.cacheKey,inputDependencies:["type"]},[y],a,e.inputs[0].dataType,m,$),{inputs:[y]})},cu=(e,r)=>{dn(e,"ReduceMeanShared",r,"mean")},ra=(e,r)=>{dn(e,"ReduceL1Shared",r,"l1")},uu=(e,r)=>{dn(e,"ReduceL2Shared",r,"l2")},du=(e,r)=>{dn(e,"ReduceLogSumExpShared",r,"logSumExp")},pu=(e,r)=>{dn(e,"ReduceMaxShared",r,"max")},Za=(e,r)=>{dn(e,"ReduceMinShared",r,"min")},hu=(e,r)=>{dn(e,"ReduceProdShared",r,"prod")},mu=(e,r)=>{dn(e,"ReduceSumShared",r,"sum")},el=(e,r)=>{dn(e,"ReduceSumSquareShared",r,"sumSquare")},fu=(e,r)=>{dn(e,"ReduceLogSumShared",r,"logSum")}}),tn,gu,sa,na,pn,_u,tl,yu,wu,rl,bu,vu,sl,Mu,xu,rn,Tu,ku,nl,Eu,Pu,il,Cu,Su,ol,Au,al=f(()=>{Dt(),Kt(),mr(),or(),im(),tn=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},gu=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],sa=(e,r,i,a,l,d,c=!1,g=!1)=>{let y=[],w=i[0].dims,F=w.length,$=De.normalizeAxes(l,F),m=!g&&$.length===0;w.forEach((q,ne)=>{m||$.indexOf(ne)>=0?c&&y.push(1):y.push(q)});let R=y.length,W=De.size(y);return{name:e,shaderCache:r,getShaderSource:q=>{let ne=[],ie=tt("_A",i[0].dataType,F),Z=$t("output",d,R),_e=a(ie,Z,$),ue=_e[2];for(let we=0,Ge=0;we<F;we++)m||$.indexOf(we)>=0?(c&&Ge++,ue=`for(var j${we}: u32 = 0; j${we} < ${w[we]}; j${we}++) {
                  ${_e[2].includes("last_index")?`let last_index = j${we};`:""}
                  ${ie.indicesSet("input_indices",we,`j${we}`)}
                  ${ue}
                }`):(ne.push(`${ie.indicesSet("input_indices",we,Z.indicesGet("output_indices",Ge))};`),Ge++);return`

        ${q.registerUniform("output_size","u32").declareVariables(ie,Z)}

        ${q.mainStart()}
          ${q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${ie.type.indices};
          let output_indices = ${Z.offsetToIndices("global_idx")};

          ${ne.join(`
`)}
          ${_e[0]}       // init ops for reduce max/min
          ${_e[1]}
          ${ue}
          ${_e[3]}
          ${_e.length===4?Z.setByOffset("global_idx","value"):_e.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:y,dataType:d}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:[{type:12,data:W},...yt(w,y)]})}},na=(e,r)=>{let i=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(a=>i.push(Number(a))),er({axes:i,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},pn=(e,r,i,a)=>{let l=e.inputs,d=l.length===1?i:na(l,i);e.compute(sa(r,{hint:d.cacheKey,inputDependencies:["rank"]},[l[0]],d.noopWithEmptyAxes&&d.axes.length===0?gu:a,d.axes,l[0].dataType,d.keepDims,d.noopWithEmptyAxes),{inputs:[0]})},_u=(e,r)=>{tn(e.inputs),pn(e,"ReduceLogSum",r,(i,a)=>[`var value = ${a.type.storage}(0);`,"",`value += ${i.getByIndices("input_indices")};`,"value = log(value);"])},tl=(e,r)=>{tn(e.inputs),pn(e,"ReduceL1",r,(i,a)=>[`var value = ${a.type.storage}(0);`,"",`value += abs(${i.getByIndices("input_indices")});`,""])},yu=(e,r)=>{tn(e.inputs),pn(e,"ReduceL2",r,(i,a)=>[`var t = ${a.type.value}(0); var value = ${a.type.value}(0);`,"",`t = ${i.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},wu=(e,r)=>{tn(e.inputs),pn(e,"ReduceLogSumExp",r,(i,a)=>[`var value = ${a.type.storage}(0);`,"",`value += exp(${i.getByIndices("input_indices")});`,"value = log(value);"])},rl=(e,r)=>{tn(e.inputs),pn(e,"ReduceMax",r,(i,a,l)=>{let d=[];for(let c=0;c<i.rank;c++)(l.indexOf(c)>=0||l.length===0)&&d.push(i.indicesSet("input_indices",c,0));return[`${d.join(`
`)}`,`var value = ${i.getByIndices("input_indices")};`,`value = max(value, ${i.getByIndices("input_indices")});`,""]})},bu=(e,r)=>{tn(e.inputs),pn(e,"ReduceMean",r,(i,a,l)=>{let d=1;for(let c=0;c<i.rank;c++)(l.indexOf(c)>=0||l.length===0)&&(d*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${i.getByIndices("input_indices")});`,`let value = ${a.type.value}(sum / ${d});`]})},vu=(e,r)=>{tn(e.inputs),pn(e,"ReduceMin",r,(i,a,l)=>{let d=[];for(let c=0;c<i.rank;c++)(l.indexOf(c)>=0||l.length===0)&&d.push(`input_indices[${c}] = 0;`);return[`${d.join(`
`)}`,`var value = ${i.getByIndices("input_indices")};`,`value = min(value, ${i.getByIndices("input_indices")});`,""]})},sl=(e,r)=>{tn(e.inputs),pn(e,"ReduceProd",r,(i,a)=>[`var value = ${a.type.storage}(1);`,"",`value *= ${i.getByIndices("input_indices")};`,""])},Mu=(e,r)=>{tn(e.inputs),pn(e,"ReduceSum",r,(i,a)=>[`var value = ${a.type.storage}(0);`,"",`value += ${i.getByIndices("input_indices")};`,""])},xu=(e,r)=>{tn(e.inputs),pn(e,"ReduceSumSquare",r,(i,a)=>[`var t = ${a.type.value}(0); var value = ${a.type.value}(0);`,"",`t = ${i.getByIndices("input_indices")}; value += t * t;`,""])},rn=(e,r,i)=>{if(r.length===0)return i;let a=1,l=1;for(let d=0;d<r.length;d++)r.indexOf(d)===-1?a*=e[d]:l*=e[d];return l<32&&a>1024},Tu=(e,r)=>{rn(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?bu(e,r):cu(e,r)},ku=(e,r)=>{rn(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?tl(e,r):ra(e,r)},nl=(e,r)=>{rn(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?yu(e,r):uu(e,r)},Eu=(e,r)=>{rn(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?wu(e,r):du(e,r)},Pu=(e,r)=>{rn(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rl(e,r):pu(e,r)},il=(e,r)=>{rn(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?vu(e,r):Za(e,r)},Cu=(e,r)=>{rn(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?sl(e,r):hu(e,r)},Su=(e,r)=>{rn(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Mu(e,r):mu(e,r)},ol=(e,r)=>{rn(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?xu(e,r):el(e,r)},Au=(e,r)=>{rn(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?_u(e,r):fu(e,r)}}),ia,Iu,$u,oa,om=f(()=>{Dt(),mr(),al(),ia=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Iu=(e,r)=>{ia(e.inputs);let i=(a,l,d)=>{let c=[];for(let g=0;g<a.rank;g++)(d.indexOf(g)>=0||d.length===0)&&c.push(`input_indices[${g}] = 0;`);return[`${c.join(`
`)}`,`var value = ${a.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${a.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${a.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",l.setByOffset("global_idx","best_index")]};e.compute(sa("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],i,[r.axis],7,r.keepDims),{inputs:[0]})},$u=(e,r)=>{ia(e.inputs);let i=(a,l,d)=>{let c=[];for(let g=0;g<a.rank;g++)(d.indexOf(g)>=0||d.length===0)&&c.push(`input_indices[${g}] = 0;`);return[`${c.join(`
`)}`,`var value = ${a.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${a.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${a.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",l.setByOffset("global_idx","best_index")]};e.compute(sa("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],i,[r.axis],7,r.keepDims),{inputs:[0]})},oa=e=>er(e)}),Fu,ll,Ou,zu,Ji,Lu,Du,aa=f(()=>{Dt(),Kt(),ce(),or(),Fu=(e,r)=>{let i=e[0],a=e[1],l=e[2],d=e[3],c=e[4],g=e[5];if(c&&g)throw new Error("Attention cannot have both past and attention_bias");if(i.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let y=i.dims[0],w=i.dims[1],F=i.dims[2];if(l.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(a.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(a.dims[0]!==F)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(l.dims[0]!==a.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let $=l.dims[0]/3,m=$,R=m;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let _e of r.qkvHiddenSizes)if(_e%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");$=r.qkvHiddenSizes[0],m=r.qkvHiddenSizes[1],R=r.qkvHiddenSizes[2]}let W=w;if($!==m)throw new Error("qkv_hidden_sizes first element should be same as the second");if(l.dims[0]!==$+m+R)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let q=0;if(c){if(m!==R)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(c.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(c.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(c.dims[1]!==y)throw new Error('Input "past" second dimension must be batch_size');if(c.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(c.dims[4]!==m/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(q=c.dims[3])}let ne=W+q,ie=-1,Z=0;if(d)throw new Error("Mask not supported");if(c)throw new Error("past is not supported");if(g){if(g.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(g.dims[0]!==y||g.dims[1]!==r.numHeads||g.dims[2]!==w||g.dims[3]!==ne)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:y,sequenceLength:w,pastSequenceLength:q,kvSequenceLength:W,totalSequenceLength:ne,maxSequenceLength:ie,inputHiddenSize:F,hiddenSize:$,vHiddenSize:R,headSize:Math.floor($/r.numHeads),vHeadSize:Math.floor(R/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:Z,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},ll=(e,r,i)=>{let a=ir(i),l=64,d=i/a;d<l&&(l=32);let c=Math.ceil(i/a/l),g=[{type:1,data:1/i},{type:12,data:d},{type:12,data:c}],y=dr(e.dataType,a),w=kr(1,a),F=["type"],$=m=>{let R=$t("x",e.dataType,e.dims,a),W=kr(e.dataType),q=[{name:"d_inv",type:"f32"},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${l}>;
  var<workgroup> thread_sum: array<f32, ${l}>;
  ${m.registerUniforms(q).declareVariables(R)}
  ${m.mainStart([l,1,1])}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${l}) * uniforms.d_comp + local_offset;

    var thread_max_vector = ${w}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      thread_max_vector = max(${w}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(a){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${a}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${l}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${w}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      sum_vector += exp(${w}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(a){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${a}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${l}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        x[offset + i] = ${R.type.value}(${W}(uniforms.d_inv));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        var f32input = ${w}(x[offset + i]);
        x[offset + i] = ${R.type.value}(exp(f32input - max_value) / sum);
      }
    }
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${l};${y};${a}`,inputDependencies:F},getShaderSource:$,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:g})}},Ou=(e,r,i,a,l,d,c,g)=>{let y=g+d.kvSequenceLength,w=[d.batchSize,d.numHeads,d.sequenceLength,y],F=d.kvNumHeads===void 0&&e>1&&a,$=F?[d.batchSize,d.numHeads,y,d.headSize]:void 0,m=c.scale===0?1/Math.sqrt(d.headSize):c.scale,R=ir(d.headSize),W=d.headSize/R,q=12,ne={x:Math.ceil(y/q),y:Math.ceil(d.sequenceLength/q),z:d.batchSize*d.numHeads},ie=[{type:12,data:d.sequenceLength},{type:12,data:W},{type:12,data:y},{type:12,data:d.numHeads},{type:1,data:m},{type:12,data:g},{type:12,data:d.kvSequenceLength}],Z=F&&a&&De.size(a.dims)>0,_e=["type","type"];Z&&_e.push("type"),l&&_e.push("type");let ue=[{dims:w,dataType:r.dataType,gpuDataType:0}];F&&ue.push({dims:$,dataType:r.dataType,gpuDataType:0});let we=Ge=>{let Le=tt("q",r.dataType,r.dims,R),st=tt("key",i.dataType,i.dims,R),Mt=[Le,st];if(Z){let Ir=tt("past_key",a.dataType,a.dims,R);Mt.push(Ir)}l&&Mt.push(tt("attention_bias",l.dataType,l.dims));let St=$t("output",r.dataType,w),sr=[St];F&&sr.push($t("present_key",r.dataType,$,R));let lr=kr(1,R),Nt=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"}];return`
  const TILE_SIZE = ${q}u;

  var<workgroup> tileQ: array<${Le.type.storage}, ${q*q}>;
  var<workgroup> tileK: array<${Le.type.storage}, ${q*q}>;
  ${Ge.registerUniforms(Nt).declareVariables(...Mt,...sr)}
  ${Ge.mainStart([q,q,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    ${Z&&F?`
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx;
    let pastKeyOffset = uniforms.past_sequence_length * uniforms.K * headIdx;`:`
    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;`}
    ${F?"let presentKeyOffset = headIdx * uniforms.N * uniforms.K;":""}
    var value = ${lr}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${Z&&F?`
              if (n + local_id.y < uniforms.past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else {
                tileK[idx] =
                         key[kOffset + (n + local_id.y - uniforms.past_sequence_length) * uniforms.K + w + local_id.x];
              }`:"tileK[idx] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];"}
      ${F?"present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];":""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
        value += ${lr}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(R){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${R}`)}})()};
        output[outputIdx] = ${St.type.value} (sum * uniforms.alpha) + ${l?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${R};${l!==void 0};${a!==void 0};${e}`,inputDependencies:_e},getRunData:()=>({outputs:ue,dispatchGroup:ne,programUniforms:ie}),getShaderSource:we}},zu=(e,r,i,a,l,d)=>{let c=d+l.kvSequenceLength,g=l.nReps?l.nReps:1,y=l.vHiddenSize*g,w=l.kvNumHeads==null&&e>1&&a,F=w?[l.batchSize,l.numHeads,c,l.headSize]:void 0,$=[l.batchSize,l.sequenceLength,y],m=12,R={x:Math.ceil(l.vHeadSize/m),y:Math.ceil(l.sequenceLength/m),z:l.batchSize*l.numHeads},W=[{type:12,data:l.sequenceLength},{type:12,data:c},{type:12,data:l.vHeadSize},{type:12,data:l.numHeads},{type:12,data:y},{type:12,data:d},{type:12,data:l.kvSequenceLength}],q=w&&a&&De.size(a.dims)>0,ne=["type","type"];q&&ne.push("type");let ie=[{dims:$,dataType:r.dataType,gpuDataType:0}];w&&ie.push({dims:F,dataType:r.dataType,gpuDataType:0});let Z=_e=>{let ue=tt("probs",r.dataType,r.dims),we=tt("v",i.dataType,i.dims),Ge=[ue,we];q&&Ge.push(tt("past_value",a.dataType,a.dims));let Le=[$t("output",r.dataType,$)];w&&Le.push($t("present_value",r.dataType,F));let st=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"}];return`
  const TILE_SIZE = ${m}u;
  var<workgroup> tileQ: array<${ue.type.value}, ${m*m}>;
  var<workgroup> tileK: array<${ue.type.value}, ${m*m}>;
  ${_e.registerUniforms(st).declareVariables(...Ge,...Le)}
  ${_e.mainStart([m,m,1])}
   let headIdx = workgroup_id.z;
   let m = global_id.y;
   let n = global_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   ${q&&w?`
    let pastValueOffset = headIdx * uniforms.N * uniforms.past_sequence_length + n;
    let vOffset = headIdx * uniforms.N * uniforms.kv_sequence_length + n;
      `:`
   let offsetB = headIdx * uniforms.N * uniforms.K + n;
            `}
    ${w?"let presentValueOffset = headIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${ue.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${q&&w?`
        if (w + local_id.y < uniforms.past_sequence_length) {
          tileK[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else {
          tileK[idx] = v[vOffset + (w + local_id.y - uniforms.past_sequence_length) * uniforms.N];
        }
      `:`
        tileK[idx] = v[offsetB + (w + local_id.y) * uniforms.N];
      `}
        ${w?"present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileK[idx];":""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${a!==void 0};${e}`,inputDependencies:ne},getRunData:()=>({outputs:ie,dispatchGroup:R,programUniforms:W}),getShaderSource:Z}},Ji=(e,r,i,a,l,d,c,g,y,w,F)=>{let $=Math.min(e.outputCount,1+(c?1:0)+(g?1:0)),m=w.kvNumHeads!==void 0||$>1?w.pastSequenceLength:0,R=m+w.kvSequenceLength,W=y&&De.size(y.dims)>0?y:void 0,q=[r,i];w.kvNumHeads===void 0&&$>1&&c&&De.size(c.dims)>0&&q.push(c),W&&q.push(W);let ne=e.compute(Ou($,r,i,c,W,w,F,m),{inputs:q,outputs:w.kvNumHeads===void 0&&$>1?[-1,1]:[-1]})[0];e.compute(ll(ne,w.batchSize*w.numHeads*w.sequenceLength,R),{inputs:[ne],outputs:[]});let ie=[ne,a];w.kvNumHeads===void 0&&$>1&&g&&De.size(g.dims)>0&&ie.push(g),e.compute(zu($,ne,a,g,w,m),{inputs:ie,outputs:w.kvNumHeads===void 0&&$>1?[0,2]:[0]})},Lu=(e,r)=>{let i=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],a=r.sequenceLength,l=r.inputHiddenSize,d=r.headSize,c=12,g={x:Math.ceil(r.headSize/c),y:Math.ceil(r.sequenceLength/c),z:r.batchSize*r.numHeads},y=[e.inputs[0],e.inputs[1],e.inputs[2]],w=[{type:12,data:a},{type:12,data:l},{type:12,data:d},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],F=$=>{let m=$t("output_q",y[0].dataType,i),R=$t("output_k",y[0].dataType,i),W=$t("output_v",y[0].dataType,i),q=tt("input",y[0].dataType,y[0].dims),ne=tt("weight",y[1].dataType,y[1].dims),ie=tt("bias",y[2].dataType,y[2].dims),Z=q.type.storage,_e=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${c}u;
  var<workgroup> tileInput: array<${Z}, ${c*c}>;
  var<workgroup> tileWeightQ: array<${Z}, ${c*c}>;
  var<workgroup> tileWeightK: array<${Z}, ${c*c}>;
  var<workgroup> tileWeightV: array<${Z}, ${c*c}>;
  ${$.registerUniforms(_e).declareVariables(q,ne,ie,m,R,W)}
  ${$.mainStart([c,c,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${Z}(0);
    var valueK = ${Z}(0);
    var valueV = ${Z}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:i,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:i,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:g,programUniforms:w}),getShaderSource:F},{inputs:y,outputs:[-1,-1,-1]})},Du=(e,r)=>{let i=Fu(e.inputs,r),[a,l,d]=Lu(e,i);return Ji(e,a,l,d,e.inputs[4],void 0,void 0,void 0,e.inputs[5],i,r)}}),ju,Bu,cl,Ru,am=f(()=>{kt(),Dt(),Kt(),mr(),or(),ju=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let i=(a,l,d)=>{let c=l.length;if(c!==a.length)throw new Error(`${d}: num dimensions != ${c}`);l.forEach((g,y)=>{if(g!==a[y])throw new Error(`${d}: dim[${y}] do not match`)})};if(e[0].dims.length>1){let a=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);i(e[1].dims,a,"Invalid input scale"),i(e[2].dims,a,"Invalid input B"),i(e[3].dims,a,"Invalid input mean"),i(e[4].dims,a,"Invalid input var")}else i(e[1].dims,[1],"Invalid input scale"),i(e[2].dims,[1],"Invalid input B"),i(e[3].dims,[1],"Invalid input mean"),i(e[4].dims,[1],"Invalid input var")},Bu=(e,r)=>{let{epsilon:i,spatial:a,format:l}=r,d=e[0].dims,c=a?ir(d[d.length-1]):1,g=l==="NHWC"&&d.length>1?c:1,y=De.size(d)/c,w=a,F=w?d.length:d,$=tt("x",e[0].dataType,e[0].dims,c),m=tt("scale",e[1].dataType,e[1].dims,g),R=tt("bias",e[2].dataType,e[2].dims,g),W=tt("inputMean",e[3].dataType,e[3].dims,g),q=tt("inputVar",e[4].dataType,e[4].dims,g),ne=$t("y",e[0].dataType,F,c),ie=()=>{let _e="";if(a)_e=`let cOffset = ${d.length===1?"0u":l==="NHWC"?`outputIndices[${d.length-1}] / ${c}`:"outputIndices[1]"};`;else if(l==="NCHW")_e=`
            ${ne.indicesSet("outputIndices","0","0")}
            let cOffset = ${ne.indicesToOffset("outputIndices")};`;else{_e=`var cIndices = ${m.type.indices}(0);
                       cIndices[0] = outputIndices[${d.length-1}];`;for(let ue=1;ue<m.rank;ue++)_e+=`cIndices[${ue}] = outputIndices[${ue}];`;_e+=`let cOffset = ${m.indicesToOffset("cIndices")};`}return _e},Z=_e=>`
  const epsilon = ${i};
  ${_e.registerUniform("outputSize","u32").declareVariables($,m,R,W,q,ne)}
  ${_e.mainStart()}
  ${_e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${ne.offsetToIndices(`global_idx * ${c}`)};
    ${ie()}
    let scale = ${m.getByOffset("cOffset")};
    let bias = ${R.getByOffset("cOffset")};
    let inputMean = ${W.getByOffset("cOffset")};
    let inputVar = ${q.getByOffset("cOffset")};
    let x = ${$.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${ne.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${a}_${c}`,inputDependencies:w?["rank","type","type","type","type"]:void 0},getShaderSource:Z,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w?[{type:12,data:y},...yt(d)]:[{type:12,data:y}]})}},cl=e=>er(e),Ru=(e,r)=>{let{inputs:i,outputCount:a}=e,l=cl({...r,outputCount:a});if(S.webgpu.validateInputContent&&ju(i,l),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Bu(i,l))}}),Nu,Uu,ul,lm=f(()=>{Kt(),or(),Nu=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Uu=e=>{let r=e[0].dims,i=e[0].dims[2],a=De.size(r)/4,l=e[0].dataType,d=tt("input",l,r,4),c=tt("bias",l,[i],4),g=tt("residual",l,r,4),y=$t("output",l,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:w=>`
  const channels = ${i}u / 4;
  ${w.declareVariables(d,c,g,y)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes(a)}
    let value = ${d.getByOffset("global_idx")}
      + ${c.getByOffset("global_idx % channels")} + ${g.getByOffset("global_idx")};
    ${y.setByOffset("global_idx","value")}
  }`}},ul=e=>{Nu(e.inputs),e.compute(Uu(e.inputs))}}),Vu,fr,Wu,Gu,dl,qu,Ku,pl,Hu,Xu,hl,Qu,Yu,ml,Ju,Zu,vo,ed,Mo,td,rd,sd,nd,fl,id,od,ad,ld,gl,cd,ud,dd,pd,_l,hd,yl,wl,bl,vl,Ml,md,fd,xl,gd,_d,la=f(()=>{Dt(),Kt(),mr(),or(),Vu=(e,r,i,a,l,d,c)=>{let g=Math.ceil(r/4),y="";typeof l=="string"?y=`${l}(a)`:y=l("a");let w=tt("inputData",i,[g],4),F=$t("outputData",a,[g],4),$=[{name:"vec_size",type:"u32"}];return c&&$.push(...c),`
      ${e.registerUniforms($).declareVariables(w,F)}

  ${d??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${w.getByOffset("global_idx")};
    ${F.setByOffset("global_idx",y)}
  }`},fr=(e,r,i,a,l,d=e.dataType,c,g)=>{let y=[{type:12,data:Math.ceil(De.size(e.dims)/4)}];return c&&y.push(...c),{name:r,shaderCache:{hint:l,inputDependencies:["type"]},getShaderSource:w=>Vu(w,De.size(e.dims),e.dataType,d,i,a,g),getRunData:w=>({outputs:[{dims:e.dims,dataType:d}],dispatchGroup:{x:Math.ceil(De.size(w[0].dims)/64/4)},programUniforms:y})}},Wu=e=>{e.compute(fr(e.inputs[0],"Abs","abs"))},Gu=e=>{e.compute(fr(e.inputs[0],"Acos","acos"))},dl=e=>{e.compute(fr(e.inputs[0],"Acosh","acosh"))},qu=e=>{e.compute(fr(e.inputs[0],"Asin","asin"))},Ku=e=>{e.compute(fr(e.inputs[0],"Asinh","asinh"))},pl=e=>{e.compute(fr(e.inputs[0],"Atan","atan"))},Hu=e=>{e.compute(fr(e.inputs[0],"Atanh","atanh"))},Xu=e=>er(e),hl=(e,r)=>{let i;switch(r.to){case 10:i="vec4<f16>";break;case 1:i="vec4<f32>";break;case 12:i="vec4<u32>";break;case 6:i="vec4<i32>";break;case 9:i="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute(fr(e.inputs[0],"Cast",i,void 0,r.cacheKey,r.to))},Qu=e=>{let r,i,a=e.length>=2&&e[1].data!==0,l=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=a?e[1].getFloat32Array()[0]:-34028234663852886e22,i=l?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=a?e[1].getUint16Array()[0]:64511,i=l?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return er({min:r,max:i})},Yu=(e,r)=>{let i=r||Qu(e.inputs),a=kr(e.inputs[0].dataType);e.compute(fr(e.inputs[0],"Clip",l=>`clamp(${l}, vec4<${a}>(uniforms.min), vec4<${a}>(uniforms.max))`,void 0,i.cacheKey,void 0,[{type:e.inputs[0].dataType,data:i.min},{type:e.inputs[0].dataType,data:i.max}],[{name:"min",type:a},{name:"max",type:a}]),{inputs:[0]})},ml=e=>{e.compute(fr(e.inputs[0],"Ceil","ceil"))},Ju=e=>{e.compute(fr(e.inputs[0],"Cos","cos"))},Zu=e=>{e.compute(fr(e.inputs[0],"Cosh","cosh"))},vo=e=>er(e),ed=(e,r)=>{let i=kr(e.inputs[0].dataType);e.compute(fr(e.inputs[0],"Elu",a=>`elu_vf32(${a})`,`
  const elu_alpha_ = ${i}(${r.alpha});

  fn elu_f32(a: ${i}) -> ${i} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${i}>) -> vec4<${i}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},Mo=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,td=e=>{let r=kr(e.inputs[0].dataType);e.compute(fr(e.inputs[0],"Erf",i=>`erf_vf32(${i})`,Mo(r)))},rd=e=>{e.compute(fr(e.inputs[0],"Exp","exp"))},sd=e=>{e.compute(fr(e.inputs[0],"Floor","floor"))},nd=e=>{let r=kr(e.inputs[0].dataType);e.compute(fr(e.inputs[0],"Gelu",i=>`0.5 * ${i} * (1.0 + erf_vf32(${i} * 0.7071067811865475))`,Mo(r)))},fl=(e,r)=>{let i=kr(e.inputs[0].dataType);e.compute(fr(e.inputs[0],"LeakyRelu",a=>`select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<${i}>(0.0))`,`const leaky_relu_alpha_ = ${i}(${r.alpha});`,r.cacheKey))},id=e=>{e.compute(fr(e.inputs[0],"Not",r=>`!${r}`))},od=e=>{e.compute(fr(e.inputs[0],"Neg",r=>`-${r}`))},ad=e=>{e.compute(fr(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},ld=e=>{let r=kr(e.inputs[0].dataType);e.compute(fr(e.inputs[0],"Relu",i=>`select(vec4<${r}>(0.0), ${i}, ${i} > vec4<${r}>(0.0))`))},gl=e=>{e.compute(fr(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},cd=e=>er(e),ud=(e,r)=>{let i=kr(e.inputs[0].dataType);e.compute(fr(e.inputs[0],"HardSigmoid",a=>`max(vec4<${i}>(0.0), min(vec4<${i}>(1.0), ${r.alpha} * ${a} + vec4<${i}>(${r.beta})))`,void 0,r.cacheKey))},dd=e=>{e.compute(fr(e.inputs[0],"Sin","sin"))},pd=e=>{e.compute(fr(e.inputs[0],"Sinh","sinh"))},_l=e=>{e.compute(fr(e.inputs[0],"Sqrt","sqrt"))},hd=e=>{e.compute(fr(e.inputs[0],"Tan","tan"))},yl=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,wl=e=>{e.compute(fr(e.inputs[0],"Tanh",yl))},bl=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${yl("v")};
}
`,vl=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Ml=e=>{let r=kr(e.inputs[0].dataType);e.compute(fr(e.inputs[0],"FastGelu",vl,bl(r),void 0,e.inputs[0].dataType))},md=(e,r)=>{let i=kr(e.inputs[0].dataType);return e.compute(fr(e.inputs[0],"ThresholdedRelu",a=>`select(vec4<${i}>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${i}>(${r.alpha});`,r.cacheKey)),0},fd=e=>{e.compute(fr(e.inputs[0],"Log","log"))},xl=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,gd=e=>`quick_gelu_impl(${e})`,_d=(e,r)=>{let i=kr(e.inputs[0].dataType);e.compute(fr(e.inputs[0],"QuickGelu",gd,xl(i,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),yd,wd,ca,cm=f(()=>{Kt(),or(),la(),yd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},wd=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let i=tt("input",e[0].dataType,e[0].dims,4),a=tt("bias",e[0].dataType,[e[0].dims[2]],4),l=$t("output",e[0].dataType,r,4),d=De.size(r)/4,c=dr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)}}),getShaderSource:g=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${g.declareVariables(i,a,l)}

  ${Mo(c)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes(d)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${l.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},ca=e=>{yd(e.inputs),e.compute(wd(e.inputs))}}),bd,Tl,sn,vd,kl,Md,xd,Td,El,kd,Ed,Pd,Pl,um=f(()=>{Dt(),Kt(),or(),bd=(e,r,i,a,l,d,c,g,y,w,F,$)=>{let m,R;typeof g=="string"?m=R=(Z,_e)=>`${g}((${Z}),(${_e}))`:typeof g=="function"?m=R=g:(m=g.scalar,R=g.vector);let W=$t("outputData",F,a.length,4),q=tt("aData",y,r.length,4),ne=tt("bData",w,i.length,4),ie;if(l)if(d){let Z=De.size(r)===1,_e=De.size(i)===1,ue=r.length>0&&r[r.length-1]%4===0,we=i.length>0&&i[i.length-1]%4===0;Z||_e?ie=W.setByOffset("global_idx",R(Z?`${q.type.value}(${q.getByOffset("0")}.x)`:q.getByOffset("global_idx"),_e?`${ne.type.value}(${ne.getByOffset("0")}.x)`:ne.getByOffset("global_idx"))):ie=`
            let outputIndices = ${W.offsetToIndices("global_idx * 4u")};
            let offsetA = ${q.broadcastedIndicesToOffset("outputIndices",W)};
            let offsetB = ${ne.broadcastedIndicesToOffset("outputIndices",W)};
            ${W.setByOffset("global_idx",R(c||ue?q.getByOffset("offsetA / 4u"):`${q.type.value}(${q.getByOffset("offsetA / 4u")}[offsetA % 4u])`,c||we?ne.getByOffset("offsetB / 4u"):`${ne.type.value}(${ne.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else ie=W.setByOffset("global_idx",R(q.getByOffset("global_idx"),ne.getByOffset("global_idx")));else{if(!d)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let Z=(_e,ue,we="")=>{let Ge=`aData[indexA${ue}][componentA${ue}]`,Le=`bData[indexB${ue}][componentB${ue}]`;return`
            let outputIndices${ue} = ${W.offsetToIndices(`global_idx * 4u + ${ue}u`)};
            let offsetA${ue} = ${q.broadcastedIndicesToOffset(`outputIndices${ue}`,W)};
            let offsetB${ue} = ${ne.broadcastedIndicesToOffset(`outputIndices${ue}`,W)};
            let indexA${ue} = offsetA${ue} / 4u;
            let indexB${ue} = offsetB${ue} / 4u;
            let componentA${ue} = offsetA${ue} % 4u;
            let componentB${ue} = offsetB${ue} % 4u;
            ${_e}[${ue}] = ${we}(${m(Ge,Le)});
          `};F===9?ie=`
            var data = vec4<u32>(0);
            ${Z("data",0,"u32")}
            ${Z("data",1,"u32")}
            ${Z("data",2,"u32")}
            ${Z("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:ie=`
            ${Z("outputData[global_idx]",0)}
            ${Z("outputData[global_idx]",1)}
            ${Z("outputData[global_idx]",2)}
            ${Z("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(q,ne,W)}

        ${$??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${ie}
      }`},Tl=(e,r,i,a,l,d,c=i.dataType)=>{let g=!De.areEqual(i.dims,a.dims),y=i.dims,w=De.size(i.dims),F=!1,$=!1,m=[g];if(g){let R=gs.calcShape(i.dims,a.dims,!1);if(!R)throw new Error("Can't perform binary op on the given tensors");y=R,w=De.size(y);let W=De.size(i.dims)===1,q=De.size(a.dims)===1,ne=i.dims.length>0&&i.dims[i.dims.length-1]%4===0,ie=a.dims.length>0&&a.dims[a.dims.length-1]%4===0;m.push(W),m.push(q),m.push(ne),m.push(ie);let Z=1;for(let _e=1;_e<y.length;_e++){let ue=i.dims[i.dims.length-_e]??1,we=a.dims[a.dims.length-_e]??1;if(ue===we)Z*=ue;else break}Z%4===0?($=!0,F=!0):(W||q||ne||ie)&&(F=!0)}else F=!0;return m.push(F),{name:e,shaderCache:{hint:r+m.map(R=>R.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:R=>bd(R,i.dims,a.dims,y,F,g,$,l,i.dataType,a.dataType,c,d),getRunData:()=>({outputs:[{dims:y,dataType:c}],dispatchGroup:{x:Math.ceil(w/64/4)},programUniforms:[{type:12,data:Math.ceil(De.size(y)/4)},...yt(i.dims,a.dims,y)]})}},sn=(e,r,i,a,l,d)=>{e.compute(Tl(r,l??"",e.inputs[0],e.inputs[1],i,a,d))},vd=e=>{sn(e,"Add",(r,i)=>`${r}+${i}`)},kl=e=>{sn(e,"Div",(r,i)=>`${r}/${i}`)},Md=e=>{sn(e,"Equal",{scalar:(r,i)=>`u32(${r}==${i})`,vector:(r,i)=>`vec4<u32>(${r}==${i})`},void 0,void 0,9)},xd=e=>{sn(e,"Mul",(r,i)=>`${r}*${i}`)},Td=e=>{let r=tt("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;sn(e,"Pow",{scalar:(i,a)=>`pow_custom(${i},${a})`,vector:(i,a)=>`pow_vector_custom(${i},${a})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},El=e=>{sn(e,"Sub",(r,i)=>`${r}-${i}`)},kd=e=>{sn(e,"Greater",{scalar:(r,i)=>`u32(${r}>${i})`,vector:(r,i)=>`vec4<u32>(${r}>${i})`},void 0,void 0,9)},Ed=e=>{sn(e,"Less",{scalar:(r,i)=>`u32(${r}<${i})`,vector:(r,i)=>`vec4<u32>(${r}<${i})`},void 0,void 0,9)},Pd=e=>{sn(e,"GreaterOrEqual",{scalar:(r,i)=>`u32(${r}>=${i})`,vector:(r,i)=>`vec4<u32>(${r}>=${i})`},void 0,void 0,9)},Pl=e=>{sn(e,"LessOrEqual",{scalar:(r,i)=>`u32(${r}<=${i})`,vector:(r,i)=>`vec4<u32>(${r}<=${i})`},void 0,void 0,9)}}),Cd,Cl,Sd,Ad,Sl,Id,dm=f(()=>{Dt(),Kt(),mr(),or(),Cd=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let i=0,a=e[i],l=a.dataType,d=a.dims.length;e.forEach((c,g)=>{if(g!==i){if(c.dataType!==l)throw new Error("input tensors should be one type");if(c.dims.length!==d)throw new Error("input tensors should have the same shape");c.dims.forEach((y,w)=>{if(w!==r&&y!==a.dims[w])throw new Error("non concat dimensions must match")})}})},Cl=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Sd=(e,r)=>{let i=e.length,a=[];for(let l=0;l<i;++l){let d=r.setByOffset("global_idx",e[l].getByIndices("indices"));i===1?a.push(d):l===0?a.push(`if (inputIndex == ${l}u) { ${d} }`):l===i-1?a.push(`else { ${d} }`):a.push(`else if (inputIndex == ${l}) { ${d} }`)}return a.join(`
`)},Ad=(e,r,i,a)=>{let l=De.size(i),d=new Array(e.length),c=new Array(e.length),g=0,y=[],w=[],F=[{type:12,data:l}];for(let q=0;q<e.length;++q)g+=e[q].dims[r],d[q]=g,w.push(e[q].dims.length),c[q]=tt(`input${q}`,a,w[q]),y.push("rank"),F.push({type:12,data:d[q]});for(let q=0;q<e.length;++q)F.push(...yt(e[q].dims));F.push(...yt(i));let $=$t("output",a,i.length),m=$.indicesGet("indices",r),R=Array.from(Array(d.length).keys()).map(q=>`uniforms.sizeInConcatAxis${q}`).join(","),W=q=>`

  ${(()=>{q.registerUniform("outputSize","u32");for(let ne=0;ne<e.length;ne++)q.registerUniform(`sizeInConcatAxis${ne}`,"u32");return q.declareVariables(...c,$)})()}

  ${Cl(d.length,R)}

  ${q.mainStart()}
    ${q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${$.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${m});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${d.length}u>(${R});
      ${m} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Sd(c,$)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:F}),getShaderSource:W}},Sl=(e,r)=>{let i=e.inputs,a=i[0].dims,l=De.normalizeAxis(r.axis,a.length);Cd(i,l);let d=a.slice();d[l]=i.reduce((g,y)=>g+(y.dims.length>l?y.dims[l]:0),0);let c=i.filter(g=>De.size(g.dims)>0);e.compute(Ad(c,l,d,i[0].dataType),{inputs:c})},Id=e=>er({axis:e.axis})}),Un,pi,hi,ua,mi=f(()=>{Dt(),Kt(),Un=(e,r,i="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${i}(uniforms.clip_min)), ${r}(${i}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${i}(uniforms.alpha) * value + ${i}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${i}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},pi=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},hi=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},ua=e=>{let r=(e==null?void 0:e.activation)||"";if(r==="HardSigmoid"){let[i,a]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:r,alpha:i,beta:a}}else if(r==="Clip"){let[i,a]=(e==null?void 0:e.activation_params)||[Xs,un];return{activation:r,clipMax:a,clipMin:i}}else if(r==="LeakyRelu"){let[i]=(e==null?void 0:e.activation_params)||[.01];return{activation:r,alpha:i}}return{activation:r}}}),$s,da,pa=f(()=>{$s=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},da=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Al,$d=f(()=>{Al=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Fd,ha,ma,Il,Od,fa,zd,ga,_a=f(()=>{Dt(),Kt(),or(),mi(),pa(),Fd=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,ha=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,ma=(e,r,i="f32",a,l=!1,d=32,c=!1,g=32)=>{let y=r[1]*e[1],w=r[0]*e[0],F=l?y:d,$=l?d:y,m=F/r[0],R=d/r[1];if(!((l&&m===4&&e[1]===4||!l&&(m===3||m===4))&&F%r[0]===0&&d%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${l} is true, innerElementSize ${m} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${m} must be 3 or 4.
  tileAWidth ${F} must be divisible by workgroupSize[0]${r[0]}. tileInner ${d} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${m}<${i}>, ${F/m}>, ${$}>;
var<workgroup> mm_Bsub: array<array<vec4<${i}>, ${w/e[0]}>, ${d}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${m};
const tileInner = ${d};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${c?"0":"i32(globalId.z)"};
  ${a?`let batchIndices = ${a.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${y};

  let num_tiles = ${c?`${Math.ceil(g/d)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${c?`i32(globalId.z) * ${g}`:"0"};

  var acc: array<vec4<${i}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${R};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Fd(l,a)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${R}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${a?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${m===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${ha(l,m)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Il=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,Od=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",fa=(e,r,i="f32",a,l=!1,d=32,c=!1,g=32,y=!1)=>{let w=e[1]*r[1],F=e[0]*r[0],$=l?w:d,m=l?d:w;if(!(m%r[1]===0&&$%r[0]===0&&d%r[1]===0))throw new Error(`tileAHight ${m} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${$} must be divisible by workgroupSize[0]${r[0]}, tileInner ${d} must be divisible by workgroupSize[1]${r[1]}`);let R=m/r[1],W=$/r[0],q=d/r[1],ne=y?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${w};
    let globalColStart = i32(workgroupId.x) * ${F};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${m}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${$}; inputCol = inputCol + ${r[0]}) {
          ${Il(l,a)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${F}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${a?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${i}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${l?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${w};

let tileRowA = i32(localId.y) * ${R};
let tileColA = i32(localId.x) * ${W};
let tileRowB = i32(localId.y) * ${q};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${R}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${W}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Il(l,a)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${q}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${a?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${i}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Od(l)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${i}, ${$}>, ${m}>;
  var<workgroup> mm_Bsub : array<array<${i}, ${F}>, ${d}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${d};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${c?"0":"i32(globalId.z)"};
    ${a?`let batchIndices = ${a.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${c?`${Math.ceil(g/d)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${c?`i32(globalId.z) * ${g}`:"0"};

    var acc : array<array<${i}, colPerThread>, rowPerThread>;
    ${ne}
  }
`},zd=(e,r,i,a,l,d=!1)=>{let[c,g,y]=l,[w,F,$,m]=a,R=bo(c,y),W=bo(g,y),q=dr(a[0].type.tensor),ne=()=>{let Z=F.rank,_e=w.rank,ue=`var aIndices: ${F.type.indices};`;for(let we=Z-2-1,Ge=_e-1;we>=0;we--,Ge--)ue+=`
aIndices[${we}] = ${_e>1?`batchIndices[${Ge}]`:"batchIndices"};`;return R.forEach(we=>{ue+=`
aIndices[${we}] = 0;`}),ue+=`
aIndices[${Z-2}] = u32(row);
                   aIndices[${Z-1}] = u32(colIn);`,ue},ie=()=>{let Z=$.rank,_e=w.rank,ue=`var bIndices: ${$.type.indices};`;for(let we=Z-2-1,Ge=_e-1;we>=0;we--,Ge--)ue+=`
bIndices[${we}] = ${_e>1?`batchIndices[${Ge}]`:"batchIndices"};`;return W.forEach(we=>{ue+=`
bIndices[${we}] = 0;`}),ue+=`
bIndices[${Z-2}] = u32(row);
                   bIndices[${Z-1}] = u32(colIn);`,ue};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${$s(e,q)} {
      var value = ${$s(e,q)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${ne()}
        value = ${F.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${$s(e,q)} {
      var value = ${$s(e,q)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${ie()}
        value = ${$.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${$s(e,q)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${d?"bias[colIn]":`${$s(e,q)}(bias[row])`};`:""}
        ${i}
        ${m.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ga=(e,r,i,a,l=!1,d)=>{let c=e[0].dims,g=e[1].dims,y=c.slice(0,-2),w=g.slice(0,-2),F=a?a.slice(0,-2):i.slice(0,-2),$=De.size(F),m=c[c.length-2],R=c[c.length-1],W=g[g.length-1],q=R%4===0&&W%4===0,ne=m<=8?[4,1,1]:[4,4,1],ie=[8,8,1],Z=[Math.ceil(W/ie[0]/ne[0]),Math.ceil(m/ie[1]/ne[1]),Math.ceil($/ie[2]/ne[2])],_e=q?4:1,ue=[...y,m,R/_e],we=ue.length,Ge=[...w,R,W/_e],Le=Ge.length,st=[$,m,W/_e],Mt=[{type:6,data:m},{type:6,data:W},{type:6,data:R}];pi(r,Mt),Mt.push(...yt(F,ue,Ge));let St=["rank","rank"],sr=e.length>2;sr&&(Mt.push(...yt(e[2].dims)),St.push("rank")),Mt.push(...yt(st));let lr=Nt=>{let Ir=F.length,Ur=Ha("batchDims",e[0].dataType,Ir,1),ur=dr(e[0].dataType),Or=tt("a",e[0].dataType,we,_e),zt=tt("b",e[1].dataType,Le,_e),qt=$t("result",e[0].dataType,st.length,_e),wr=[Or,zt];if(sr){let ys=l?_e:1;wr.push(tt("bias",e[2].dataType,e[2].dims.length,ys))}let Ke=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];hi(r,Ke);let dt=dr(qt.type.tensor),Ht=Un(r,qt.type.value,dt),$r=zd(_e,sr,Ht,[Ur,Or,zt,qt],[y,w,F],l);return`
  ${Nt.registerUniforms(Ke).registerInternalVariables(Ur).declareVariables(...wr,qt)}
  ${$r}
  ${q?ma(ne,ie,ur,Ur):fa(ne,ie,ur,Ur)}
                   `};return{name:"MatMul",shaderCache:{hint:`${ne};${r.activation};${q};${l}`,inputDependencies:St},getRunData:()=>({outputs:[{dims:d?d(i):i,dataType:e[0].dataType}],dispatchGroup:{x:Z[0],y:Z[1],z:Z[2]},programUniforms:Mt}),getShaderSource:lr}}}),Ld,$l,pm=f(()=>{Dt(),Ee(),or(),mi(),pa(),$d(),_a(),Ld=(e,r,i,a,l=!1,d,c=4,g=4,y=4,w="f32")=>{let F=Mt=>{switch(Mt){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${w}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Mt} is not supported.`)}},$=Mt=>{switch(Mt){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Mt} is not supported.`)}},m=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,R=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,W=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",q=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",ne=e?"row":"col",ie=e?"col":"row",Z=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${ne} / outWidth;
    let outCol = ${ne} % outWidth;

    let WRow = ${ie} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${ie} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${ie} % inChannels;
    var resData = ${$s(c,w)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${W} && xCol >= 0 && xCol < ${q}) {
      ${m}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${F(c)}
    }
    return resData;`,_e=e?r&&a?`
    let col = colIn * ${c};
    ${Z}`:`
    let col = colIn * ${c};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${Z}
    }
    return ${$s(c,w)}(0.0);`:a&&i?`
    let col = colIn * ${c};
    ${Z}`:`
    let col = colIn * ${c};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${Z}
    }
    return ${$s(c,w)}(0.0);`,ue=`${$(g)}`,we=$s(y,w),Ge=$s(e?c:g,w),Le=$s(e?g:c,w),st=Un(d,we,w);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Ge} {
      ${e?_e:ue}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Le} {
      ${e?ue:_e}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${we}) {
      let col = colIn * ${y};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${R}
      ${da(l)}
      ${st}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},$l=(e,r,i,a,l,d,c,g,y)=>{let w=r.format==="NHWC",F=w?e[0].dims[3]:e[0].dims[1],$=i[0],m=w?i[2]:i[3],R=w?i[1]:i[2],W=w?i[3]:i[1],q=w&&(F%4===0||F%3===0)&&W%4===0,ne=w?W:m*R,ie=w?m*R:W,Z=[8,8,1],_e=a<=8?[4,1,1]:[4,4,1],ue=[Math.ceil(ne/Z[0]/_e[0]),Math.ceil(ie/Z[1]/_e[1]),Math.ceil($/Z[2]/_e[2])];Mr("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${ue}`);let we=q?w&&F%4!==0?3:4:1,Ge=Z[1]*_e[1],Le=Z[0]*_e[0],st=Math.max(Z[0]*we,Z[1]),Mt=a%Ge===0,St=l%Le===0,sr=d%st===0,lr=q?[we,4,4]:[1,1,1],Nt=[{type:6,data:a},{type:6,data:l},{type:6,data:d},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];pi(r,Nt),Nt.push(...yt(e[0].dims,e[1].dims));let Ir=["rank","rank"];c&&(Nt.push(...yt(e[2].dims)),Ir.push("rank")),Nt.push(...yt(i));let Ur=ur=>{let Or=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];hi(r,Or);let zt=q?4:1,qt=dr(e[0].dataType),wr=`
      fn setOutputAtIndex(flatIndex : i32, value : ${q?`vec4<${qt}>`:qt}) {
        result[flatIndex] = ${q?`vec4<${qt}>`:qt}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${q?`vec4<${qt}>`:qt}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${q?"/ 4":""}, value);
      }`,Ke=tt("x",e[0].dataType,e[0].dims.length,we===3?1:we),dt=tt("w",e[1].dataType,e[1].dims.length,zt),Ht=[Ke,dt],$r=$t("result",e[0].dataType,i.length,zt);if(c){let ys=tt("bias",e[2].dataType,e[2].dims.length,zt);Ht.push(ys),wr+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${q?`vec4<${qt}>`:qt} {
          return bias[coords.${w?"w":"y"}${q?"/ 4":""}];
        }`}return`
        ${Al("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${ur.registerUniforms(Or).declareVariables(...Ht,$r)}
        ${wr}
        ${Ld(w,Mt,St,sr,c,r,lr[0],lr[1],lr[2],qt)}
        ${q?ma(_e,Z,qt,void 0,!w,st):fa(_e,Z,qt,void 0,!w,st,!1,void 0,g)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${we};${q};${Mt};${St};${sr};${Ge};${Le};${st}`,inputDependencies:Ir},getRunData:()=>({outputs:[{dims:y?y(i):i,dataType:e[0].dataType}],dispatchGroup:{x:ue[0],y:ue[1],z:ue[2]},programUniforms:Nt}),getShaderSource:Ur}}}),Dd,Fl,xo,Ol,zl,jd,Ll,Bd,hm=f(()=>{Dt(),Ee(),Kt(),or(),mi(),pa(),Dd=e=>{let r=1;for(let i=0;i<e.length;i++)r*=e[i];return r},Fl=e=>typeof e=="number"?[e,e,e]:e,xo=(e,r)=>r<=1?e:e+(e-1)*(r-1),Ol=(e,r,i,a=1)=>{let l=xo(r,a);return Math.floor((e[0]*(i-1)-i+l)/2)},zl=(e,r,i,a,l)=>{l==null&&(l=Ol(e,r[0],a[0]));let d=[0,0,0,i];for(let c=0;c<3;c++)e[c]+2*l>=r[c]&&(d[c]=Math.trunc((e[c]-r[c]+2*l)/a[c]+1));return d},jd=(e,r,i,a,l,d,c,g,y,w)=>{let F,$,m,R;if(e==="VALID"&&(e=0),typeof e=="number"){F={top:e,bottom:e,left:e,right:e,front:e,back:e};let W=zl([r,i,a,1],[g,y,w],1,[l,d,c],e);$=W[0],m=W[1],R=W[2]}else if(Array.isArray(e)){if(!e.every((q,ne,ie)=>q===ie[0]))throw Error(`Unsupported padding parameter: ${e}`);F={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let W=zl([r,i,a,1],[g,y,w],1,[l,d,c],e[0]);$=W[0],m=W[1],R=W[2]}else if(e==="SAME_UPPER"){$=Math.ceil(r/l),m=Math.ceil(i/d),R=Math.ceil(a/c);let W=($-1)*l+g-r,q=(m-1)*d+y-i,ne=(R-1)*c+w-a,ie=Math.floor(W/2),Z=W-ie,_e=Math.floor(q/2),ue=q-_e,we=Math.floor(ne/2),Ge=ne-we;F={top:_e,bottom:ue,left:we,right:Ge,front:ie,back:Z}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:F,outDepth:$,outHeight:m,outWidth:R}},Ll=(e,r,i,a,l,d=!1,c="channelsLast")=>{let g,y,w,F,$;if(c==="channelsLast")[g,y,w,F,$]=e;else if(c==="channelsFirst")[g,$,y,w,F]=e;else throw new Error(`Unknown dataFormat ${c}`);let[m,,R,W,q]=r,[ne,ie,Z]=Fl(i),[_e,ue,we]=Fl(a),Ge=xo(R,_e),Le=xo(W,ue),st=xo(q,we),{padInfo:Mt,outDepth:St,outHeight:sr,outWidth:lr}=jd(l,y,w,F,ne,ie,Z,Ge,Le,st),Nt=d?m*$:m,Ir=[0,0,0,0,0];return c==="channelsFirst"?Ir=[g,Nt,St,sr,lr]:c==="channelsLast"&&(Ir=[g,St,sr,lr,Nt]),{batchSize:g,dataFormat:c,inDepth:y,inHeight:w,inWidth:F,inChannels:$,outDepth:St,outHeight:sr,outWidth:lr,outChannels:Nt,padInfo:Mt,strideDepth:ne,strideHeight:ie,strideWidth:Z,filterDepth:R,filterHeight:W,filterWidth:q,effectiveFilterDepth:Ge,effectiveFilterHeight:Le,effectiveFilterWidth:st,dilationDepth:_e,dilationHeight:ue,dilationWidth:we,inShape:e,outShape:Ir,filterShape:r}},Bd=(e,r,i,a,l,d)=>{let c=d==="channelsLast";c?e[0].dims[3]:e[0].dims[1];let g=[64,1,1],y={x:i.map((ne,ie)=>ie)},w=[Math.ceil(Dd(y.x.map(ne=>i[ne]))/g[0]),1,1];Mr("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${w}`);let F=1,$=De.size(i),m=[{type:12,data:$},{type:12,data:a},{type:12,data:l},{type:12,data:r.strides},{type:12,data:r.dilations}];pi(r,m),m.push(...yt(e[0].dims,e[1].dims));let R=["rank","rank"],W=e.length===3;W&&(m.push(...yt(e[2].dims)),R.push("rank")),m.push(...yt(i));let q=ne=>{let ie=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:a.length},{name:"pads",type:"u32",length:l.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];hi(r,ie);let Z=1,_e=dr(e[0].dataType),ue=tt("x",e[0].dataType,e[0].dims.length,F),we=tt("W",e[1].dataType,e[1].dims.length,Z),Ge=[ue,we],Le=$t("result",e[0].dataType,i.length,Z),st="";if(W){let sr=tt("bias",e[2].dataType,e[2].dims.length,Z);Ge.push(sr),st+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${_e} {
          return bias[${c?At("coords",4,5):At("coords",1,5)}];
        }`}let Mt=$s(F,_e),St=Un(r,Mt,_e);return`
            ${st}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${ue.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${we.getByIndices("aIndices")};
            }
          ${ne.registerUniforms(ie).declareVariables(...Ge,Le)}
          ${ne.mainStart()}
          ${ne.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Le.offsetToIndices("global_idx")};
              let batch = ${At("coords",0,ue.rank)};
              let d2 = ${c?At("coords",ue.rank-1,ue.rank):At("coords",1,ue.rank)};
              let xFRCCorner = vec3<u32>(${c?At("coords",1,ue.rank):At("coords",2,ue.rank)},
              ${c?At("coords",2,ue.rank):At("coords",3,ue.rank)},
              ${c?At("coords",3,ue.rank):At("coords",4,ue.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${c?At("uniforms.x_shape",1,ue.rank):At("uniforms.x_shape",2,ue.rank)};
              let xShapeZ = ${c?At("uniforms.x_shape",2,ue.rank):At("uniforms.x_shape",3,ue.rank)};
              let xShapeW = ${c?At("uniforms.x_shape",3,ue.rank):At("uniforms.x_shape",4,ue.rank)};
              let xShapeU = ${c?At("uniforms.x_shape",4,ue.rank):At("uniforms.x_shape",1,ue.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${c?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${c?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${c?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${c?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${W?"value = value + getBiasByOutputCoords(coords)":""};
              ${St}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${c};${F};${W}`,inputDependencies:R},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:m}),getShaderSource:q}}}),Dl,Rd,mm=f(()=>{Dt(),Kt(),or(),mi(),Dl=(e,r,i,a)=>{let l=e.length>2,d=l?"value += b[output_channel];":"",c=e[0].dims,g=e[1].dims,y=r.format==="NHWC",w=y?i[3]:i[1],F=w/r.group,$=y&&F>=4?ir(w):1,m=De.size(i)/$,R=[{type:12,data:m},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:F}];pi(r,R),R.push(...yt(c,[g[0],g[1],g[2],g[3]/$]));let W=l?["rank","rank","rank"]:["rank","rank"];R.push(...yt([i[0],i[1],i[2],i[3]/$]));let q=ne=>{let ie=$t("output",e[0].dataType,i.length,$),Z=dr(ie.type.tensor),_e=Un(r,ie.type.value,Z),ue=tt("x",e[0].dataType,c.length),we=tt("w",e[1].dataType,g.length,$),Ge=[ue,we];l&&Ge.push(tt("b",e[2].dataType,e[2].dims,$));let Le=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];hi(r,Le);let st=y?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${ue.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${we.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${ue.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${we.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${ne.registerUniforms(Le).declareVariables(...Ge,ie)}

  ${ne.mainStart()}
    ${ne.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${ie.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${y?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${y?1:2}], outputIndices[${y?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${$} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${y?2:1}];

    var value: ${ie.type.value} = ${ie.type.value}(0);
    ${st}
    ${d}
    ${_e}
    ${ie.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${$}`,inputDependencies:W},getRunData:()=>({outputs:[{dims:a?a(i):i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:R}),getShaderSource:q}},Rd=(e,r,i,a)=>{let l=e.length>2,d=ir(i[3]),c=ir(i[2]),g=De.size(i)/d/c,y=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/d],w=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/d],F=[i[0],i[1],i[2],i[3]/d],$=[{type:12,data:g},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];pi(r,$),$.push(...yt(y,w,F));let m=(c-1)*r.strides[1]+w[1],R=W=>{let q=$t("output",e[0].dataType,F.length,d),ne=dr(q.type.tensor),ie=Un(r,q.type.value,ne),Z=tt("x",e[0].dataType,y.length,d),_e=tt("w",e[1].dataType,w.length,d),ue=[Z,_e];l&&ue.push(tt("b",e[2].dataType,e[2].dims,d));let we=l?"value += b[output_channel];":"",Ge=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return hi(r,Ge),`
  ${W.registerUniforms(Ge).declareVariables(...ue,q)}
  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${c}u;
    let col = (index1 % width1) * ${c}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${Z.type.value}, ${m}>;
    var values: array<${q.type.value}, ${c}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${w[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${m}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${Z.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${Z.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${w[1]}; w_width++) {
          let w_val = ${_e.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${c}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${c}u; i++) {
      var value = values[i];
      ${we}
      ${ie}
      ${q.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${d};${c};${m};${w[0]};${w[1]}`,inputDependencies:l?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:a?a(i):i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:$}),getShaderSource:R}}}),ya,Nd,Ud,Vd=f(()=>{Dt(),Kt(),_a(),or(),mi(),ya=(e,r,i,a,l=!1,d)=>{let c=e[0].dims,g=e[1].dims,y=c[c.length-2],w=g[g.length-1],F=c[c.length-1],$=ir(w),m=ir(F),R=ir(y),W=De.size(i)/$/R,q=e.length>2,ne=a?a.slice(0,-2):i.slice(0,-2),ie=[De.size(ne),y,w],Z=[{type:12,data:W},{type:12,data:y},{type:12,data:w},{type:12,data:F}];pi(r,Z),Z.push(...yt(ne,c,g)),q&&Z.push(...yt(e[2].dims)),Z.push(...yt(ie));let _e=ue=>{let we=Ha("batch_dims",e[0].dataType,ne.length),Ge=tt("a",e[0].dataType,c.length,m),Le=tt("b",e[1].dataType,g.length,$),st=$t("output",e[0].dataType,ie.length,$),Mt=dr(st.type.tensor),St=Un(r,st.type.value,Mt),sr=[Ge,Le],lr="";if(q){let wr=l?$:1;sr.push(tt("bias",e[2].dataType,e[2].dims.length,wr)),lr=`${l?`value += bias[col / ${wr}];`:`value += ${st.type.value}(bias[row + i]);`}`}let Nt=c.slice(0,-2),Ir=g.slice(0,-2),Ur=bo(Nt,ne),ur=bo(Ir,ne),Or=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];hi(r,Or);let zt=(wr,Ke)=>{let dt=wr.rank,Ht=wr.name;if(dt===2)return`var ${Ht}_indices = ${wr.type.indices}(0u, 0u);`;let $r=we.rank,ys=`var ${Ht}_indices: ${wr.type.indices};`;for(let Ms=dt-2-1,Fo=$r-1;Ms>=0;Ms--,Fo--)ys+=`
${Ht}_indices[${Ms}] = ${$r>1?`batch_indices[${Fo}]`:"batch_indices"};`;return Ke.forEach(Ms=>{ys+=`
${Ht}_indices[${Ms}] = 0;`}),ys+=`${Ht}_indices[${dt-2}] = 0u;
                     ${Ht}_indices[${dt-1}] = 0u;`,ys},qt=()=>{let wr=`var a_data: ${Ge.type.value};`;for(let Ke=0;Ke<m;Ke++)wr+=`
              let b_data${Ke} = b[(b_offset + (k + ${Ke}) * uniforms.N + col) / ${$}];`;for(let Ke=0;Ke<R;Ke++){wr+=`a_data = a[(a_offset + (row + ${Ke}) * uniforms.K + k) / ${m}];`;for(let dt=0;dt<m;dt++)wr+=`
            values[${Ke}] = fma(${Le.type.value}(a_data${m===1?"":`[${dt}]`}), b_data${dt}, values[${Ke}]);
`}return wr};return`
  ${ue.registerUniforms(Or).registerInternalVariables(we).declareVariables(...sr,st)}
  ${ue.mainStart()}
    ${ue.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${$})) * ${$};
    var index1 = global_idx / (uniforms.N / ${$});
    let stride1 = uniforms.M / ${R};
    let row = (index1 % stride1) * ${R};
    let batch = index1 / stride1;

    ${i.length===2?"":`let batch_indices = ${we.offsetToIndices("batch")};`}
    ${zt(Ge,Ur)}
    let a_offset = ${Ge.indicesToOffset("a_indices")};
    ${zt(Le,ur)}
    let b_offset = ${Le.indicesToOffset("b_indices")};
    var values: array<${st.type.value}, ${R}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${m}) {
      ${qt()}
    }
    for (var i = 0u; i < ${R}u; i++) {
      var value = values[i];
      ${lr}
      ${St}
      let cur_indices = ${st.type.indices}(batch, row + i, col);
      let offset = ${st.indicesToOffset("cur_indices")};
      ${st.setByOffset(`offset / ${$}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${$};${m};${R};${l}`,inputDependencies:q?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:d?d(i):i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:Z}),getShaderSource:_e}},Nd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Ud=e=>{Nd(e.inputs);let r=gs.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let i=r[r.length-1],a=e.inputs[0].dims[e.inputs[0].dims.length-1];i<8&&a<8?e.compute(ya(e.inputs,{activation:""},r)):e.compute(ga(e.inputs,{activation:""},r))}}),Wd,wa,Gd,To,jl,Bl,Rl,qd,Nl,ki=f(()=>{Kt(),pm(),hm(),_a(),mm(),mi(),Vd(),Nn(),Wd=(e,r,i,a,l,d)=>{let c=e[0],g=e.slice(d?1:2,d?3:4),y=g.length,w=r[0],F=r.slice(2).map((m,R)=>m+(m-1)*(i[R]-1)),$=g.map((m,R)=>m+a[R]+a[R+y]).map((m,R)=>Math.floor((m-F[R]+l[R])/l[R]));return $.splice(0,0,c),$.splice(d?3:1,0,w),$},wa=[2,3,1,0],Gd=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let i=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],a=e[1].dims[1]*r.group;if(i!==a)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let l=e[0].dims.length-2;if(r.dilations.length!==l)throw new Error(`dilations should be ${l}D`);if(r.strides.length!==l)throw new Error(`strides should be ${l}D`);if(r.pads.length!==l*2)throw new Error(`pads should be ${l*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},To=(e,r)=>{let i=e.kernelShape.slice();i.length<r[1].dims.length-2&&i.push(...Array(r[1].dims.length-2-i.length).fill(0));for(let d=2;d<r[1].dims.length;++d)i[d-2]===0&&(i[d-2]=r[1].dims[d]);let a=e.pads.slice();Tr.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,i,a,e.format==="NHWC",e.autoPad);let l=Object.assign({},e);return Object.assign(l,{kernelShape:i,pads:a}),l},jl=e=>{let r=ua(e),i=e.format,a=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],l=e.dilations,d=e.group,c=e.kernel_shape,g=e.pads,y=e.strides,w=e.w_is_const();return{autoPad:a,format:i,dilations:l,group:d,kernelShape:c,pads:g,strides:y,wIsConst:w,...r,cacheKey:`${e.format};${r.activation};`}},Bl=(e,r,i,a)=>{let l=i.format==="NHWC",d=Wd(r[0].dims,r[1].dims,i.dilations,i.pads,i.strides,l);if(i.group!==1){let Ge=[r[0]];if(l){let Le=e.kernelCustomData.wT??e.compute(Qs(r[1],wa),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Le),Ge.push(Le)}else Ge.push(r[1]);r.length===3&&Ge.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&l&&r[1].dims[0]===i.group&&r[1].dims[1]===1&&i.dilations[0]===1&&i.dilations[1]===1?e.compute(Rd(Ge,i,d,a),{inputs:Ge}):e.compute(Dl(Ge,i,d,a),{inputs:Ge});return}let c=r.length===3,g=r[0].dims[l?1:2],y=r[0].dims[l?2:3],w=r[0].dims[l?3:1],F=r[1].dims[2],$=r[1].dims[3],m=d[l?1:2],R=d[l?2:3],W=d[l?3:1],q=l&&F===g&&$===y&&i.pads[0]===0&&i.pads[1]===0;if(q||F===1&&$===1&&i.dilations[0]===1&&i.dilations[1]===1&&i.strides[0]===1&&i.strides[1]===1&&i.pads[0]===0&&i.pads[1]===0){let Ge=d[0],Le,st,Mt,St=[];if(l){let Nt=e.kernelCustomData.wT??e.compute(Qs(r[1],wa),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];if(i.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Nt),q){let Ir=g*y*w;Le=r[0].reshape([1,Ge,Ir]),st=Nt.reshape([1,Ir,W]),Mt=[1,Ge,W]}else Le=r[0].reshape([Ge,g*y,w]),st=Nt.reshape([1,w,W]),Mt=[Ge,m*R,W];St.push(Le),St.push(st)}else Le=r[0].reshape([Ge,w,g*y]),st=r[1].reshape([1,W,w]),Mt=[Ge,W,m*R],St.push(st),St.push(Le);c&&St.push(r[2]);let sr=Mt[2],lr=St[0].dims[St[0].dims.length-1];sr<8&&lr<8?e.compute(ya(St,i,d,Mt,l,a),{inputs:St}):e.compute(ga(St,i,d,Mt,l,a),{inputs:St});return}let ne=!0,ie=e.kernelCustomData.wT??e.compute(Qs(r[1],wa),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ie);let Z=[r[0],ie];c&&Z.push(r[2]);let _e=l?m*R:W,ue=l?W:m*R,we=F*$*w;e.compute($l(Z,i,d,_e,ue,we,c,ne,a),{inputs:Z})},Rl=(e,r)=>{let i=r.format==="NHWC",a=[e.inputs[0].reshape(i?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&a.push(e.inputs[2]);let l=[0,r.pads[0],0,r.pads[1]],d=[1].concat(r.strides),c=[1].concat(r.dilations),g=[1].concat(r.kernelShape),y=To({...r,pads:l,strides:d,dilations:c,kernelShape:g},a);Bl(e,a,y,w=>i?[w[0],w[2],w[3]]:[w[0],w[1],w[3]])},qd=(e,r,i)=>{let a=i.format==="NHWC"?"channelsLast":"channelsFirst",l=To(i,r),d=i.autoPad==="NOTSET"?i.pads:i.autoPad,c=Ll(r[0].dims,r[1].dims,i.strides,i.dilations,d,!1,a);e.compute(Bd(r,l,c.outShape,[c.filterDepth,c.filterHeight,c.filterWidth],[c.padInfo.front,c.padInfo.top,c.padInfo.left],a))},Nl=(e,r)=>{if(Gd(e.inputs,r),e.inputs[0].dims.length===3)Rl(e,r);else if(e.inputs[0].dims.length===5)qd(e,e.inputs,r);else{let i=To(r,e.inputs);Bl(e,e.inputs,i)}}}),Kd,Hd,fm=f(()=>{Dt(),Ee(),or(),mi(),pa(),$d(),_a(),Kd=(e,r=!1,i,a,l=4)=>{let d=ne=>{switch(ne){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${a}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${ne} is not supported.`)}},c=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,g=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,y=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",F=e?"row":"col",$=e?"col":"row",m=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${F} / outWidth;
      let outCol = ${F} % outWidth;

      let WRow = ${$} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${$} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${y}) || fract(xR) > 0.0) {
        return ${a}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${w}) || fract(xC) > 0.0) {
        return ${a}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${$} % inChannels;
      ${c}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${l}];`,R=e?`
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${m}
      }
      return ${a}(0.0);`:`
      let col = colIn * ${l};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${m}
      }
      return ${a}(0.0);`,W=`
      let col = colIn * ${l};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${d(l)}
      }
      return ${a}(0.0);
      `,q=Un(i,a);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${a} {
    ${e?R:W}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${a} {
    ${e?W:R}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${a}) {
    let col = colIn * ${l};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${da(r)}
      ${q}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${l}] = value;
    }
  }`},Hd=(e,r,i,a,l,d,c,g)=>{let y=r.format==="NHWC",w=y?e[0].dims[3]:e[0].dims[1],F=i[0],$=y?i[2]:i[3],m=y?i[1]:i[2],R=y?i[3]:i[1],W=y&&w%4===0&&w%3&&R%4===0,q=y?R:$*m,ne=y?$*m:R,ie=[8,8,1],Z=a<=8?[4,1,1]:[4,4,1],_e=[Math.ceil(q/ie[0]/Z[0]),Math.ceil(ne/ie[1]/Z[1]),Math.ceil(F/ie[2]/Z[2])];Mr("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${_e}`);let ue=W?4:1,we=Math.max(ie[0]*ue,ie[1]),Ge=W?4:1,Le=[r.kernelShape[y?1:2],r.kernelShape[y?2:3]],st=[Le[0]+(r.dilations[0]<=1?0:(Le[0]-1)*(r.dilations[0]-1)),Le[1]+(r.dilations[1]<=1?0:(Le[1]-1)*(r.dilations[1]-1))],Mt=[st[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),st[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],St=[{type:6,data:a},{type:6,data:l},{type:6,data:d},{type:6,data:r.strides},{type:6,data:r.dilations},{type:6,data:Le},{type:6,data:Mt}];pi(r,St),St.push(...yt(e[0].dims,e[1].dims));let sr=["rank","rank"];c&&(St.push(...yt(e[2].dims)),sr.push("rank")),St.push(...yt(i));let lr=Nt=>{let Ir=tt("x",e[0].dataType,e[0].dims.length,Ge),Ur=tt("w",e[1].dataType,e[1].dims.length,1),ur=$t("result",e[0].dataType,i.length,Ge),Or=[Ir,Ur],zt="";if(c){let Ke=tt("bias",e[2].dataType,e[2].dims.length,Ge);Or.push(Ke),zt+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Ke.type.value} {
            return bias[coords.${y?"w":"y"}${W?"/ 4":""}];
          }`}let qt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:Le.length},{name:"pads",type:"i32",length:Mt.length}];hi(r,qt);let wr=dr(e[0].dataType,1);if(wr!=="f16"&&wr!=="f32")throw new Error(`elemType ${wr} is not supported.`);return`
        ${Al("uniforms.result_strides")}
        ${Nt.registerUniforms(qt).declareVariables(...Or,ur)};
        ${zt}
        ${Kd(y,c,r,Ir.type.value,ue)}
        ${W?ma(Z,ie,wr,void 0,!y,we):fa(Z,ie,wr,void 0,!y,we,!1,void 0,g)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${r.cacheKey};${Z};${ie};${W}`,inputDependencies:sr},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:_e[0],y:_e[1],z:_e[2]},programUniforms:St}),getShaderSource:lr}}}),Xd,ba,gm=f(()=>{Dt(),Ee(),Kt(),or(),Xd=(e,r,i,a,l,d=!1,c,g,y=!1)=>{let w=y?1:2,F=y?2:3,$=y?3:1,m=d?2:1,R=`
  fn setOutputAtIndex(flatIndex : u32, value : ${d?`vec4<${c}>`:c}) {
    result[flatIndex] = ${d?`vec4<${c}>`:c}(value);
  }`;a&&(R+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${d?`vec4<${c}>`:c} {
      return bias[coords.${y?"w":"y"}${d?"/ 4":""}];
    }`);let W=d?4:1,q=tt("W",r[1].dataType,r[1].dims.length,W),ne=tt("Dy",r[0].dataType,r[0].dims.length,W),ie=[ne,q];a&&ie.push(tt("bias",r[2].dataType,[i[$]].length,W));let Z=$t("result",r[0].dataType,i.length,W),_e=`{
        let batch: u32 = ${l?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${l?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${l?"global_id.y":"workgroup_id.y"} * ${m};
        let d1: u32 = ${l?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${c}>, ${m}>;
        for (var i = 0; i < ${m}; i++) {
          dotProd[i] = vec4<${c}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${c}(dyCorner.x) + ${c}(wR)) / ${c}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${c}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${c}(dyCorner.y) + ${c}(wC)) / ${c}(uniforms.strides.y);
            let dyC2 = (${c}(dyCorner.y) + 1.0 + ${c}(wC)) / ${c}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${c}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${c}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${ne.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${c}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${ne.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${c}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${$}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${ne.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${c}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${q.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${ne.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${c}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${m}; i = i + 1) {
          let value = dotProd[i] + ${a?"bias[c+i]":`vec4<${c}>(0.0)`};
          ${Z.set("batch","r","c + i","d1","value")};
        }
      }`,ue=`
          let outputIndices = ${Z.offsetToIndices("global_idx")};
          let batch = ${Z.indicesGet("outputIndices",0)};
          let d1 = ${Z.indicesGet("outputIndices",$)};
          let r = ${Z.indicesGet("outputIndices",w)};
          let c = ${Z.indicesGet("outputIndices",F)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${c}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${c}(dyRCorner) + ${c}(wR)) / ${c}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${c}(uniforms.Dy_shape[${w}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${c}(dyCCorner) + ${c}(wC)) / ${c}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${c}(uniforms.Dy_shape[${F}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${y?ne.get("batch","idyR","idyC","inputChannel"):ne.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${q.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${a?"bias[d1]":`${c}(0.0)`};
          ${Z.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(g).declareVariables(...ie,Z)}
  ${R}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${d?_e:ue}}`},ba=(e,r,i)=>{let a=e.length>2,l=r.outputShape,d=De.size(l),c=[Math.ceil(d/64),1,1];Mr("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${c}`);let g=r.format==="NHWC",y=["rank","rank"],w=[r.strides[0],r.strides[1]],F=[r.kernelShape[g?1:2],r.kernelShape[g?2:3]],$=[r.dilations[0],r.dilations[1]],m=[F[0]+(r.dilations[0]<=1?0:(r.kernelShape[g?1:2]-1)*(r.dilations[0]-1)),F[1]+(r.dilations[1]<=1?0:(r.kernelShape[g?2:3]-1)*(r.dilations[1]-1))],R=[m[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),m[1]-1-Math.floor(r.pads[1]+r.pads[3])/2],W=!1,q=r.group,ne=e[1].dims,ie=ne[0]/q,Z=ne[1],_e=[{type:12,data:d},{type:12,data:w},{type:12,data:F},{type:12,data:$},{type:12,data:m},{type:6,data:R},{type:12,data:ie},{type:12,data:Z},...yt(e[0].dims,e[1].dims)];a&&(_e.push(...yt(e[2].dims)),y.push("rank")),_e.push(...yt(l));let ue=c[1]===1&&c[2]===1,we=Ge=>{let Le=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:w.length},{name:"filter_dims",type:"u32",length:F.length},{name:"dilations",type:"u32",length:F.length},{name:"effective_filter_dims",type:"u32",length:m.length},{name:"pads",type:"i32",length:R.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],st=dr(e[0].dataType);return`${Xd(Ge,e,l,a,ue,W,st,Le,g)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};`,inputDependencies:y},getRunData:()=>({dispatchGroup:{x:c[0],y:c[1],z:c[2]},outputs:[{dims:i?i(l):l,dataType:e[0].dataType}],programUniforms:_e}),getShaderSource:we}}}),Qd,Yd,Jd,ko,Zd,ep,tp,Eo,rp,sp,_m=f(()=>{fm(),gm(),mi(),Nn(),Qd=(e,r,i,a,l,d)=>(e-1)*r+i+(a-1)*l+1-d,Yd=(e,r,i,a,l)=>{let d=Math.floor(e/2);r==="SAME_UPPER"?(i[a]=d,i[l]=e-d):r==="SAME_LOWER"&&(i[a]=e-d,i[l]=d)},Jd=(e,r,i,a,l,d,c,g,y,w)=>{let F=e.length-2,$=w.length===0;y.length<F&&y.push(...Array(F-y.length).fill(0));let m=e[0],R=r[g?3:1]*l;for(let W=0,q=e.length-F-(g?1:0);W<F;++W,++q){let ne=e[q],ie=$?ne*c[W]:w[W],Z=Qd(ne,c[W],d[W],r[q],i[W],ie);Yd(Z,a,d,W,W+F),$&&w.push(c[W]*(ne-1)+y[W]+(r[q]-1)*i[W]+1-d[W]-d[W+F])}w.splice(0,0,m),w.splice(g?3:1,0,R)},ko=(e,r)=>{let i=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce(($,m)=>$*m,1)===0){i.length=0;for(let $=2;$<r[1].dims.length;++$)i.push(r[1].dims[$])}let a=e.format==="NHWC";i.splice(0,0,r[1].dims[0]),i.splice(a?3:1,0,r[1].dims[1]);let l=e.pads.slice(),d=e.outputShape.slice(),c=e.outputPadding.slice(),g=r[0].dims,y=e.dilations.slice();if(y.reduce(($,m)=>$+m,0)===0){let $=r[0].dims.length-2;y=new Array($).fill(1)}let w=e.strides.slice();if(w.reduce(($,m)=>$+m,0)===0){let $=r[0].dims.length-2;w=new Array($).fill(1)}Jd(g,i,y,e.autoPad,e.group,l,w,a,c,d);let F=Object.assign({},e);return Object.assign(F,{kernelShape:i,pads:l,outputPadding:c,outputShape:d,dilations:y,strides:w}),F},Zd=e=>{let r=ua(e),i=e.format,a=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],l=e.dilations,d=e.group,c=e.kernelShape,g=e.pads,y=e.strides,w=e.wIsConst(),F=e.outputPadding,$=e.outputShape;return{autoPad:a,format:i,dilations:l,group:d,kernelShape:c,outputPadding:F,outputShape:$,pads:g,strides:y,wIsConst:w,...r,cacheKey:`${e.format};${r.activation};`}},ep=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let i=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],a=e[1].dims[0];if(i!==a)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let l=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==l))throw new Error("invalid bias");let d=e[0].dims.length-2;if(r.dilations.reduce((c,g)=>c+g,0)>0&&r.dilations.length!==d)throw new Error(`dilations should be ${d}D`);if(r.strides.reduce((c,g)=>c+g,0)>0&&r.strides.length!==d)throw new Error(`strides should be ${d}D`);if(r.pads.reduce((c,g)=>c+g,0)>0&&r.pads.length!==d*2)throw new Error(`pads should be ${d*2}D`);if(r.outputPadding.length!==d&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${d}D`);if(r.kernelShape.reduce((c,g)=>c+g,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},tp=[2,3,1,0],Eo=(e,r,i)=>{let a=ko(i,r),l=i.format==="NHWC",d=a.outputShape,c=d[l?3:1],g=r[0].dims[l?3:1];if(a.group!==1||c===1&&g===1){e.compute(ba(r,a));return}let y=d[l?1:2],w=d[l?2:3],F=r[1].dims[2],$=r[1].dims[3],m=l?y*w:c,R=l?c:y*w,W=F*$*g,q=!0,ne=e.kernelCustomData.wT??e.compute(Qs(r[1],tp),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ne);let ie=[r[0],ne],Z=r.length===3;Z&&(!l&&r[2].dims.length===1?ie.push(r[2].reshape([r[2].dims[0],1,1])):ie.push(r[2])),e.compute(Hd(ie,a,d,m,R,W,Z,q),{inputs:ie})},rp=(e,r)=>{let i=r.format==="NHWC",a=[e.inputs[0].reshape(i?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&a.push(e.inputs[2]);let l=r.kernelShape;(l.length===0||l[0]===0)&&(l=[e.inputs[1].dims[2]]);let d=r.dilations;(d.length===0||d[0]===0)&&(d=[1]);let c=r.strides;(c.length===0||c[0]===0)&&(c=[1]);let g=r.pads;g.length===0&&(g=[0,0]),g=[0,g[0],0,g[1]],c=[1].concat(c),d=[1].concat(d),l=[1].concat(l);let y=ko({...r,pads:g,strides:c,dilations:d,kernelShape:l},a);e.compute(ba(a,y,w=>i?[w[0],w[2],w[3]]:[w[0],w[1],w[3]]))},sp=(e,r)=>{ep(e.inputs,r),e.inputs[0].dims.length===3?rp(e,r):Eo(e,e.inputs,r)}}),np,va,ip,ym=f(()=>{Dt(),Kt(),mr(),or(),np=(e,r,i,a)=>{let l=De.size(r),d=r.length,c=tt("input",e,d),g=$t("output",e,d),y=i.dataType===6?i.getInt32Array()[0]:Number(i.getBigInt64Array()[0]),w=De.normalizeAxis(y,d),F=$=>{let m=` i32(${c.indicesGet("inputIndices","uniforms.axis")}) `,R=At("uniforms.input_shape","uniforms.axis",d),W=a.reverse?m+(a.exclusive?" + 1":""):"0",q=a.reverse?R:m+(a.exclusive?"":" + 1");return`
                ${$.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(c,g)}
                ${$.mainStart()}
                  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${g.offsetToIndices("global_idx")};
                  var sum = ${g.type.value}(0);
                  let first : i32 = ${W};
                  let last : i32 = ${q};
                  for (var i : i32 = first; i < last; i++) {
                    ${c.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${c.getByIndices("inputIndices")};
                  }
                  ${g.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:a.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},{type:12,data:w},...yt(r,r)]}),getShaderSource:F}},va=(e,r)=>{let i=e.inputs[0].dims,a=e.inputs[0].dataType,l=e.inputs[1];e.compute(np(a,i,l,r),{inputs:[0]})},ip=e=>{let r=e.exclusive===1,i=e.reverse===1;return er({exclusive:r,reverse:i})}}),op,wm,ap,lp,cp,Po=f(()=>{Dt(),Kt(),mr(),or(),op=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},wm=(e,r,i,a)=>{let l=[];l.push(`fn perm(i: ${a.type.indices}) -> ${i.type.indices} {
    var a: ${i.type.indices};`);for(let d=0;d<r;++d)l.push(i.indicesSet("a",e[d],`i[${d}]`));return l.push("return a;}"),l.join(`
`)},ap=(e,r)=>{let i,a,l,d,c,g,y=r.format==="NHWC",w=r.blocksize,F=r.mode==="DCR";y?([i,a,l,d]=e.dims,c=F?[i,a,l,w,w,d/w**2]:[i,a,l,d/w**2,w,w],g=F?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([i,a,l,d]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],c=F?[i,w,w,d/w**2,a,l]:[i,d/w**2,w,w,a,l],g=F?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let $=e.reshape(c),m=$.dims.length,R=e.dataType,W=tt("a",R,m),q=$t("output",R,m),ne=ie=>`
  ${ie.registerUniform("output_size","u32").declareVariables(W,q)}

  ${wm(g,m,W,q)}

  ${ie.mainStart()}
    ${ie.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${q.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${q.setByOffset("global_idx",W.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:ie=>{let Z=y?[i,a*w,l*w,d/w**2]:[i,d/w**2,a*w,l*w],_e=De.size(Z),ue=$.dims,we=De.sortBasedOnPerm(ue,g);return{outputs:[{dims:Z,dataType:ie[0].dataType}],dispatchGroup:{x:Math.ceil(_e/64)},programUniforms:[{type:12,data:_e},...yt(ue,we)]}},getShaderSource:ne}},lp=(e,r)=>{op(e.inputs),e.compute(ap(e.inputs[0],r))},cp=e=>er({blocksize:e.blocksize,mode:e.mode,format:e.format})}),Ma,Co,Ul,up,dp,xa,bm,Vl,pp,hp,mp,vm=f(()=>{Dt(),Kt(),mr(),or(),Ma="[a-zA-Z]|\\.\\.\\.",Co="("+Ma+")+",Ul="^"+Co+"$",up="("+Co+",)*"+Co,dp="^"+up+"$",xa=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let i=this.symbolToIndices.get(e);i===void 0?i=[r]:i.push(r),this.symbolToIndices.set(e,i)}},bm=class{constructor(e,r){var l;this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[i,a]=r.includes("->")?r.split("->",2):[r,""];if(!i.match(RegExp(dp)))throw new Error("Invalid LHS term");if(i.split(",").forEach((d,c)=>{let g=e[c].dims.slice();if(!d.match(RegExp(Ul)))throw new Error("Invalid LHS term");let y=this.processTerm(d,!0,g,c);this.lhs.push(y)}),a==="")a+=[...this.symbolToInfo.entries()].filter(([d,c])=>c.count===1||d==="...").map(([d])=>d).join("");else if(!a.match(RegExp(Co)))throw new Error("Invalid RHS");(l=a.match(RegExp(Ma,"g")))==null||l.forEach(d=>{if(d==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let c=this.symbolToInfo.get(d);if(c===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(c.dimValue)}}),this.rhs=this.processTerm(a,!1,this.outputDims)}addSymbol(e,r,i){let a=this.symbolToInfo.get(e);if(a!==void 0){if(a.dimValue!==r&&a.count!==1)throw new Error("Dimension mismatch");a.count++,a.inputIndices.push(i)}else a={count:1,dimValue:r,inputIndices:[i]};this.symbolToInfo.set(e,a)}processTerm(e,r,i,a=-1){let l=i.length,d=!1,c=[],g=0;if(!e.match(RegExp(Ul))&&!r&&e!=="")throw new Error("Invalid LHS term");let y=e.match(RegExp(Ma,"g")),w=new xa(a);return y==null||y.forEach((F,$)=>{if(F==="..."){if(d)throw new Error("Only one ellipsis is allowed per input term");d=!0;let m=l-y.length+1;if(m<0)throw new Error("Ellipsis out of bounds");if(c=i.slice(g,g+m),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let R=0;R<c.length;R++){let W=String.fromCharCode(48+R);w.addSymbol(W,$+R),this.addSymbol(W,i[g++],a)}}else w.addSymbol(F,$+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(F,i[g++],a)}),w}},Vl=e=>e+"_max",pp=(e,r,i,a)=>{let l=e.map(w=>w.length).map((w,F)=>tt(`input${F}`,r,w)),d=De.size(a),c=$t("output",r,a.length),g=[...i.symbolToInfo.keys()].filter(w=>!i.rhs.symbolToIndices.has(w)),y=w=>{let F=[],$="var prod = 1.0;",m="var sum = 0.0;",R="sum += prod;",W=[],q=[],ne=[],ie=[],Z=i.symbolToInfo.size===i.rhs.symbolToIndices.size;i.symbolToInfo.forEach((ue,we)=>{var Ge;if(i.rhs.symbolToIndices.has(we)){let Le=(Ge=i.rhs.symbolToIndices.get(we))==null?void 0:Ge[0];Le!==void 0&&i.lhs.forEach((st,Mt)=>{if(ue.inputIndices.includes(Mt)){let St=st.symbolToIndices.get(we);if(St===void 0)throw new Error("Invalid symbol error");St.forEach(sr=>{F.push(`${l[Mt].indicesSet(`input${Mt}Indices`,sr,c.indicesGet("outputIndices",Le))}`)})}})}else i.lhs.forEach((Le,st)=>{if(ue.inputIndices.includes(st)){let Mt=Le.symbolToIndices.get(we);if(Mt===void 0)throw new Error("Invalid symbol error");Mt.forEach(St=>{W.push(`${l[st].indicesSet(`input${st}Indices`,St,`${we}`)}`)}),ie.push(`prod *= ${l[st].getByIndices(`input${st}Indices`)};`)}}),q.push(`for(var ${we}: u32 = 0; ${we} < uniforms.${Vl(we)}; ${we}++) {`),ne.push("}")});let _e=Z?[...F,`let sum = ${l.map((ue,we)=>ue.getByIndices(`input${we}Indices`)).join(" * ")};`]:[...F,m,...q,...W,$,...ie,R,...ne];return`
            ${w.registerUniforms(g.map(ue=>({name:`${Vl(ue)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...l,c)}

            ${w.mainStart()}
            ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${c.offsetToIndices("global_idx")};
            ${l.map((ue,we)=>`var input${we}Indices: ${l[we].type.indices};`).join(`
`)}
            ${_e.join(`
`)};
            ${c.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:i.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let w=g.filter($=>i.symbolToInfo.has($)).map($=>{var m;return{type:12,data:((m=i.symbolToInfo.get($))==null?void 0:m.dimValue)||0}});w.push({type:12,data:d});let F=e.map(($,m)=>[...yt($)]).reduce(($,m)=>$.concat(m),w);return F.push(...yt(a)),{outputs:[{dims:a,dataType:r}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:F}},getShaderSource:y}},hp=(e,r)=>{let i=new bm(e.inputs,r.equation),a=i.outputDims,l=e.inputs.map((d,c)=>d.dims);e.compute(pp(l,e.inputs[0].dataType,i,a))},mp=e=>{let r=e.equation.replace(/\s+/g,"");return er({equation:r})}}),Wl,Gl,fp,ql,gp,Mm=f(()=>{Dt(),Kt(),or(),Wl=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,i=Array.from(e[1].getBigInt64Array(),Number),a=i.length<r.length?0:i.length-r.length,l=r.length<i.length?0:r.length-i.length;for(;a<i.length&&l<r.length;++a,++l)if(i[a]!==r[l]&&i[a]!==1&&r[l]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Gl=(e,r)=>{let i=e.length-r.length,a=[];for(let l=0;l<i;++l)a.push(e[l]);for(let l=0;l<r.length;++l)a.push(r[l]===1?e[l+i]:r[l]);return a},fp=(e,r)=>e.length>r.length?Gl(e,r):Gl(r,e),ql=e=>{let r=e[0].dims,i=Array.from(e[1].getBigInt64Array(),Number),a=fp(r,i),l=e[0].dataType,d=l===9?4:1,c=Math.ceil(De.size(a)/d),g=w=>{let F=tt("input",l,r.length,d),$=$t("output",l,a.length,d),m;if(l===9){let R=(W,q,ne="")=>`
          let outputIndices${q} = ${$.offsetToIndices(`outputOffset + ${q}u`)};
          let offset${q} = ${F.broadcastedIndicesToOffset(`outputIndices${q}`,$)};
          let index${q} = offset${q} / 4u;
          let component${q} = offset${q} % 4u;
          ${W}[${q}] = ${ne}(${F.getByOffset(`index${q}`)}[component${q}]);
        `;m=`
        let outputOffset = global_idx * ${d};
        var data = vec4<u32>(0);
        ${R("data",0,"u32")}
        ${R("data",1,"u32")}
        ${R("data",2,"u32")}
        ${R("data",3,"u32")}
        ${$.setByOffset("global_idx","data")}
      }`}else m=`
        let outputIndices = ${$.offsetToIndices("global_idx")};
        let inputOffset = ${F.broadcastedIndicesToOffset("outputIndices",$)};
        ${$.setByOffset("global_idx",F.getByOffset("inputOffset"))}
      }`;return`
    ${w.registerUniform("vec_size","u32").declareVariables(F,$)}
    ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${m}`},y=[{type:12,data:c},...yt(r,a)];return{name:"Expand",shaderCache:{hint:`${a.length}`,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:y})}},gp=e=>{Wl(e.inputs),e.compute(ql(e.inputs),{inputs:[0]})}}),Kl,_p,xm=f(()=>{Dt(),Kt(),or(),la(),Kl=e=>{let r=e[0].dataType,i=De.size(e[0].dims),a=De.size(e[1].dims),l=a%4===0,d=c=>{let g=tt("x",r,[1],4),y=tt("bias",r,[1],4),w=$t("y",r,[1],4),F=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],$=R=>`
      let bias${R}_offset: u32 = (global_idx * 4 + ${R}) % uniforms.bias_size;
      let bias${R} = ${y.getByOffset(`bias${R}_offset / 4`)}[bias${R}_offset % 4];`,m=l?`
      let bias = ${y.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${$(0)}${$(1)}${$(2)}${$(3)}
      let bias = ${g.type.value}(bias0, bias1, bias2, bias3);`;return`${c.registerUniforms(F).declareVariables(g,y,w)}

    ${bl(kr(r))}

    ${c.mainStart(ts)}
      ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${g.getByOffset("global_idx")};
      ${m}
      let x_in = x + bias;
      ${w.setByOffset("global_idx",vl("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getShaderSource:d,getRunData:c=>({outputs:[{dims:c[0].dims,dataType:c[0].dataType}],programUniforms:[{type:12,data:Math.ceil(i/4)},{type:12,data:a}],dispatchGroup:{x:Math.ceil(i/ts/4)}})}},_p=e=>{e.inputs.length<2||De.size(e.inputs[1].dims)===0?Ml(e):e.compute(Kl(e.inputs))}}),Ta,yp,wp,bp,Tm=f(()=>{Dt(),Kt(),mr(),or(),Ta=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},yp=(e,r)=>{let i=e[0].dims,a=e[1].dims,l=i.length,d=De.normalizeAxis(r.axis,l),c=i.slice(0);c.splice(d,1,...a);let g=i[d],y=e[0].dataType===9?4:1,w=Math.ceil(De.size(c)/y),F=[{type:12,data:w},{type:6,data:g},{type:12,data:d},...yt(e[0].dims,e[1].dims,c)],$=m=>{let R=tt("data",e[0].dataType,e[0].dims.length,y),W=tt("inputIndices",e[1].dataType,e[1].dims.length),q=$t("output",e[0].dataType,c.length,y),ne=Z=>{let _e=a.length,ue=`var indicesIndices${Z}  = ${W.type.indices}(0);`;for(let we=0;we<_e;we++)ue+=`${_e>1?`indicesIndices${Z}[${we}]`:`indicesIndices${Z}`} = ${c.length>1?`outputIndices${Z}[uniforms.axis + ${we}]`:`outputIndices${Z}`};`;ue+=`
          var idx${Z} = ${W.getByIndices(`indicesIndices${Z}`)};
          if (idx${Z} < 0) {
            idx${Z} = idx${Z} + uniforms.axisDimLimit;
          }
          var dataIndices${Z} : ${R.type.indices};
        `;for(let we=0,Ge=0;we<l;we++)we===d?(ue+=`${l>1?`dataIndices${Z}[${we}]`:`dataIndices${Z}`} = u32(idx${Z});`,Ge+=_e):(ue+=`${l>1?`dataIndices${Z}[${we}]`:`dataIndices${Z}`} = ${c.length>1?`outputIndices${Z}[${Ge}]`:`outputIndices${Z}`};`,Ge++);return ue},ie;if(e[0].dataType===9){let Z=(_e,ue,we="")=>`
          let outputIndices${ue} = ${q.offsetToIndices(`outputOffset + ${ue}u`)};
          ${ne(ue)};
          let offset${ue} = ${R.indicesToOffset(`dataIndices${ue}`)};
          let index${ue} = offset${ue} / 4u;
          let component${ue} = offset${ue} % 4u;
          ${_e}[${ue}] = ${we}(${R.getByOffset(`index${ue}`)}[component${ue}]);
        `;ie=`
        let outputOffset = global_idx * ${y};
        var value = vec4<u32>(0);
        ${Z("value",0,"u32")}
        ${Z("value",1,"u32")}
        ${Z("value",2,"u32")}
        ${Z("value",3,"u32")}
        ${q.setByOffset("global_idx","value")}
      `}else ie=`
      let outputIndices = ${q.offsetToIndices("global_idx")};
      ${ne("")};
      let value = ${R.getByIndices("dataIndices")};
      ${q.setByOffset("global_idx","value")};
      `;return`
      ${m.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(R,W,q)}
      ${m.mainStart()}
        ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${ie}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:F}),getShaderSource:$}},wp=e=>er({axis:e.axis}),bp=(e,r)=>{let i=e.inputs;Ta(i),e.compute(yp(e.inputs,r))}}),Hl,ka,km,vp,Em=f(()=>{Dt(),Kt(),mr(),or(),Hl=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let i=De.normalizeAxis(r.quantizeAxis,e[0].dims.length),a=r.blockSize,l=e[0],d=e[2],c=e.length===4?e[3]:void 0;if(d.dims.length!==l.dims.length||!l.dims.map((g,y)=>y===i?Math.ceil(g/a)===d.dims[y]:g===d.dims[y]).reduce((g,y)=>g&&y,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(c){if(c.dataType!==l.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(c.dims.length!==d.dims.length||!c.dims.map((g,y)=>g===d.dims[y]).reduce((g,y)=>g&&y,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},ka=(e,r)=>{let i=e[0].dims,a=e[1].dims,l=i.length,d=De.normalizeAxis(r.gatherAxis,l),c=De.normalizeAxis(r.quantizeAxis,l),g=i.slice(0);g.splice(d,1,...a);let y=De.size(g),w=e[2].dataType,F=e[0].dataType===22,$=[{type:12,data:y},{type:12,data:c},{type:12,data:d},{type:12,data:r.blockSize},...yt(...e.map((R,W)=>R.dims),g)],m=R=>{let W=tt("data",e[0].dataType,e[0].dims.length),q=tt("inputIndices",e[1].dataType,e[1].dims.length),ne=tt("scales",e[2].dataType,e[2].dims.length),ie=e.length>3?tt("zeroPoint",e[3].dataType,e[3].dims.length):void 0,Z=$t("output",w,g.length),_e=[W,q,ne];ie&&_e.push(ie);let ue=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${R.registerUniforms(ue).declareVariables(..._e,Z)}
        ${R.mainStart()}
        let output_indices = ${Z.offsetToIndices("global_idx")};
        var indices_indices = ${q.type.indices}(0);
        ${a.length>1?`
          for (var i: u32 = 0; i < ${a.length}; i++) {
            let index = ${Z.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${q.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${Z.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${W.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${Z.indicesGet("output_indices","i")};
          ${W.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${q.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${i[d]};
        }
        ${W.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${g.length}; i++) {
          let index = ${Z.indicesGet("output_indices",`i + ${a.length} - 1`)};
          ${W.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${W.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${W.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${F?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${ne.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${ne.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${ne.getByIndices("scale_indices")};
        ${ie?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${ie.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${ie.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${F?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${kr(w)}(quantized_data - zero_point) * scale;
        ${Z.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((R,W)=>W!==1).map(R=>R.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(R,W)=>"rank")},getRunData:()=>({outputs:[{dims:g,dataType:w}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:$}),getShaderSource:m}},km=(e,r)=>{let i=e.inputs;Hl(i,r),e.compute(ka(e.inputs,r))},vp=e=>er({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Xl,Mp,xp,Ql,Pm=f(()=>{Dt(),Kt(),mr(),or(),Xl=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Mp=(e,r)=>{let i=e[0].dims,a=e[0].dataType,l=i.length,d=e[1].dims,c=e[1].dataType,g=De.normalizeAxis(r.axis,l),y=i[g],w=d.slice(0),F=De.size(w),$=tt("input",a,l),m=tt("indicesInput",c,d.length),R=$t("output",a,w.length),W=[{type:12,data:F},{type:6,data:y},{type:12,data:g}];return W.push(...yt(i,d,w)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(F/64)},programUniforms:W}),getShaderSource:q=>`
      ${q.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables($,m,R)}
      ${q.mainStart()}
      ${q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${R.offsetToIndices("global_idx")};

      var idx = ${m.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${$.type.indices}(outputIndices);
      ${$.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${$.getByIndices("inputIndices")};

      ${R.setByOffset("global_idx","value")};
  }`}},xp=e=>er({axis:e.axis}),Ql=(e,r)=>{let i=e.inputs;Xl(i),e.compute(Mp(e.inputs,r))}}),Tp,Yl,Cm,Sm,kp=f(()=>{Dt(),Kt(),or(),Tp=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Yl=(e,r)=>{let i=e[0].dims.slice(),a=e[1].dims.slice(),[l,d,c]=vs.getShapeOfGemmResult(i,r.transA,a,r.transB,e.length===3?e[2].dims:void 0),g=[l,d];if(!g)throw new Error("Can't use gemm on the given tensors");let y=De.size(g),w=[{type:12,data:y},{type:12,data:l},{type:12,data:d},{type:12,data:c},{type:1,data:r.alpha},{type:1,data:r.beta}],F=["type","type"];e.length===3&&(w.push(...yt(e[2].dims)),F.push("rank")),w.push(...yt(g));let $=m=>{let R="";r.transA&&r.transB?R="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?R="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?R="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(R="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let W=r.alpha===1?"":"value *= uniforms.alpha;",q=tt("a",e[0].dataType,e[0].dims),ne=tt("b",e[1].dataType,e[1].dims),ie=q.type.value,Z=null,_e=[q,ne];e.length===3&&(Z=tt("c",e[2].dataType,e[2].dims.length),_e.push(Z));let ue=$t("output",e[0].dataType,g.length);_e.push(ue);let we=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${m.registerUniforms(we).declareVariables(..._e)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${ie}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${R}
    }

    ${W}
    ${Z!=null?`let cOffset = ${Z.broadcastedIndicesToOffset("vec2(m, n)",ue)}; value += ${ie}(uniforms.beta) * ${Z.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:F},getRunData:()=>({outputs:[{dims:g,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w}),getShaderSource:$}},Cm=e=>{let r=e.transA,i=e.transB,a=e.alpha,l=e.beta;return{transA:r,transB:i,alpha:a,beta:l,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Sm=(e,r)=>{Tp(e.inputs),e.compute(Yl(e.inputs,r))}}),Fs,Ep,Pp,Ea,Cp,So,Jl,Sp=f(()=>{Dt(),Kt(),mr(),ce(),aa(),or(),Nn(),Fs=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,Ep=(e,r)=>{let i=e[0],a=Fs(e,1),l=Fs(e,2),d=Fs(e,3),c=Fs(e,4),g=Fs(e,5),y=Fs(e,6),w=Fs(e,7);if(i.dims.length!==3&&i.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let F=i.dims[0],$=i.dims[1],m=i.dims.length===3?i.dims[2]:r.numHeads*i.dims[4],R=$,W=0,q=0,ne=Math.floor(m/r.numHeads);if(y&&w&&De.size(y.dims)&&De.size(w.dims)){if(y.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(y.dims[0]!==F||y.dims[1]!==r.numHeads||y.dims[3]!==ne)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(w.dims[0]!==F||w.dims[1]!==r.numHeads||w.dims[3]!==ne)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(y.dims[2]!==w.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(w.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');W=y.dims[2],q=y.dims[2]}else if(y&&De.size(y.dims)||w&&De.size(w.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let ie;if(a&&De.size(a.dims)>0){if(i.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(a.dims.length<3||a.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(i.dims[0]!==a.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(a.dims.length===3){if(a.dims[2]!==i.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');ie=2,R=a.dims[1]}else if(a.dims.length===5){if(a.dims[2]!==r.numHeads||a.dims[3]!==2||a.dims[4]!==ne)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(l)throw new Error('Expect "value" be none when "key" has packed kv format.');ie=5,R=a.dims[1]}else{if(a.dims[1]!==r.numHeads||a.dims[3]!==ne)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');ie=0,R=a.dims[2]}}else{if(i.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(i.dims[2]!==r.numHeads||i.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');ie=3}if(d&&De.size(d.dims)>0){if(d.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(a&&a.dims.length===5&&a.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let Z=W+R,_e=0;if(c&&De.size(c.dims)>0){_e=8;let Le=c.dims;throw Le.length===1?Le[0]===F?_e=1:Le[0]===3*F+2&&(_e=3):Le.length===2&&Le[0]===F&&Le[1]===Z&&(_e=5),_e===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let ue=!1,we=m;if(l&&De.size(l.dims)>0){if(l.dims.length!==3&&l.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(i.dims[0]!==l.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(l.dims.length===3){if(R!==l.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');we=l.dims[2]}else{if(R!==l.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');we=l.dims[1]*l.dims[3],ue=!0}}let Ge=!1;if(c&&De.size(c.dims)>0)throw new Error("Key padding mask is not supported");if(g&&De.size(g.dims)>0){if(g.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(g.dims[0]!==F||g.dims[1]!==r.numHeads||g.dims[2]!==$||g.dims[3]!==Z)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:F,sequenceLength:$,pastSequenceLength:W,kvSequenceLength:R,totalSequenceLength:Z,maxSequenceLength:q,inputHiddenSize:0,hiddenSize:m,vHiddenSize:we,headSize:ne,vHeadSize:Math.floor(we/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:_e,scale:r.scale,broadcastResPosBias:Ge,passPastInKv:ue,qkvFormat:ie}},Pp=e=>er({...e}),Ea=er({perm:[0,2,1,3]}),Cp=(e,r,i,a,l,d,c)=>{let g=[a,l,d],y=De.size(g),w=[{type:12,data:y},{type:12,data:c},{type:12,data:d}],F=$=>{let m=$t("qkv_with_bias",r.dataType,g),R=tt("qkv",r.dataType,g),W=tt("bias",i.dataType,g),q=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${$.registerUniforms(q).declareVariables(R,W,m)}
  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:g,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w}),getShaderSource:F},{inputs:[r,i],outputs:[-1]})[0]},So=(e,r,i,a,l,d,c,g)=>{let y=d;if(c&&De.size(c.dims)>0){if(a===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return y=Cp(e,d,c,r,a,i*l,g),y=y.reshape([r,a,i,l]),i===1||a===1?y:e.compute(Qs(y,Ea.perm),{inputs:[y],outputs:[-1]})[0]}else return d.dims.length===3&&(y=d.reshape([r,a,i,l])),i===1||a===1?y:e.compute(Qs(y,Ea.perm),{inputs:[y],outputs:[-1]})[0]},Jl=(e,r)=>{let i=Ep(e.inputs,r),a=e.inputs[0],l=Fs(e.inputs,1),d=Fs(e.inputs,2),c=Fs(e.inputs,3),g=Fs(e.inputs,4),y=Fs(e.inputs,5),w=Fs(e.inputs,6),F=Fs(e.inputs,7);if(a.dims.length===5)throw new Error("Packed QKV is not implemented");if((l==null?void 0:l.dims.length)===5)throw new Error("Packed KV is not implemented");let $=l&&d&&l.dims.length===4&&d.dims.length===4,m=So(e,i.batchSize,i.numHeads,i.sequenceLength,i.headSize,a,c,0);if($)return Ji(e,m,l,d,g,void 0,w,F,y,i,r);if(!l||!d)throw new Error("key and value must be provided");let R=So(e,i.batchSize,i.numHeads,i.kvSequenceLength,i.headSize,l,c,i.hiddenSize),W=So(e,i.batchSize,i.numHeads,i.kvSequenceLength,i.vHeadSize,d,c,2*i.hiddenSize);Ji(e,m,R,W,g,void 0,w,F,y,i,r)}}),Zl,ec,Ap,tc,Ip,$p=f(()=>{Dt(),Kt(),or(),Zl=e=>Array.from(e.getBigInt64Array(),Number),ec=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Zl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Ap=(e,r)=>{let i=[];for(let a=0;a<e.length;++a)i.push(e[a]*r[a]);return i},tc=(e,r)=>{let i=e[0].dims,a=r??Zl(e[1]),l=Ap(i,a),d=De.size(l),c=e[0].dataType,g=tt("input",c,i.length),y=$t("output",c,l.length),w=F=>`
      const inputShape = ${g.indices(...i)};
      ${F.registerUniform("output_size","u32").declareVariables(g,y)}
      ${F.mainStart()}
      ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${y.offsetToIndices("global_idx")};
      var input_indices: ${g.type.indices};
      for (var i = 0; i < ${i.length}; i++) {
        let input_dim_i = ${g.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${y.indicesGet("output_indices","i")}  % input_dim_i;

        ${g.indicesSet("input_indices","i","input_dim_value")}
      }
      ${y.setByOffset("global_idx",g.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${a}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...yt(e[0].dims,l)]}),getShaderSource:w}},Ip=e=>{ec(e.inputs),e.compute(tc(e.inputs),{inputs:[0]})}}),Fp,rc,Op,zp,sc,nc,Am=f(()=>{Dt(),Kt(),mr(),aa(),or(),Sp(),$p(),Nn(),Fp=(e,r)=>{let i=e[0],a=e[1],l=e[2],d=e[3],c=e[4];if(i.dims.length!==3&&i.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let g=!1,y=i.dims[0],w=i.dims[1],F=i.dims.length===3?g?i.dims[2]/3:i.dims[2]:r.numHeads*i.dims[4],$=w,m=0,R=0,W=Math.floor(F/r.numHeads),q=d&&d.dims.length!==0,ne=c&&c.dims.length!==0,ie=!0;if(q&&ne){if(d.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');m=d.dims[1],R=d.dims[1]}else if(q||ne)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let Z;if(a){if(i.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(a.dims.length<3||a.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(i.dims[0]!==a.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(a.dims.length===3){if(i.dims[2]%a.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');Z=2,$=a.dims[1]}else if(a.dims.length===5){if(a.dims[2]!==r.numHeads||a.dims[3]!==2||a.dims[4]!==W)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(l)throw new Error('Expect "value" be none when "key" has packed kv format.');Z=5,$=a.dims[1]}else{if(a.dims[1]!==r.numHeads||a.dims[3]!==W)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');Z=0,$=a.dims[2]}}else{if(i.dims.length!==3&&i.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(i.dims.length===5&&(i.dims[2]!==r.numHeads||i.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');Z=3}let _e=0,ue=!1,we=F;if(l){if(l.dims.length!==3&&l.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(i.dims[0]!==l.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(l.dims.length===3){if($!==l.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');we=l.dims[2]}else{if($!==l.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');we=l.dims[1]*l.dims[3],ue=!0}}let Ge=m+$;return{batchSize:y,sequenceLength:w,pastSequenceLength:m,kvSequenceLength:$,totalSequenceLength:Ge,maxSequenceLength:R,inputHiddenSize:0,hiddenSize:F,vHiddenSize:we,headSize:W,vHeadSize:Math.floor(we/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:_e,scale:r.scale,broadcastResPosBias:!1,passPastInKv:ue,qkvFormat:Z,isPastkvBSNH:ie}},rc=(e,r,i,a)=>{let l=[a.batchSize,a.totalSequenceLength,a.kvNumHeads,a.headSize],d=4,c=De.size(l)/d,g=a.totalSequenceLength,y=$t("present_kv",i,l.length,d),w=tt("new_kv",e.dataType,e.dims.length,d),F=r?tt("past_kv",r.dataType,r.dims.length,d):void 0,$=Math.ceil(a.headSize/d),m={x:g,y:e.dims[0],z:1},R=r?["rank","rank"]:["rank"],W=[{type:12,data:c},{type:12,data:a.pastSequenceLength},{type:12,data:a.kvSequenceLength},{type:12,data:a.totalSequenceLength}],q=[w];F?(W.push(...yt(e.dims),...yt(r.dims),...yt(l)),q.push(F)):W.push(...yt(e.dims),...yt(l));let ne=[{name:"output_size",type:"u32"},{name:"past_seqlen",type:"u32"},{name:"new_seqlen",type:"u32"},{name:"present_seqlen",type:"u32"}],ie=`      let past_batch_stride = uniforms.past_seqlen * num_heads * H;
        var past_head_stride = uniforms.past_seqlen * H;
        if (is_bsnh) {
          past_head_stride = H;
        }
        let in_offset = b * past_batch_stride + s * row_stride + n * past_head_stride + h;
        present_kv[out_offset] = past_kv[in_offset];`,Z=`      let new_batch_stride = uniforms.new_seqlen * num_heads * H;
        let new_row_stride = num_heads * H;
        let new_head_stride = H;
        let in_offset = b * new_batch_stride + (s - past_seqlen) * new_row_stride + n * new_head_stride + h;
        present_kv[out_offset] = new_kv[in_offset];`,_e=r?`if (s < past_seqlen) {
        ${ie}
        } else if (s < past_seqlen + uniforms.new_seqlen) {
        ${Z}
        }`:`if (s < past_seqlen + uniforms.new_seqlen) {
          ${Z}
        }`,ue=we=>`

  ${we.registerUniforms(ne).declareVariables(...q,y)}
  ${we.mainStart([$,a.kvNumHeads,1])}
    ${we.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    var indices = ${y.offsetToIndices("global_idx")};
    let h = local_id.x;
    let n = local_id.y;
    let s = workgroup_id.x;
    let b = workgroup_id.y;
    let num_heads = ${a.kvNumHeads}u;
    let H = ${$}u;

    let present_seqlen = uniforms.present_seqlen;
    let present_batch_stride = present_seqlen * num_heads * H;
    var row_stride = H;
    let is_bsnh = ${a.isPastkvBSNH};

    if (is_bsnh) {
      row_stride = num_heads * H;
    }
    var present_head_stride = present_seqlen * H;
    if (is_bsnh) {
      present_head_stride = H;
    }

    let past_seqlen = uniforms.past_seqlen;

    let out_offset = b * present_batch_stride + s * row_stride + n * present_head_stride + h;
    ${_e}
  }`;return{name:"ConcatPastNew",shaderCache:{hint:`${a.kvNumHeads}${$}${!!r}`,inputDependencies:R},getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:m,programUniforms:W}),getShaderSource:ue}},Op=e=>er({...e}),zp=er({perm:[0,2,1,3]}),sc=(e,r,i,a,l)=>{let d=r,c=a.kvNumHeads,g=a.nReps;return r.dims.length===3&&a.kvSequenceLength!==0&&(d=r.reshape([a.batchSize,a.kvSequenceLength,c,a.headSize])),i?d=e.compute(rc(d,i,d.dataType,a),{inputs:[d,i],outputs:[a.isPastkvBSNH?l:-1]})[0]:d=e.compute(rc(d,void 0,d.dataType,a),{inputs:[d],outputs:[a.isPastkvBSNH?l:-1]})[0],g!==1&&(d=e.compute(tc([d],[1,1,1,g]),{inputs:[d],outputs:[-1]})[0],d=d.reshape([a.batchSize,a.totalSequenceLength,c*g,a.headSize])),e.compute(Qs(d,zp.perm),{inputs:[d],outputs:[-1]})[0]},nc=(e,r)=>{var y;let i=Fp(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((y=e.inputs[1])==null?void 0:y.dims.length)===5)throw new Error("Packed KV is not implemented");let a=So(e,i.batchSize,i.numHeads,i.sequenceLength,i.headSize,e.inputs[0],void 0,0),l=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,d=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,c=sc(e,e.inputs[1],l,i,1),g=sc(e,e.inputs[2],d,i,2);Ji(e,a,c,g,void 0,void 0,void 0,void 0,void 0,i,r)}}),ic,oc,Lp,Dp,Ar=f(()=>{Dt(),Kt(),Nn(),or(),ic=(e,r,i,a,l,d,c,g)=>{let y=ir(d),w=y===1?"f32":`vec${y}f`,F=y===1?"vec2f":`mat2x${y}f`,$=l*c,m=[l,c,d/y],R=[l,c,2],W=["rank","type","type"],q=[];q.push(...yt(m,R));let ne=ie=>{let Z=tt("x",r.dataType,3,y),_e=tt("scale",i.dataType,i.dims),ue=tt("bias",a.dataType,a.dims),we=$t("output",1,3,2),Ge=[Z,_e,ue,we],Le=64;return`
  var<workgroup> workgroup_shared : array<${F}, ${Le}>;
  const workgroup_size = ${Le}u;
  ${ie.declareVariables(...Ge)}
  ${ie.mainStart(Le)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${w}(0);
    var squared_sum = ${w}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${w}(${Z.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${F}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Tn("workgroup_shared[0][0]",y)} / f32(hight * ${y});
      let squared_sum_final = ${Tn("workgroup_shared[0][1]",y)} / f32(hight * ${y});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${g}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${y};${g}`,inputDependencies:W},getRunData:()=>({outputs:[{dims:R,dataType:1}],dispatchGroup:{x:$},programUniforms:q}),getShaderSource:ne},{inputs:[r,i,a],outputs:[-1]})[0]},oc=(e,r,i)=>{let a=r[0].dims,l=a,d=2,c=a[0],g=a[1],y=De.sizeFromDimension(a,d),w=ir(y),F=De.size(l)/w,$=ic(e,r[0],r[1],r[2],c,y,g,i.epsilon),m=[c,g,y/w],R=[c,g],W=["type","none"],q=ne=>{let ie=tt("x",r[0].dataType,m.length,w),Z=tt("scale_shift",1,R.length,2),_e=$t("output",r[0].dataType,m.length,w),ue=[ie,Z,_e];return`
  ${ne.registerUniform("output_size","u32").declareVariables(...ue)}
  ${ne.mainStart()}
  ${ne.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${_e.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${Z.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${ie.getByOffset("global_idx")} * ${_e.type.value}(scale_shift.x) + ${_e.type.value}(scale_shift.y);
      ${_e.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${w}`,inputDependencies:W},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(F/64)},programUniforms:[{type:12,data:F},...yt(m,R,m)]}),getShaderSource:q},{inputs:[r[0],$]})},Lp=(e,r,i)=>{let a=r[0].dims,l=a,d=a[0],c=a[a.length-1],g=De.sizeFromDimension(a,1)/c,y=ir(c),w=De.size(l)/y,F=[{type:12,data:g},{type:12,data:Math.floor(c/y)}],$=["type","type"],m=[0,a.length-1];for(let ne=0;ne<a.length-2;ne++)m.push(ne+1);let R=e.compute(Qs(e.inputs[0],m),{inputs:[e.inputs[0]],outputs:[-1]})[0],W=ic(e,R,r[1],r[2],d,g,c,i.epsilon),q=ne=>{let ie=dr(r[0].dataType),Z=y===1?"vec2f":`mat${y}x2f`,_e=Ge=>{let Le=Ge===0?"x":"y",st=y===1?"f32":`vec${y}f`;switch(y){case 1:return`${ie}(${st}(scale.${Le}))`;case 2:return`vec2<${ie}>(${st}(scale[0].${Le}, scale[1].${Le}))`;case 4:return`vec4<${ie}>(${st}(scale[0].${Le}, scale[1].${Le}, scale[2].${Le}, scale[3].${Le}))`;default:throw new Error(`Not supported compoents ${y}`)}},ue=tt("input",r[0].dataType,r[0].dims,y),we=$t("output",r[0].dataType,l,y);return`
  @group(0) @binding(0) var<storage, read> input : array<${ue.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${Z}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${we.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${ne.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${_e(0)}, ${_e(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${y}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:F}),getShaderSource:q},{inputs:[r[0],W]})},Dp=(e,r)=>{r.format==="NHWC"?Lp(e,e.inputs,r):oc(e,e.inputs,r)}}),Im,$m,Fm,jp=f(()=>{Dt(),Kt(),or(),Im=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},$m=(e,r,i)=>{let a=r.simplified,l=e[0].dims,d=e[1],c=!a&&e[2],g=l,y=De.normalizeAxis(r.axis,l.length),w=De.sizeToDimension(l,y),F=De.sizeFromDimension(l,y),$=De.size(d.dims),m=c?De.size(c.dims):0;if($!==F||c&&m!==F)throw new Error(`Size of X.shape()[axis:] == ${F}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${$} and bias size of ${m}`);let R=[];for(let we=0;we<l.length;++we)we<y?R.push(l[we]):R.push(1);let W=ir(F),q=["type","type"],ne=[{type:12,data:w},{type:1,data:F},{type:12,data:Math.floor(F/W)},{type:1,data:r.epsilon}];c&&q.push("type");let ie=i>1,Z=i>2,_e=we=>{let Ge=dr(e[0].dataType),Le=[tt("x",e[0].dataType,e[0].dims,W),tt("scale",d.dataType,d.dims,W)];c&&Le.push(tt("bias",c.dataType,c.dims,W)),Le.push($t("output",e[0].dataType,g,W)),ie&&Le.push($t("mean_data_output",1,R)),Z&&Le.push($t("inv_std_output",1,R));let st=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${we.registerUniforms(st).declareVariables(...Le)}
  ${we.mainStart()}
    ${we.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Hr("f32",W)};
    var mean_square_vector = ${Hr("f32",W)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${xn(Ge,W,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Tn("mean_vector",W)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Tn("mean_square_vector",W)} / uniforms.norm_size ${a?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${xn(Ge,W,"x[j + offset]")};
      let f32scale = ${xn(Ge,W,"scale[j]")};
      output[j + offset] = ${Le[0].type.value}((f32input ${a?"":"- mean"}) * inv_std_dev * f32scale
        ${c?`+ ${xn(Ge,W,"bias[j]")}`:""}
      );
    }

    ${ie?"mean_data_output[global_idx] = mean":""};
    ${Z?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},ue=[{dims:g,dataType:e[0].dataType}];return ie&&ue.push({dims:R,dataType:1}),Z&&ue.push({dims:R,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${W};${i};${a}`,inputDependencies:q},getRunData:()=>({outputs:ue,dispatchGroup:{x:Math.ceil(w/64)},programUniforms:ne}),getShaderSource:_e}},Fm=(e,r)=>{Im(e.inputs),e.compute($m(e.inputs,r,e.outputCount))}}),Bp,Rp,Np,Up,ac,Vp=f(()=>{Dt(),Kt(),mr(),or(),Bp=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let i=e[0],a=i.dims.length;if(i.dims[a-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let l=Math.floor((r.k+r.blockSize-1)/r.blockSize),d=r.blockSize/8*r.bits,c=e[1];if(!De.areEqual(c.dims,[r.n,l,d]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let g=e[2].dims;if(De.size(g)!==r.n*l)throw new Error("scales input size error.");if(e.length===4){let y=e[3].dims,w=r.bits>4?r.n*l:r.n*Math.floor((l+1)/2);if(De.size(y)!==w)throw new Error("zeroPoints input size error.")}},Rp=(e,r)=>{let i=e[0].dims,a=i.length,l=i[a-2],d=r.k,c=r.n,g=i.slice(0,a-2),y=De.size(g),w=e[1].dims[2]/4,F=e[0].dataType,$=ir(r.k),m=ir(w),R=ir(c),W=g.concat([l,c]),q=l>1&&c/R%2===0?2:1,ne=De.size(W)/R/q,ie=64,Z=[],_e=[y,l,d/$],ue=De.convertShape(e[1].dims).slice();ue.splice(-1,1,w/m),Z.push(...yt(_e)),Z.push(...yt(ue)),Z.push(...yt(e[2].dims)),e.length===4&&Z.push(...yt(De.convertShape(e[3].dims)));let we=[y,l,c/R];Z.push(...yt(we));let Ge=Le=>{let st=_e.length,Mt=tt("a",e[0].dataType,st,$),St=tt("b",12,ue.length,m),sr=tt("scales",e[2].dataType,e[2].dims.length),lr=[Mt,St,sr],Nt=e.length===4?tt("zero_points",12,e[3].dims.length):void 0;Nt&&lr.push(Nt);let Ir=we.length,Ur=$t("output",e[0].dataType,Ir,R),ur=dr(e[0].dataType),Or=(()=>{switch($){case 1:return`array<${ur}, 8>`;case 2:return`mat4x2<${ur}>`;case 4:return`mat2x4<${ur}>`;default:throw new Error(`${$}-component is not supported.`)}})(),zt=()=>{let Ke=`
          // reuse a data
            var input_offset = ${Mt.indicesToOffset(`${Mt.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Or};
            for (var j: u32 = 0; j < ${8/$}; j++) {
              a_data[j] = ${Mt.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let dt=0;dt<R*q;dt++)Ke+=`
            b_value = ${m===1?`b${dt}_data`:`b${dt}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Or}(${Array.from({length:4},(Ht,$r)=>`${ur}(b_value_lower[${$r}]), ${ur}(b_value_upper[${$r}])`).join(", ")});
            b_dequantized_values = ${$===1?`${Or}(${Array.from({length:8},(Ht,$r)=>`(b_quantized_values[${$r}] - ${Nt?`zero_point${dt}`:"zero_point"}) * scale${dt}`).join(", ")});`:`(b_quantized_values - ${Or}(${Array(8).fill(`${Nt?`zero_point${dt}`:"zero_point"}`).join(",")})) * scale${dt};`};
            workgroup_shared[local_id.x * ${q} + ${Math.floor(dt/R)}]${R>1?`[${dt%R}]`:""} += ${Array.from({length:8/$},(Ht,$r)=>`${$===1?`a_data[${$r}] * b_dequantized_values[${$r}]`:`dot(a_data[${$r}], b_dequantized_values[${$r}])`}`).join(" + ")};
          `;return Ke},qt=()=>{let Ke=`
            var col_index = col * ${R};
            ${Nt?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${ur}(8);`}
            `;for(let dt=0;dt<R*q;dt++)Ke+=`
            let scale${dt} = ${sr.getByOffset("col_index * nBlocksPerCol + block")};
            ${Nt?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${Nt.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${dt} = ${ur}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return Ke},wr=()=>{let Ke=`col_index = col * ${R};`;for(let dt=0;dt<R*q;dt++)Ke+=`
            let b${dt}_data = ${St.getByIndices(`${St.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return Ke+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Or};
            var b_dequantized_values: ${Or};`,Ke};return`
        var<workgroup> workgroup_shared: array<${Ur.type.value}, ${q*ie}>;
        ${Le.declareVariables(...lr,Ur)}
        ${Le.mainStart([ie,1,1])}
          let output_indices = ${Ur.offsetToIndices(`(global_idx / ${ie}) * ${q}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${ie}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/$};
            ${qt()}
            for (var word: u32 = 0; word < ${w}; word += ${m}) {
              ${wr()}
              for (var i: u32 = 0; i < ${m}; i++) {
                ${zt()}
                word_offset += ${8/$};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${q}) {
            var output_value: ${Ur.type.value} = ${Ur.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${ie}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${q};
            }
            ${Ur.setByIndices(`${Ur.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${$};${m};${R};${q};${ie}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:W,dataType:F}],dispatchGroup:{x:ne},programUniforms:Z}),getShaderSource:Ge}},Np=(e,r)=>{let i=e[0].dims,a=i.length,l=i[a-2],d=r.k,c=r.n,g=i.slice(0,a-2),y=De.size(g),w=e[1].dims[2]/4,F=e[0].dataType,$=ir(r.k),m=ir(w),R=g.concat([l,c]),W=128,q=c%8===0?8:c%4===0?4:1,ne=W/q,ie=ne*m*8,Z=ie/$,_e=ie/r.blockSize,ue=De.size(R)/q,we=[],Ge=[y,l,d/$],Le=De.convertShape(e[1].dims).slice();Le.splice(-1,1,w/m),we.push(...yt(Ge)),we.push(...yt(Le)),we.push(...yt(e[2].dims)),e.length===4&&we.push(...yt(De.convertShape(e[3].dims)));let st=[y,l,c];we.push(...yt(st));let Mt=St=>{let sr=Ge.length,lr=tt("a",e[0].dataType,sr,$),Nt=tt("b",12,Le.length,m),Ir=tt("scales",e[2].dataType,e[2].dims.length),Ur=[lr,Nt,Ir],ur=e.length===4?tt("zero_points",12,e[3].dims.length):void 0;ur&&Ur.push(ur);let Or=st.length,zt=$t("output",e[0].dataType,Or),qt=dr(e[0].dataType),wr=()=>{switch($){case 1:return`
          let a_data0 = vec4<${qt}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${qt}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${qt}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${qt}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${$}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${lr.type.value}, ${Z}>;
        var<workgroup> inter_results: array<array<${zt.type.value}, ${ne}>, ${q}>;
        ${St.declareVariables(...Ur,zt)}
        ${St.mainStart([ne,q,1])}
          let output_indices = ${zt.offsetToIndices(`workgroup_index * ${q}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${_e} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${Z};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${Z}; a_offset += ${W})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${lr.getByIndices(`${lr.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${lr.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${_e} + local_id.x;
            ${ur?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${ur.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${qt}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${qt}(8);`}
            let scale = ${Ir.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${Nt.getByIndices(`${Nt.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/$};
            for (var i: u32 = 0; i < ${m}; i++) {
              ${wr()}
              let b_value = ${m===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${qt}>(${Array.from({length:4},(Ke,dt)=>`${qt}(b_value_lower[${dt}]), ${qt}(b_value_upper[${dt}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${qt}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(Ke,dt)=>`${`dot(a_data${dt}, b_dequantized_values[${dt}])`}`).join(" + ")};
              word_offset += ${8/$};
            }
            workgroupBarrier();
          }

          if (local_idx < ${q}) {
            var output_value: ${zt.type.value} = ${zt.type.value}(0);
            for (var b = 0u; b < ${ne}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${zt.setByIndices(`${zt.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${$};${m};${ne};${q}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:R,dataType:F}],dispatchGroup:{x:ue},programUniforms:we}),getShaderSource:Mt}},Up=(e,r)=>{Bp(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Np(e.inputs,r)):e.compute(Rp(e.inputs,r))},ac=e=>er(e)}),Om,Wp,Gp,lc,zm,Lm,qp,Kp,Hp,Dm=f(()=>{Dt(),Kt(),or(),Om=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Wp=(e,r,i)=>{let a="";for(let l=r-1;l>=0;--l)a+=`
            k = i32(${e.indicesGet("indices",l)}) - ${At("uniforms.pads",l,i)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${At("uniforms.x_shape",l,r)})) {
              break;
            }
            offset += k * i32(${At("uniforms.x_strides",l,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${a}
            value = x[offset];
          }
      `},Gp=(e,r,i)=>{let a="";for(let l=r-1;l>=0;--l)a+=`
                k = i32(${e.indicesGet("indices",l)}) - ${At("uniforms.pads",l,i)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${At("uniforms.x_shape",l,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${At("uniforms.x_shape",l,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${At("uniforms.x_strides",l,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${a}
              value = x[offset];
          `},lc=(e,r,i)=>{let a="";for(let l=r-1;l>=0;--l)a+=`
                k = i32(${e.indicesGet("indices",l)}) - ${At("uniforms.pads",l,i)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${At("uniforms.x_shape",l,r)})) {
                  k = i32(${At("uniforms.x_shape",l,r)}) - 1;
                }
                offset += k * i32(${At("uniforms.x_strides",l,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${a}
              value = x[offset];
          `},zm=(e,r,i)=>{let a="";for(let l=r-1;l>=0;--l)a+=`
                k = i32(${e.indicesGet("indices",l)}) - ${At("uniforms.pads",l,i)};
                if (k < 0)  {
                  k += i32(${At("uniforms.x_shape",l,r)}]);
                }
                if (k >= i32(${At("uniforms.x_shape",l,r)})) {
                  k -= i32(${At("uniforms.x_shape",l,r)});
                }
                offset += k * i32(${At("uniforms.x_strides",l,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${a}
              value = x[offset];
          `},Lm=(e,r,i)=>{switch(i.mode){case 0:return Wp(e,r,i.pads.length);case 1:return Gp(e,r,i.pads.length);case 2:return lc(e,r,i.pads.length);case 3:return zm(e,r,i.pads.length);default:throw new Error("Invalid mode")}},qp=(e,r)=>{let i=De.padShape(e[0].dims.slice(),r.pads),a=e[0].dims,l=De.size(i),d=[{type:12,data:l},{type:6,data:r.pads}],c=e.length>=3&&e[2].data;r.mode===0&&d.push({type:c?e[2].dataType:1,data:r.value}),d.push(...yt(e[0].dims,i));let g=["rank"],y=w=>{let F=$t("output",e[0].dataType,i.length),$=tt("x",e[0].dataType,a.length),m=$.type.value,R=Lm(F,a.length,r),W=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&W.push({name:"constant_value",type:c?m:"f32"}),`
            ${w.registerUniforms(W).declareVariables($,F)}
            ${w.mainStart()}
            ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${F.offsetToIndices("global_idx")};

            var value = ${m}(0);
            ${R}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${c}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(De.size(i)/64)},programUniforms:d}),getShaderSource:y}},Kp=(e,r)=>{if(e.length>1){let i=e[1].getBigInt64Array(),a=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,l=e[0].dims.length,d=new Int32Array(2*l).fill(0);if(e.length>=4){let g=e[3].getBigInt64Array();for(let y=0;y<g.length;y++)d[Number(g[y])]=Number(i[y]),d[Number(g[y])+l]=Number(i[y+g.length])}else i.forEach((g,y)=>d[Number(y)]=Number(g));let c=[];return d.forEach(g=>c.push(g)),{mode:r.mode,value:a,pads:c}}else return r},Hp=(e,r)=>{Om(e.inputs);let i=Kp(e.inputs,r);e.compute(qp(e.inputs,i),{inputs:[0]})}}),Ao,cc,uc,dc,pc,Xp,Qp,hc,Yp,Jp,Zp,mc,eh,th,fc,jm,gc,rh,sh,Bm=f(()=>{kt(),Dt(),Kt(),or(),Ao=e=>{if(S.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},cc=(e,r,i)=>{let a=r.format==="NHWC",l=e.dims.slice();a&&l.splice(1,0,l.pop());let d=Object.hasOwnProperty.call(r,"dilations"),c=r.kernelShape.slice(),g=r.strides.slice(),y=d?r.dilations.slice():[],w=r.pads.slice();Tr.adjustPoolAttributes(i,l,c,g,y,w);let F=Tr.computePoolOutputShape(i,l,g,y,c,w,r.autoPad),$=Object.assign({},r);d?Object.assign($,{kernelShape:c,strides:g,pads:w,dilations:y,cacheKey:r.cacheKey}):Object.assign($,{kernelShape:c,strides:g,pads:w,cacheKey:r.cacheKey});let m=F.slice();return m.push(m.splice(1,1)[0]),[$,a?m:F]},uc=(e,r)=>{let i=r.format==="NHWC",a=De.size(e),l=De.size(r.kernelShape),d=[{type:12,data:a},{type:12,data:l}],c=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let g=r.kernelShape[r.kernelShape.length-1],y=r.strides[r.strides.length-1],w=r.pads[r.pads.length/2-1],F=r.pads[r.pads.length-1],$=!!(w+F);d.push({type:12,data:g},{type:12,data:y},{type:12,data:w},{type:12,data:F}),c.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let m=!1;if(r.kernelShape.length===2){let R=r.kernelShape[r.kernelShape.length-2],W=r.strides[r.strides.length-2],q=r.pads[r.pads.length/2-2],ne=r.pads[r.pads.length-2];m=!!(q+ne),d.push({type:12,data:R},{type:12,data:W},{type:12,data:q},{type:12,data:ne}),c.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[d,c,!0,$,m]}else{if(i)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let g=De.computeStrides(r.kernelShape);d.push({type:12,data:g},{type:12,data:r.pads},{type:12,data:r.strides}),c.push({name:"kernelStrides",type:"u32",length:g.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let y=r.pads.reduce((w,F)=>w+F);return[d,c,!!y,!1,!1]}},dc=(e,r,i,a,l,d,c,g,y,w,F,$)=>{let m=l.format==="NHWC",R=r.type.value,W=$t("output",r.type.tensor,a);if(l.kernelShape.length<=2){let q="",ne="",ie="",Z=i-(m?2:1);if(F?q=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Z}] = indices[${Z}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${Z}] < 0 || xIndices[${Z}]
                      >= uniforms.x_shape[${Z}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${d}
                }`:q=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Z}] = indices[${Z}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${d}
                }`,l.kernelShape.length===2){let _e=i-(m?3:2);$?ne=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${_e}] = indices[${_e}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${_e}] < 0 || xIndices[${_e}] >= uniforms.x_shape[${_e}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:ne=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${_e}] = indices[${_e}] * uniforms.sh - uniforms.phStart + j;
                `,ie=`
              }
            `}return`
            ${e.registerUniforms(y).declareVariables(r,W)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${W.offsetToIndices("global_idx")};
              var xIndices = ${W.offsetToIndices("global_idx")};

              var value = ${R}(${g});
              var pad = 0;
              ${ne}
              ${q}
              ${ie}
              ${c}

              output[global_idx] = value;
            }`}else{if(m)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let q=l.kernelShape.length,ne=l.pads.length,ie="";return w?ie=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${d}
              }`:ie=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${d}
            `,`
            ${e.registerUniforms(y).declareVariables(r,W)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${W.offsetToIndices("global_idx")};
              var xIndices = ${W.offsetToIndices("global_idx")};

              var offsets: array<u32, ${q}>;

              var value = ${R}(${g});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${q-1}u; j++) {
                  offsets[j] = offset / ${At("uniforms.kernelStrides","j",q)};
                  offset -= offsets[j] * ${At("uniforms.kernelStrides","j",q)};
                }
                offsets[${q-1}] = offset;

                isPad = false;
                for (var j = ${i-q}u; j < ${i}u; j++) {
                  xIndices[j] = indices[j] * ${At("uniforms.strides",`j - ${i-q}u`,q)}
                    + offsets[j - ${i-q}u] - ${At("uniforms.pads","j - 2u",ne)};
                  ${ie}
              }
              ${c}

              output[global_idx] = value;
            }`}},pc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Xp=e=>`${pc(e)};${e.countIncludePad}`,Qp=e=>`${pc(e)};${e.storageOrder};${e.dilations}`,hc=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Yp=(e,r,i,a)=>{let[l,d]=cc(r,a,i),c=tt("x",r.dataType,r.dims.length),g=c.type.value,y="value += x_val;",w="";l.countIncludePad?w+=`value /= ${g}(uniforms.kernelSize);`:w+=`value /= ${g}(i32(uniforms.kernelSize) - pad);`;let[F,$,m,R,W]=uc(d,l);F.push(...yt(r.dims,d));let q=["rank"];return{name:e,shaderCache:{hint:`${a.cacheKey};${m};${R};${W}`,inputDependencies:q},getRunData:()=>({outputs:[{dims:d,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(De.size(d)/64)},programUniforms:F}),getShaderSource:ne=>dc(ne,c,r.dims.length,d.length,l,y,w,0,$,m,R,W)}},Jp=e=>{let r=e.count_include_pad!==0,i=hc(e);if(i.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let a={countIncludePad:r,...i,cacheKey:""};return{...a,cacheKey:Xp(a)}},Zp=(e,r)=>{Ao(e.inputs),e.compute(Yp("AveragePool",e.inputs[0],!1,r))},mc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},eh=e=>{let r=e.format;return{format:r,...mc,cacheKey:r}},th=(e,r)=>{Ao(e.inputs),e.compute(Yp("GlobalAveragePool",e.inputs[0],!0,r))},fc=(e,r,i,a)=>{let[l,d]=cc(r,a,i),c=`
      value = max(x_val, value);
    `,g="",y=tt("x",r.dataType,r.dims.length),w=["rank"],[F,$,m,R,W]=uc(d,l);return F.push(...yt(r.dims,d)),{name:e,shaderCache:{hint:`${a.cacheKey};${m};${R};${W}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:d,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(De.size(d)/64)},programUniforms:F}),getShaderSource:q=>dc(q,y,r.dims.length,d.length,l,c,g,r.dataType===10?-65504:-1e5,$,m,R,W)}},jm=(e,r)=>{Ao(e.inputs),e.compute(fc("MaxPool",e.inputs[0],!1,r))},gc=e=>{let r=e.storage_order,i=e.dilations,a=hc(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(a.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let l={storageOrder:r,dilations:i,...a,cacheKey:""};return{...l,cacheKey:Qp(l)}},rh=e=>{let r=e.format;return{format:r,...mc,cacheKey:r}},sh=(e,r)=>{Ao(e.inputs),e.compute(fc("GlobalMaxPool",e.inputs[0],!0,r))}}),nh,ih,oh,ah,Rm=f(()=>{Dt(),Kt(),mr(),or(),nh=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((i,a)=>i===e[2].dims[a]).reduce((i,a)=>i&&a,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((l,d)=>d===r.axis||l===e[0].dims[d]).reduce((l,d)=>l&&d,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let i=e[0].dims[r.axis],a=e[1].dims[r.axis];if(r.blockSize<Math.ceil(i/a)||r.blockSize>Math.ceil(i/(a-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},ih=(e,r)=>{let i=De.normalizeAxis(r.axis,e[0].dims.length),a=e[0].dataType,l=a===3,d=e[0].dims,c=e[1].dataType,g=De.size(d),y=a===3||a===2,w=y?[Math.ceil(De.size(e[0].dims)/4)]:e[0].dims,F=e[1].dims,$=e.length>2?e[2]:void 0,m=$?y?[Math.ceil(De.size($.dims)/4)]:$.dims:void 0,R=F.length===0||F.length===1&&F[0]===1,W=R===!1&&F.length===1,q=ir(g),ne=R&&(!y||q===4),ie=ne?q:1,Z=ne&&!y?q:1,_e=tt("input",y?12:a,w.length,Z),ue=tt("scale",c,F.length),we=$?tt("zero_point",y?12:a,m.length):void 0,Ge=$t("output",c,d.length,ie),Le=[_e,ue];we&&Le.push(we);let st=[w,F];$&&st.push(m);let Mt=[{type:12,data:g/ie},{type:12,data:i},{type:12,data:r.blockSize},...yt(...st,d)],St=sr=>{let lr=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${sr.registerUniforms(lr).declareVariables(...Le,Ge)}
      ${sr.mainStart()}
          ${sr.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${Ge.offsetToIndices("global_idx")};

          // Set input x
          ${y?`
            let input = ${_e.getByOffset("global_idx / 4")};
            let x_vec = ${l?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${ie===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${_e.getByOffset("global_idx")};`};

          // Set scale input
          ${R?`let scale_value= ${ue.getByOffset("0")}`:W?`
            let scale_index = ${Ge.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${ue.getByOffset("scale_index")};`:`
            var scale_indices: ${ue.type.indices} = output_indices;
            let index = ${ue.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${ue.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${ue.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${we?R?y?`
                let zero_point_input = ${we.getByOffset("0")};
                let zero_point_vec =  ${l?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${we.getByOffset("0")}`:W?y?`
                let zero_point_index = ${Ge.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${we.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${l?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${Ge.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${we.getByOffset("zero_point_index")};`:y?`
                let zero_point_offset = ${ue.indicesToOffset("scale_indices")};
                let zero_point_input = ${we.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${l?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${we.getByIndices("scale_indices")};`:`let zero_point_value = ${y?l?"i32":"u32":_e.type.value}(0);`};
      // Compute and write output
      ${Ge.setByOffset("global_idx",`${Ge.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:we?["rank","rank","rank"]:["rank","rank"]},getShaderSource:St,getRunData:()=>({outputs:[{dims:d,dataType:c}],dispatchGroup:{x:Math.ceil(g/ie/64),y:1,z:1},programUniforms:Mt})}},oh=(e,r)=>{nh(e.inputs,r),e.compute(ih(e.inputs,r))},ah=e=>er({axis:e.axis,blockSize:e.blockSize})}),lh,ch,uh,Nm=f(()=>{kt(),Dt(),or(),lh=(e,r,i)=>{let a=e===r,l=e<r&&i<0,d=e>r&&i>0;if(a||l||d)throw new Error("Range these inputs' contents are invalid.")},ch=(e,r,i,a)=>{let l=Math.abs(Math.ceil((r-e)/i)),d=[l],c=l,g=[{type:12,data:c},{type:a,data:e},{type:a,data:i},...yt(d)],y=w=>{let F=$t("output",a,d.length),$=F.type.value,m=[{name:"outputSize",type:"u32"},{name:"start",type:$},{name:"delta",type:$}];return`
        ${w.registerUniforms(m).declareVariables(F)}
        ${w.mainStart()}
        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${$}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${a}`},getShaderSource:y,getRunData:()=>({outputs:[{dims:d,dataType:a}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:g})}},uh=e=>{let r=0,i=0,a=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],i=e.inputs[1].getInt32Array()[0],a=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],i=e.inputs[1].getFloat32Array()[0],a=e.inputs[2].getFloat32Array()[0]),S.webgpu.validateInputContent&&lh(r,i,a),e.compute(ch(r,i,a,e.inputs[0].dataType),{inputs:[]})}}),dh,ph,hh,mh,fh,gh,_h,yh,wh,bh,vh,_c,Mh,xh,Th,kh,Um,ar,Eh,ks=f(()=>{Dt(),Kt(),mr(),or(),dh=(e,r)=>{if(e.every(i=>i>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},ph=(e,r,i)=>{r.every(l=>l>=0&&l<i||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let a=new Array(i).fill(1);return r.forEach((l,d)=>a[l]=e[d]),a},hh=(e,r,i,a,l,d)=>{let[c,g,y]=i>10?[1,2,3]:[-1,e.length>1?1:-1,-1],w=e[0].dims.length;if(c>0&&e.length>c&&e[c].dims.length>0)e[c].getFloat32Array().forEach(F=>d.push(F));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(g>0&&e.length>g&&e[g].dims.length===1&&e[g].dims[0]>0){if(e[g].getFloat32Array().forEach(F=>a.push(F)),a.length!==0&&a.length!==w&&i>=18&&a.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");dh(a,r),r.axes.length>0&&ph(a,r.axes,w).forEach((F,$)=>a[$]=F)}if(y>0&&e.length>y&&e[y].dims.length===1&&e[y].dims[0]>0&&(e[y].getBigInt64Array().forEach(F=>l.push(Number(F))),l.length!==0&&l.length!==w&&i>=18&&l.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(a.length!==0&&a.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(l.length!==0&&l.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof a<"u"&&typeof l<"u"&&a.length>0&&l.length>w)throw new Error("Resize requires only of scales or sizes to be specified")},mh=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`return ${r}(xResized) / ${r}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${r}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${r}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${r}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",fh=(e,r,i)=>`fn getNearestPixelFromOriginal(xOriginal: ${i}, isDownSample: bool) -> ${i} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",gh=(e,r,i)=>{let a=new Array(i).fill(0).concat(new Array(i).fill(1)),l=e.length===0?a:e.slice();return r.length>0?(r.forEach((d,c)=>{a[d]=l[c],a[c+i]=l[r.length+c]}),a):l},_h=(e,r,i,a)=>{let l=[];if(i.length>0)if(a.length>0){if(e.forEach(d=>l.push(d)),Math.max(...a)>e.length)throw new Error("axes is out of bound");a.forEach((d,c)=>l[d]=i[c])}else i.forEach(d=>l.push(d));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");l=e.map((d,c)=>Math.round(d*r[c]))}return l},yh=(e,r,i)=>{let a=(()=>{switch(i.keepAspectRatioPolicy){case"not_larger":return i.axes.length>0?Math.min(...i.axes.map(d=>r[d]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return i.axes.length>0?Math.max(...i.axes.map(d=>r[d]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${i.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let l=e.slice();return i.axes.length>0?(i.axes.forEach(d=>r[d]=a),i.axes.forEach(d=>l[d]=Math.round(e[d]*r[d]))):(r.fill(a,0,r.length),l.forEach((d,c)=>l[c]=Math.round(d*r[c]))),l},wh=(e,r,i,a,l)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${i.length}> {
      var original_indices: array<${e.type.value}, ${i.length}>;
      for (var i:u32 = 0; i < ${i.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${At("uniforms.scales","i",a)};
        var roi_low = ${At("uniforms.roi","i",l)};
        var roi_hi = ${At("uniforms.roi",`i + ${r.length}`,l)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${At("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${At("uniforms.output_shape","i",i.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,bh=(e,r,i,a,l,d,c)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${a.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${At("uniforms.scales","i",l)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${At("uniforms.roi","i",d)};
          var roi_hi = ${At("uniforms.roi",`i + ${i.length}`,d)};
          var input_shape_i = ${At("uniforms.input_shape","i",i.length)};
          var output_shape_i = ${At("uniforms.output_shape","i",a.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${c} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,vh=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${At("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,_c=(e,r,i,a)=>e.rank>a?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",i,"batch")};
`:"",Mh=(e,r,i,a,l)=>{let[d,c,g,y]=i.length===2?[-1,0,1,-1]:[0,2,3,1],w=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${w} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",c,`max(0, min(row, ${i[c]} - 1))`)};
      ${e.indicesSet("input_indices",g,`max(0, min(col, ${i[g]} - 1))`)};
      ${_c(e,y,d,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${w} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${w} = originalIndices[${c}];
      var col:${w} = originalIndices[${g}];
      ${a?`if (row < 0 || row > (${i[c]} - 1) || col < 0 || col > (${i[g]} - 1)) {
        return ${l};
      }`:""};
      row = max(0, min(row, ${i[c]} - 1));
      col = max(0, min(col, ${i[g]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${i.length>2?`u32(originalIndices[${y}])`:"0"};
      var batch: u32 =  ${i.length>2?`u32(originalIndices[${d}])`:"0"};
      var x11: ${w} = getInputValue(batch, channel, row1, col1);
      var x12: ${w} = getInputValue(batch, channel, row1, col2);
      var x21: ${w} = getInputValue(batch, channel, row2, col1);
      var x22: ${w} = getInputValue(batch, channel, row2, col2);
      var dx1: ${w} = abs(row - ${w}(row1));
      var dx2: ${w} = abs(${w}(row2) - row);
      var dy1: ${w} = abs(col - ${w}(col1));
      var dy2: ${w} = abs(${w}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},xh=(e,r,i,a,l,d,c,g,y,w)=>{let F=i.length===2,[$,m]=F?[0,1]:[2,3],R=e.type.value,W=q=>{let ne=q===$?"row":"col";return`
      fn ${ne}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${R} {
        var output_index = ${r.indicesGet("output_indices",q)};
        var originalIdx: ${R} = getOriginalCoordinateFromResizedCoordinate(output_index, ${l[q]},
        ${a[q]}, ${i[q]}, ${d[q]}, ${d[q]} + ${i.length});
        var fractOriginalIdx: ${R} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${g} && (originalIdx < 0 || originalIdx > (${i[q]} - 1))) {
          return ${y};
        }
        var data: array<${R}, 4> = array<${R}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${ne}: ${R} = originalIdx + ${R}(i);
          if (${ne} < 0 || ${ne} >= ${i[q]}) {
            ${w?`coefs[i + 1] = 0.0;
                        continue;`:g?`return ${y};`:`${ne} = max(0, min(${ne}, ${i[q]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",q,`u32(${ne})`)};
          data[i + 1] = ${q===$?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${W($)};
    ${W(m)};
  fn getCubicInterpolationCoefs(s: ${R}) -> array<${R}, 4> {
    var absS = abs(s);
    var coeffs: array<${R}, 4> = array<${R}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${R} = 1.0 - absS;
    var twoMinusAbsS: ${R} = 2.0 - absS;
    var onePlusAbsS: ${R} = 1.0 + absS;
    coeffs[0] = ((${c} * onePlusAbsS - 5 * ${c}) * onePlusAbsS + 8 * ${c}) * onePlusAbsS - 4 * ${c};
    coeffs[1] = ((${c} + 2) * absS - (${c} + 3)) * absS * absS + 1;
    coeffs[2] = ((${c} + 2) * oneMinusAbsS - (${c} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${c} * twoMinusAbsS - 5 * ${c}) * twoMinusAbsS + 8 * ${c}) * twoMinusAbsS - 4 * ${c};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${R}, 4>, coefs: array<${R}, 4>) -> ${R} {
    var coefsSum: ${R} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${R} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Th=(e,r,i,a,l)=>{let[d,c,g,y,w]=i.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],F=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${F} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${i[c]} - 1))`)};
      ${e.indicesSet("input_indices",g,`max(0, min(height, ${i[g]} - 1))`)};
      ${e.indicesSet("input_indices",y,`max(0, min(width, ${i[y]} - 1))`)};
      ${_c(e,w,d,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${F} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${F} = originalIndices[${c}];
      var height:${F} = originalIndices[${g}];
      var width:${F} = originalIndices[${y}];
      ${a?`if (depth < 0 || depth > (${i[c]} - 1) || height < 0 || height > (${i[g]} - 1) || width < 0 || (width > ${i[y]} - 1)) {
      return ${l};
        }`:""};

    depth = max(0, min(depth, ${i[c]} - 1));
      height = max(0, min(height, ${i[g]} - 1));
      width = max(0, min(width, ${i[y]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${i.length>3?`u32(originalIndices[${w}])`:"0"};
      var batch: u32 =  ${i.length>3?`u32(originalIndices[${d}])`:"0"};

      var x111: ${F} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${F} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${F} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${F} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${F} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${F} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${F} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${F} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${F} = abs(depth - ${F}(depth1));
      var dx2: ${F} = abs(${F}(depth2) - depth);
      var dy1: ${F} = abs(height - ${F}(height1));
      var dy2: ${F} = abs(${F}(height2) - height);
      var dz1: ${F} = abs(width - ${F}(width1));
      var dz2: ${F} = abs(${F}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},kh=(e,r,i,a,l,d)=>{let c=e.dims,g=gh(d,r.axes,c.length),y=_h(c,a,l,r.axes),w=a.slice();a.length===0&&(w=c.map((Z,_e)=>Z===0?1:y[_e]/Z),r.keepAspectRatioPolicy!=="stretch"&&(y=yh(c,w,r)));let F=$t("output",e.dataType,y.length),$=tt("input",e.dataType,c.length),m=De.size(y),R=c.length===y.length&&c.every((Z,_e)=>Z===y[_e]),W=r.coordinateTransformMode==="tf_crop_and_resize",q=r.extrapolationValue,ne=$.type.value,ie=Z=>`
      ${R?"":`
      ${mh(r.coordinateTransformMode,ne)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${vh($,c)};
              ${fh(r.nearestMode,i,ne)};
              ${bh($,F,c,y,w.length,g.length,W)};
              `;case"linear":return`
              ${wh(F,c,y,w.length,g.length)};
              ${(()=>{if(c.length===2||c.length===4)return`${Mh($,F,c,W,q)}`;if(c.length===3||c.length===5)return`${Th($,F,c,W,q)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(c.length===2||c.length===4)return`${xh($,F,c,y,w,g,r.cubicCoeffA,W,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${Z.registerUniform("output_size","u32").registerUniform("scales","f32",w.length).registerUniform("roi","f32",g.length).declareVariables($,F)}
      ${Z.mainStart()}
        ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${R?"output[global_idx] = input[global_idx];":`
        let output_indices = ${F.offsetToIndices("global_idx")};
        var input_indices: ${$.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${$.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${c.length===2||c.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${i}|${w.length>0?w:""}|${l.length>0?l:""}|${g.length>0?g:""}|${R}|${c}`,inputDependencies:["rank"]},getShaderSource:ie,getRunData:()=>({outputs:[{dims:y,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},{type:1,data:w},{type:1,data:g},...yt(c,y)]})}},Um=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},ar=(e,r)=>{let i=[],a=[],l=[],d=Um(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");hh(e.inputs,r,d,i,a,l),e.compute(kh(e.inputs[0],r,d,i,a,l),{inputs:[0]})},Eh=e=>{let r=e.antialias,i=e.axes,a=e.coordinateTransformMode,l=e.cubicCoeffA,d=e.excludeOutside!==0,c=e.extrapolationValue,g=e.keepAspectRatioPolicy,y=e.mode,w=e.nearestMode===""?"simple":e.nearestMode;return er({antialias:r,axes:i,coordinateTransformMode:a,cubicCoeffA:l,excludeOutside:d,extrapolationValue:c,keepAspectRatioPolicy:g,mode:y,nearestMode:w})}}),Es,Os,Ei,hg=f(()=>{Dt(),Kt(),mr(),or(),Es=(e,r)=>{let[i,a,l,d]=e,{numHeads:c,rotaryEmbeddingDim:g}=r;if(i.dims.length!==3&&i.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${i.dims.length}`);if(!De.areEqual(a.dims,[])&&!De.areEqual(a.dims,[1])&&a.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${a.dims.length}`);if(l.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${l.dims.length}`);if(d.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${d.dims.length}`);if(!De.areEqual(l.dims,d.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(g>0&&c===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let y=i.dims[0],w=i.dims[i.dims.length-2],F=l.dims[0],$=De.sizeFromDimension(i.dims,1)/w,m=g===0?l.dims[1]*2:$/c;if(g>m)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(a.dims.length===2){if(y!==a.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${a.dims[0]}`);if(w!==a.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${a.dims[1]}`)}if(m/2!==l.dims[1]&&g/2!==l.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${l.dims[1]}`);if(w>F)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Os=(e,r)=>{let{interleaved:i,numHeads:a,rotaryEmbeddingDim:l,scale:d}=r,c=e[0].dims[0],g=De.sizeFromDimension(e[0].dims,1),y=e[0].dims[e[0].dims.length-2],w=g/y,F=e[2].dims[1],$=l===0?F*2:w/a,m=new Array(c,y,w/$,$-F),R=De.computeStrides(m),W=[{type:1,data:d},{type:12,data:m},{type:12,data:R},...e[0].dims.length===3?new Array({type:12,data:[g,w,$,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[g,$,y*$,1]}):[],...yt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],q=ne=>{let ie=tt("input",e[0].dataType,e[0].dims.length),Z=tt("position_ids",e[1].dataType,e[1].dims.length),_e=tt("cos_cache",e[2].dataType,e[2].dims.length),ue=tt("sin_cache",e[3].dataType,e[3].dims.length),we=$t("output",e[0].dataType,e[0].dims.length);return ne.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:m.length},{name:"global_strides",type:"u32",length:R.length},{name:"input_output_strides",type:"u32",length:R.length}]),`
        ${ne.declareVariables(ie,Z,_e,ue,we)}

        ${ne.mainStart(ts)}
          let half_rotary_emb_dim = uniforms.${_e.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${ne.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${Z.broadcastedIndicesToOffset("bsnh.xy",$t("",Z.type.tensor,2))};
            let position_id =
                u32(${Z.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${i});
            let j = i + select(half_rotary_emb_dim, 1, ${i});
            let re = ${ie.getByOffset("i")} * ${_e.get("position_id","bsnh[3]")} -
                ${ie.getByOffset("j")} * ${ue.get("position_id","bsnh[3]")};
            ${we.setByOffset("i","re")}
            let im = ${ie.getByOffset("i")} * ${ue.get("position_id","bsnh[3]")} +
                ${ie.getByOffset("j")} * ${_e.get("position_id","bsnh[3]")};
            ${we.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${we.setByOffset("k",ie.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:er({interleaved:i}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:q,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(De.size(m)/ts)},programUniforms:W})}},Ei=(e,r)=>{Es(e.inputs,r),e.compute(Os(e.inputs,r))}}),Ph,Ch,T,z=f(()=>{Dt(),Kt(),or(),Ph=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],i=e[1],a=e[2];if(r.dataType!==i.dataType||r.dataType!==a.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(i.dims.length!==3&&i.dims.length!==2)throw new Error("Skip must be 2D or 3D");let l=r.dims[r.dims.length-1],d=r.dims[r.dims.length-2];if(i.dims[i.dims.length-1]!==l)throw new Error("Skip must have the same hidden size as input");if(i.dims[i.dims.length-2]!==d)throw new Error("Skip must have the same sequence length as input");if(a.dims.length!==1)throw new Error("Gamma must be 1D");if(a.dims[a.dims.length-1]!==l)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let c=e[3];if(c.dims.length!==1)throw new Error("Beta must be 1D");if(c.dims[c.dims.length-1]!==l)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let c=e[4];if(c.dims.length!==1)throw new Error("Bias must be 1D");if(c.dims[c.dims.length-1]!==l)throw new Error("Bias must have the same hidden size as input")}},Ch=(e,r,i,a)=>{let l=r.simplified,d=e[0].dims,c=De.size(d),g=d,y=c,w=d.slice(-1)[0],F=a?d.slice(0,-1).concat(1):[],$=!l&&e.length>3,m=e.length>4,R=a&&i>1,W=a&&i>2,q=i>3,ne=64,ie=ir(w),Z=[{type:12,data:y},{type:12,data:ie},{type:12,data:w},{type:1,data:r.epsilon}],_e=we=>{let Ge=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Le=[tt("x",e[0].dataType,e[0].dims,ie),tt("skip",e[1].dataType,e[1].dims,ie),tt("gamma",e[2].dataType,e[2].dims,ie)];$&&Le.push(tt("beta",e[3].dataType,e[3].dims,ie)),m&&Le.push(tt("bias",e[4].dataType,e[4].dims,ie)),Le.push($t("output",e[0].dataType,g,ie)),R&&Le.push($t("mean_output",1,F)),W&&Le.push($t("inv_std_output",1,F)),q&&Le.push($t("input_skip_bias_sum",e[0].dataType,g,ie));let st=dr(e[0].dataType),Mt=dr(1,ie);return`

      ${we.registerUniforms(Ge).declareVariables(...Le)}
      var<workgroup> sum_shared : array<${Mt}, ${ne}>;
      var<workgroup> sum_squared_shared : array<${Mt}, ${ne}>;

      ${we.mainStart([ne,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${ne};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${ne};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${ne-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${m?"bias[offset1d + i]":st+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${q?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${xn(st,ie,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${ne};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Tn("sum",ie)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Tn("square_sum",ie)} / f32(uniforms.hidden_size) ${l?"":"- mean * mean"} + uniforms.epsilon);
        ${R?"mean_output[global_idx] = mean;":""}
        ${W?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${l?"":`- ${st}(mean)`}) *
            ${st}(inv_std_dev) * gamma[offset1d + i]
            ${$?"+ beta[offset1d + i]":""};
        }
      }`},ue=[{dims:g,dataType:e[0].dataType}];return i>1&&ue.push({dims:F,dataType:1}),i>2&&ue.push({dims:F,dataType:1}),i>3&&ue.push({dims:d,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${ie};${R};${W};${q}`,inputDependencies:e.map((we,Ge)=>"type")},getShaderSource:_e,getRunData:()=>({outputs:ue,dispatchGroup:{x:Math.ceil(y/w)},programUniforms:Z})}},T=(e,r)=>{Ph(e.inputs);let i=[0];e.outputCount>1&&i.push(-3),e.outputCount>2&&i.push(-3),e.outputCount>3&&i.push(3),e.compute(Ch(e.inputs,r,e.outputCount,!1),{outputs:i})}}),U,xe,ze,Ie,Je,rt,ft,vt,Jt=f(()=>{Dt(),Kt(),mr(),or(),U=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((i,a)=>{if(e[a+1].dataType!==6&&e[a+1].dataType!==7)throw new Error(`Input ${a} must be an array of int32 or int64`)})},xe=(e,r)=>{let i=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(a=>i.push(Number(a)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(a=>i.push(Number(a)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return i},ze=(e,r)=>{if(e.length>1){let i=xe(e,1),a=xe(e,2),l=xe(e,3);return l.length===0&&(l=[...Array(e[0].dims.length).keys()]),er({starts:i,ends:a,axes:l})}else return r},Ie=(e,r,i,a,l)=>{let d=e;return e<0&&(d+=i[a[r]]),l[r]<0?Math.max(0,Math.min(d,i[a[r]]-1)):Math.max(0,Math.min(d,i[a[r]]))},Je=(e,r,i)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${i.length}; i >= 0; i--) {
            let input_shape_i = ${At("uniforms.input_shape","i",i.length)};
            let steps_i = ${At("uniforms.steps","i",i.length)};
            let signs_i = ${At("uniforms.signs","i",i.length)};
            let starts_i = ${At("uniforms.starts","i",i.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,rt=(e,r)=>{let i=e[0].dims,a=De.size(i),l=r.axes.length>0?De.normalizeAxes(r.axes,i.length):[...Array(i.length).keys()],d=xe(e,4);d.forEach(ie=>ie!==0||(()=>{throw new Error("step cannot be 0")})),d.length===0&&(d=Array(l.length).fill(1));let c=r.starts.map((ie,Z)=>Ie(ie,Z,i,l,d)),g=r.ends.map((ie,Z)=>Ie(ie,Z,i,l,d));if(l.length!==c.length||l.length!==g.length)throw new Error("start, ends and axes should have the same number of elements");if(l.length!==i.length)for(let ie=0;ie<i.length;++ie)l.includes(ie)||(c.splice(ie,0,0),g.splice(ie,0,i[ie]),d.splice(ie,0,1));let y=d.map(ie=>Math.sign(ie));d.forEach((ie,Z,_e)=>{if(ie<0){let ue=(g[Z]-c[Z])/ie,we=c[Z],Ge=we+ue*d[Z];c[Z]=Ge,g[Z]=we,_e[Z]=-ie}});let w=i.slice(0);l.forEach((ie,Z)=>{w[ie]=Math.ceil((g[ie]-c[ie])/d[ie])});let F={dims:w,dataType:e[0].dataType},$=$t("output",e[0].dataType,w.length),m=tt("input",e[0].dataType,e[0].dims.length),R=De.size(w),W=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:c.length},{name:"signs",type:"i32",length:y.length},{name:"steps",type:"u32",length:d.length}],q=[{type:12,data:R},{type:12,data:c},{type:6,data:y},{type:12,data:d},...yt(e[0].dims,w)],ne=ie=>`
      ${ie.registerUniforms(W).declareVariables(m,$)}
        ${Je(m,$,i)}
        ${ie.mainStart()}
          ${ie.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${$.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${$.setByOffset("global_idx",m.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${y.length}_${c.length}_${d.length}`,inputDependencies:["rank"]},getShaderSource:ne,getRunData:()=>({outputs:[F],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:q})}},ft=(e,r)=>{U(e.inputs,r);let i=ze(e.inputs,r);e.compute(rt(e.inputs,i),{inputs:[0]})},vt=e=>{let r=e.starts,i=e.ends,a=e.axes;return er({starts:r,ends:i,axes:a})}}),Gt,Bt,Yt,cr,pr=f(()=>{Dt(),Kt(),mr(),Nn(),or(),Gt=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Bt=(e,r)=>{let i=e.inputs[0],a=i.dims,l=De.size(a),d=64,c=a.length,g=De.normalizeAxis(r.axis,c),y=g<a.length-1,w,F=[];y?(F=Array.from({length:c},(Le,st)=>st),F[g]=c-1,F[c-1]=g,w=e.compute(Qs(i,F),{inputs:[i],outputs:[-1]})[0]):w=i;let $=w.dims,m=$[c-1],R=l/m,W=ir(m),q=m/W,ne=(Le,st)=>st===4?`max(max(${Le}.x, ${Le}.y), max(${Le}.z, ${Le}.w))`:st===2?`max(${Le}.x, ${Le}.y)`:st===3?`max(max(${Le}.x, ${Le}.y), ${Le}.z)`:Le,ie=tt("x",w.dataType,w.dims,W),Z=$t("result",w.dataType,w.dims,W),_e=ie.type.value,ue=dr(w.dataType)==="f32"?`var threadMax = ${_e}(-3.402823e+38f);`:`var threadMax = ${_e}(-65504.0h);`,we=Le=>`
      var<workgroup> rowMaxShared : ${_e};
      var<workgroup> rowSumShared : ${_e};
      var<workgroup> threadShared : array<${_e}, ${d}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_e} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_e}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Le.registerUniform("packedCols","i32").declareVariables(ie,Z)}
      ${Le.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${d};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${ue}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${_e}(${ne("threadShared[0]",W)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${_e}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${_e}(${Tn("threadShared[0]",W)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,Ge=e.compute({name:"Softmax",shaderCache:{hint:`${W}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:$,dataType:w.dataType}],dispatchGroup:{x:R},programUniforms:[{type:6,data:q}]}),getShaderSource:we},{inputs:[w],outputs:[y?-1:0]})[0];y&&e.compute(Qs(Ge,F),{inputs:[Ge]})},Yt=(e,r)=>{Gt(e.inputs),Bt(e,r)},cr=e=>er({axis:e.axis})}),tr,gr,qr,jr,yr,Rr,Xr,zs=f(()=>{Dt(),Kt(),mr(),or(),tr=e=>{if(!e||e.length<1)throw new Error("too few inputs")},gr=(e,r)=>{let i=[],a=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(l=>i.push(Number(l))),a=i.length),er({numOutputs:a,axis:r.axis,splitSizes:i})},qr=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${At("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,jr=e=>{let r=e.length,i=[];for(let a=0;a<r;++a){let l=e[a].setByIndices("indices","input[global_idx]");r===1?i.push(l):a===0?i.push(`if (output_number == ${a}u) { ${l} }`):a===r-1?i.push(`else { ${l} }`):i.push(`else if (output_number == ${a}) { ${l} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${i.join(`
`)}
      }`},yr=(e,r)=>{let i=e[0].dims,a=De.size(i),l=e[0].dataType,d=De.normalizeAxis(r.axis,i.length),c=new Array(r.numOutputs),g=tt("input",l,i.length),y=new Array(r.numOutputs),w=[],F=[],$=0,m=[{type:12,data:a}];for(let W=0;W<r.numOutputs;W++){$+=r.splitSizes[W],y[W]=$;let q=i.slice();q[d]=r.splitSizes[W],F.push(q),c[W]=$t(`output${W}`,l,q.length),w.push({dims:F[W],dataType:e[0].dataType})}m.push({type:12,data:y},...yt(i,...F));let R=W=>`
  ${W.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",y.length).declareVariables(g,...c)}
  ${qr(y.length)}
  ${jr(c)}

  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${g.offsetToIndices("global_idx")};
    var index = ${g.indicesGet("indices",d)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${At("uniforms.size_in_split_axis","output_number - 1u",y.length)};
      ${g.indicesSet("indices",d,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:R,getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m})}},Rr=(e,r)=>{tr(e.inputs);let i=e.inputs.length===1?r:gr(e.inputs,r);e.compute(yr(e.inputs,i),{inputs:[0]})},Xr=e=>{let r=e.axis,i=e.splitSizes,a=e.numOutputs<0?i.length:e.numOutputs;if(a!==i.length)throw new Error("numOutputs and splitSizes lengh must be equal");return er({axis:r,numOutputs:a,splitSizes:i})}}),_s,hn,Zi,Sh=f(()=>{Dt(),Kt(),or(),_s=(e,r,i,a,l)=>{let d=$t("output_data",l,i.length,4),c=tt("a_data",r[1].dataType,r[1].dims.length,4),g=tt("b_data",r[2].dataType,r[2].dims.length,4),y=tt("c_data",r[0].dataType,r[0].dims.length,4),w,F=($,m,R)=>`select(${m}, ${$}, ${R})`;if(!a)w=d.setByOffset("global_idx",F(c.getByOffset("global_idx"),g.getByOffset("global_idx"),y.getByOffset("global_idx")));else{let $=(m,R,W="")=>{let q=`a_data[index_a${R}][component_a${R}]`,ne=`b_data[index_b${R}][component_b${R}]`,ie=`bool(c_data[index_c${R}] & (0xffu << (component_c${R} * 8)))`;return`
            let output_indices${R} = ${d.offsetToIndices(`global_idx * 4u + ${R}u`)};
            let offset_a${R} = ${c.broadcastedIndicesToOffset(`output_indices${R}`,d)};
            let offset_b${R} = ${g.broadcastedIndicesToOffset(`output_indices${R}`,d)};
            let offset_c${R} = ${y.broadcastedIndicesToOffset(`output_indices${R}`,d)};
            let index_a${R} = offset_a${R} / 4u;
            let index_b${R} = offset_b${R} / 4u;
            let index_c${R} = offset_c${R} / 4u;
            let component_a${R} = offset_a${R} % 4u;
            let component_b${R} = offset_b${R} % 4u;
            let component_c${R} = offset_c${R} % 4u;
            ${m}[${R}] = ${W}(${F(q,ne,ie)});
          `};l===9?w=`
            var data = vec4<u32>(0);
            ${$("data",0,"u32")}
            ${$("data",1,"u32")}
            ${$("data",2,"u32")}
            ${$("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:w=`
            ${$("output_data[global_idx]",0)}
            ${$("output_data[global_idx]",1)}
            ${$("output_data[global_idx]",2)}
            ${$("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(y,c,g,d)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${w}
      }`},hn=e=>{let r=e[1].dims,i=e[2].dims,a=e[0].dims,l=e[1].dataType,d=!(De.areEqual(r,i)&&De.areEqual(i,a)),c=r,g=De.size(r);if(d){let w=gs.calcShape(gs.calcShape(r,i,!1),a,!1);if(!w)throw new Error("Can't perform where op on the given tensors");c=w,g=De.size(c)}let y=Math.ceil(g/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:w=>_s(w,e,c,d,l),getRunData:()=>({outputs:[{dims:c,dataType:l}],dispatchGroup:{x:Math.ceil(g/64/4)},programUniforms:[{type:12,data:y},...yt(a,r,i,c)]})}},Zi=e=>{e.compute(hn(e.inputs))}}),Ys,Vn=f(()=>{om(),aa(),am(),lm(),cm(),um(),dm(),ki(),_m(),ym(),Po(),vm(),Mm(),xm(),Tm(),Em(),Pm(),kp(),Am(),Ar(),jp(),Vd(),Vp(),Sp(),Dm(),Bm(),Rm(),Nm(),al(),ks(),hg(),z(),Jt(),pr(),zs(),$p(),Nn(),la(),Sh(),Ys=new Map([["Abs",[Wu]],["Acos",[Gu]],["Acosh",[dl]],["Add",[vd]],["ArgMax",[$u,oa]],["ArgMin",[Iu,oa]],["Asin",[qu]],["Asinh",[Ku]],["Atan",[pl]],["Atanh",[Hu]],["Attention",[Du]],["AveragePool",[Zp,Jp]],["BatchNormalization",[Ru]],["BiasAdd",[ul]],["BiasSplitGelu",[ca]],["Cast",[hl,Xu]],["Ceil",[ml]],["Clip",[Yu]],["Concat",[Sl,Id]],["Conv",[Nl,jl]],["ConvTranspose",[sp,Zd]],["Cos",[Ju]],["Cosh",[Zu]],["CumSum",[va,ip]],["DepthToSpace",[lp,cp]],["DequantizeLinear",[oh,ah]],["Div",[kl]],["Einsum",[hp,mp]],["Elu",[ed,vo]],["Equal",[Md]],["Erf",[td]],["Exp",[rd]],["Expand",[gp]],["FastGelu",[_p]],["Floor",[sd]],["FusedConv",[Nl,jl]],["Gather",[bp,wp]],["GatherElements",[Ql,xp]],["GatherBlockQuantized",[km,vp]],["Gelu",[nd]],["Gemm",[Sm,Cm]],["GlobalAveragePool",[th,eh]],["GlobalMaxPool",[sh,rh]],["Greater",[kd]],["GreaterOrEqual",[Pd]],["GroupQueryAttention",[nc,Op]],["HardSigmoid",[ud,cd]],["InstanceNormalization",[Dp]],["LayerNormalization",[Fm]],["LeakyRelu",[fl,vo]],["Less",[Ed]],["LessOrEqual",[Pl]],["Log",[fd]],["MatMul",[Ud]],["MatMulNBits",[Up,ac]],["MaxPool",[jm,gc]],["Mul",[xd]],["MultiHeadAttention",[Jl,Pp]],["Neg",[od]],["Not",[id]],["Pad",[Hp]],["Pow",[Td]],["QuickGelu",[_d,vo]],["Range",[uh]],["Reciprocal",[ad]],["ReduceMin",[il]],["ReduceMean",[Tu]],["ReduceMax",[Pu]],["ReduceSum",[Su]],["ReduceProd",[Cu]],["ReduceL1",[ku]],["ReduceL2",[nl]],["ReduceLogSum",[Au]],["ReduceLogSumExp",[Eu]],["ReduceSumSquare",[ol]],["Relu",[ld]],["Resize",[ar,Eh]],["RotaryEmbedding",[Ei]],["Sigmoid",[gl]],["Sin",[dd]],["Sinh",[pd]],["Slice",[ft,vt]],["SkipLayerNormalization",[T]],["Split",[Rr,Xr]],["Sqrt",[_l]],["Softmax",[Yt,cr]],["Sub",[El]],["Tan",[hd]],["Tanh",[wl]],["ThresholdedRelu",[md,vo]],["Tile",[Ip]],["Transpose",[tu,ru]],["Where",[Zi]]])}),yc,wc=f(()=>{kt(),Ee(),or(),yc=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,i,a,l){Qe(e.programInfo.name);let d=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let g=[];for(let w of r)g.push({binding:g.length,resource:{buffer:w.buffer}});for(let w of i)g.push({binding:g.length,resource:{buffer:w.buffer}});l&&g.push({binding:g.length,resource:l});let y=d.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:g,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let w={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:y,dispatchGroup:a};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(w)}c.setPipeline(e.computePipeline),c.setBindGroup(0,y),c.dispatchWorkgroups(...a),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ue(e.programInfo.name)}dispose(){}build(e,r){Qe(e.name);let i=this.backend.device,a=[];i.features.has("shader-f16")&&a.push("enable f16;");let l=Xa(r,this.backend.device.limits),d=e.getShaderSource(l),c=`${a.join(`
`)}
${l.additionalImplementations}
${d}`,g=i.createShaderModule({code:c,label:e.name});Mr("verbose",()=>`[WebGPU] ${e.name} shader code: ${c}`);let y=i.createComputePipeline({compute:{module:g,entryPoint:"main"},layout:"auto",label:e.name});return Ue(e.name),{programInfo:e,computePipeline:y,uniformVariablesInfo:l.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,i=typeof e=="number"?1:e.y||1,a=typeof e=="number"?1:e.z||1,l=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=l&&i<=l&&a<=l)return[r,i,a];let d=r*i*a,c=Math.ceil(Math.sqrt(d));if(c>l){if(c=Math.ceil(Math.cbrt(d)),c>l)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}}),Pa,Ca,Nr,ls,Pi=f(()=>{kt(),Dt(),Ee(),J(),nr(),Vn(),wc(),Pa=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let i=[];for(let a=0;a<e.length;++a){let l=e[a].dataType;switch(r[a]){case"none":{i.push("");break}case"type":{i.push(`${l}`);break}case"rank":{let d=e[a].dims.length;i.push(`${l};${d}`);break}case"dims":{let d=e[a].dims.join(",");i.push(`${l};${d}`);break}default:throw new Error(`unsupported input dependency: ${r[a]}`)}}return i.join("|")},Ca=(e,r,i)=>{var l,d;let a=e.name;return(l=e.shaderCache)!=null&&l.hint&&(a+="["+e.shaderCache.hint+"]"),a+=":"+i+`:${Pa(r,((d=e.shaderCache)==null?void 0:d.inputDependencies)??new Array(r.length).fill("dims"))}`,a},Nr=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},ls=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let i=[],a={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:i};r.features.has("chromium-experimental-timestamp-query-inside-passes")?i.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&i.push("timestamp-query"),r.features.has("shader-f16")&&i.push("shader-f16"),this.device=await r.requestDevice(a),this.adapterInfo=new Nr(r.info||await r.requestAdapterInfo()),this.gpuDataManager=xr(this),this.programManager=new yc(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Qi(e.logLevel,!!e.debug),this.device.onuncapturederror=l=>{l.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${l.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Qe(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var a;let r=new BigUint64Array(e.getMappedRange()),i=this.pendingQueries.get(e);for(let l=0;l<r.length/2;l++){let d=i[l],c=d.kernelId,g=this.kernels.get(c),y=g.kernelType,w=g.kernelName,F=d.programName,$=d.inputTensorViews,m=d.outputTensorViews,R=r[l*2],W=r[l*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=R);let q=Number(R-this.queryTimeBase),ne=Number(W-this.queryTimeBase);if(!Number.isSafeInteger(q)||!Number.isSafeInteger(ne))throw new RangeError("incorrect timestamp range");if((a=this.env.webgpu.profiling)!=null&&a.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:$.map(ie=>({dims:ie.dims,dataType:cn(ie.dataType)})),outputsMetadata:m.map(ie=>({dims:ie.dims,dataType:cn(ie.dataType)})),kernelId:c,kernelType:y,kernelName:w,programName:F,startTime:q,endTime:ne});else{let ie="";$.forEach((_e,ue)=>{ie+=`input[${ue}]: [${_e.dims}] | ${cn(_e.dataType)}, `});let Z="";m.forEach((_e,ue)=>{Z+=`output[${ue}]: [${_e.dims}] | ${cn(_e.dataType)}, `}),console.log(`[profiling] kernel "${c}|${y}|${w}|${F}" ${ie}${Z}execution time: ${ne-q} ns`)}Ze("GPU",`${F}::${R}::${W}`)}e.unmap(),this.pendingQueries.delete(e)}),Ue()}run(e,r,i,a,l,d){Qe(e.name);let c=[];for(let Z=0;Z<r.length;++Z){let _e=r[Z].data;if(_e===0)continue;let ue=this.gpuDataManager.get(_e);if(!ue)throw new Error(`no GPU data for input: ${_e}`);c.push(ue)}let{outputs:g,dispatchGroup:y,programUniforms:w}=e.getRunData(r),F=i.length===0?g.map((Z,_e)=>_e):i;if(F.length!==g.length)throw new Error(`Output size ${F.length} must be equal to ${g.length}.`);let $=[],m=[];for(let Z=0;Z<g.length;++Z){if(!Number.isInteger(F[Z])||F[Z]<-3||F[Z]>=d)throw new Error(`Invalid output index: ${F[Z]}`);if(F[Z]===-3)continue;let _e=F[Z]===-1,ue=F[Z]===-2,we=_e||ue?l(g[Z].dataType,g[Z].dims):a(F[Z],g[Z].dataType,g[Z].dims);if($.push(we),we.data===0)continue;let Ge=this.gpuDataManager.get(we.data);if(!Ge)throw new Error(`no GPU data for output: ${we.data}`);if(_e&&this.temporaryData.push(Ge),ue){let Le=this.kernelPersistentData.get(this.currentKernelId);Le||(Le=[],this.kernelPersistentData.set(this.currentKernelId,Le)),Le.push(Ge)}m.push(Ge)}if(c.length!==r.length||m.length!==$.length){if(m.length===0)return Ue(e.name),$;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let R;if(w){let Z=0,_e=[];w.forEach(Le=>{let st=typeof Le.data=="number"?[Le.data]:Le.data;if(st.length===0)return;let Mt=Le.type===10?2:4,St,sr;Le.type===10?(sr=st.length>4?16:st.length>2?8:st.length*Mt,St=st.length>4?16:Mt*st.length):(sr=st.length<=2?st.length*Mt:16,St=16),Z=Math.ceil(Z/sr)*sr,_e.push(Z);let lr=Le.type===10?8:4;Z+=st.length>4?Math.ceil(st.length/lr)*St:st.length*Mt});let ue=16;Z=Math.ceil(Z/ue)*ue;let we=new ArrayBuffer(Z);w.forEach((Le,st)=>{let Mt=_e[st],St=typeof Le.data=="number"?[Le.data]:Le.data;if(Le.type===6)new Int32Array(we,Mt,St.length).set(St);else if(Le.type===12)new Uint32Array(we,Mt,St.length).set(St);else if(Le.type===10)new Uint16Array(we,Mt,St.length).set(St);else if(Le.type===1)new Float32Array(we,Mt,St.length).set(St);else throw new Error(`Unsupported uniform type: ${cn(Le.type)}`)});let Ge=this.gpuDataManager.create(Z,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Ge.buffer,0,we,0,Z),this.gpuDataManager.release(Ge.id),R={offset:0,size:Z,buffer:Ge.buffer}}let W=this.programManager.normalizeDispatchGroupSize(y),q=W[1]===1&&W[2]===1,ne=Ca(e,r,q),ie=this.programManager.getArtifact(ne);if(ie||(ie=this.programManager.build(e,W),this.programManager.setArtifact(ne,ie),Mr("info",()=>`[artifact] key: ${ne}, programName: ${e.name}`)),w&&ie.uniformVariablesInfo){if(w.length!==ie.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${ie.uniformVariablesInfo.length}, got ${w.length} in program "${ie.programInfo.name}".`);for(let Z=0;Z<w.length;Z++){let _e=w[Z],ue=_e.type,we=typeof _e.data=="number"?1:_e.data.length,[Ge,Le]=ie.uniformVariablesInfo[Z];if(ue!==Ge||we!==Le)throw new Error(`Uniform variable ${Z} mismatch: expect type ${Ge} with size ${Le}, got type ${ue} with size ${we} in program "${ie.programInfo.name}".`)}}if(Mr("info",()=>`[ProgramManager] run "${e.name}" (key=${ne}) with ${W[0]}x${W[1]}x${W[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let Z={kernelId:this.currentKernelId,programName:ie.programInfo.name,inputTensorViews:r,outputTensorViews:$};this.pendingKernels.push(Z),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(Z)}return this.programManager.run(ie,c,m,W,R),Ue(e.name),$}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,i,a){let l=Ys.get(e);if(!l)throw new Error(`kernel not implemented: ${e}`);let d={kernelType:e,kernelName:a,kernelEntry:l[0],attributes:[l[1],i]};this.kernels.set(r,d)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let i of r)this.gpuDataManager.release(i.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,i){let a=this.kernels.get(e);if(!a)throw new Error(`kernel not created: ${e}`);let l=a.kernelType,d=a.kernelName,c=a.kernelEntry,g=a.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${l}] ${d}" is not allowed to be called recursively`);this.currentKernelId=e,g[0]&&(g[1]=g[0](g[1]),g[0]=void 0),Mr("info",()=>`[WebGPU] Start to run kernel "[${l}] ${d}"...`);let y=this.env.debug;this.temporaryData=[];try{return y&&this.device.pushErrorScope("validation"),c(r,g[1]),0}catch(w){return i.push(Promise.resolve(`[WebGPU] Kernel "[${l}] ${d}" failed. ${w}`)),1}finally{y&&i.push(this.device.popErrorScope().then(w=>w?`GPU validation error for kernel "[${l}] ${d}": ${w.message}`:null));for(let w of this.temporaryData)this.gpuDataManager.release(w.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,i,a){let l=this.sessionExternalDataMapping.get(e);l||(l=new Map,this.sessionExternalDataMapping.set(e,l));let d=l.get(r),c=this.gpuDataManager.registerExternalBuffer(i,a,d);return l.set(r,[c,i]),c}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(i=>this.gpuDataManager.unregisterExternalBuffer(i[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,i){return async()=>{let a=await xt(this,e,r);return I(a.buffer,i)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Mr("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Mr("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Mr("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),i=e.length;this.pendingKernels=[];for(let a=0;a<i;a++){let l=this.getComputePassEncoder(),d=e[a];this.writeTimestamp(this.pendingDispatchNumber*2),l.setPipeline(d.computePipeline),l.setBindGroup(0,d.bindGroup),l.dispatchWorkgroups(...d.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[a]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Ci,Si,Io,bc,vc,Ah=f(()=>{Ee(),Ci=1,Si=()=>Ci++,Io=class{constructor(e,r){this.mlContext=e,this.tensorEntry=r,this.tensorCache=r?[r]:[]}get tensor(){var e;return(e=this.tensorEntry)==null?void 0:e[0]}get context(){if(!this.mlContext)throw new Error("MLContext has not been set.");return this.mlContext}set context(e){if(this.mlContext&&this.mlContext!==e)throw new Error("MLTensor in use in a different MLContext.");this.mlContext=e}destroy(){for(let[e]of this.tensorCache)e.destroy();this.tensorCache=[],this.tensorEntry=void 0}trySelectTensor(e,r){for(let[i,a,l]of this.tensorCache)if(r===i){if(this.context!==e)throw new Error("MLTensor cannot be registered with a different MLContext.");return this.tensorEntry=[i,a,l],!0}return!1}async ensureTensor(e,r,i){var d;if(this.tensorEntry){let[c,g,y]=this.tensorEntry;if(g===e&&y.every((w,F)=>w===r[F]))return c}for(let[c,g,y]of this.tensorCache)if(g===e&&y.every((w,F)=>w===r[F])){if(i&&this.tensorEntry){Mr("verbose",()=>`[WebNN] Slowdown may occur, having to copy existing tensor {dataType: ${e}, shape: ${r}}`);let w=await this.context.readTensor(this.tensorEntry[0]);this.context.writeTensor(c,w)}return this.tensorEntry=[c,g,y],c}Mr("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${r}}`);let a=MLTensorUsage.READ|MLTensorUsage.WRITE,l=await this.context.createTensor({dataType:e,shape:r,dimensions:r,usage:a});return this.tensorEntry=[l,e,r],this.tensorCache.push(this.tensorEntry),this.activeUpload&&((d=this.mlContext)==null||d.writeTensor(l,this.activeUpload),this.activeUpload=void 0),l}upload(e){var r;if(!this.tensorEntry){this.activeUpload=new Uint8Array(e);return}(r=this.mlContext)==null||r.writeTensor(this.tensorEntry[0],e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.tensorEntry)throw new Error("Tensor has not been created.");return e?this.context.readTensor(this.tensorEntry[0],e):this.context.readTensor(this.tensorEntry[0])}},bc=class{constructor(e){this.backend=e,this.tensorsById=new Map,this.tensorIdsByContext=new Map}reserveTensorId(){let e=Si();return this.tensorsById.set(e,new Io),e}releaseTensorId(e){let r=this.tensorsById.get(e);if(r){r.destroy(),this.tensorsById.delete(e);for(let[i,a]of this.tensorIdsByContext)if(a.has(e)){a.delete(e),a.size===0&&this.tensorIdsByContext.delete(i);break}}}async ensureTensor(e,r,i,a){var d;Mr("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${r}, shape: ${i}, copyOld: ${a}}`);let l=this.tensorsById.get(e);if(!l)throw new Error("Tensor not found.");return l.context=this.backend.currentContext,this.tensorIdsByContext.has(this.backend.currentContext)||this.tensorIdsByContext.set(this.backend.currentContext,new Set),(d=this.tensorIdsByContext.get(this.backend.currentContext))==null||d.add(e),l.ensureTensor(r,i,a)}upload(e,r){this.tensorsById.get(e).upload(r)}async download(e,r){return Mr("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r==null?void 0:r.byteLength}}`),this.tensorsById.get(e).download(r)}releaseTensorsForContext(e){let r=this.tensorIdsByContext.get(e);if(r){for(let i of r)this.tensorsById.get(i).destroy(),this.tensorsById.delete(i);this.tensorIdsByContext.delete(e)}}registerTensor(e,r,i,a){for(let[c,g]of this.tensorsById)if(g.trySelectTensor(e,r))return c;let l=Si();this.tensorsById.set(l,new Io(e,[r,i,a]));let d=this.tensorIdsByContext.get(e);return d||(d=new Set,this.tensorIdsByContext.set(e,d)),d.add(l),l}},vc=(...e)=>new bc(...e)}),Ih,Mc,xc=f(()=>{Dt(),Is(),J(),Ah(),Ee(),Ih=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Mc=class{constructor(e){this.tensorManager=vc(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,Qi(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let i=this.sessionIdsByMLContext.get(r);i||(i=new Set,this.sessionIdsByMLContext.set(r,i)),i.add(e)}onReleaseSession(e){let r=this.mlContextBySessionId.get(e);if(!r)return;this.mlContextBySessionId.delete(e);let i=this.sessionIdsByMLContext.get(r);i.delete(e),i.size===0&&(this.sessionIdsByMLContext.delete(r),this.tensorManager.releaseTensorsForContext(r))}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){Mr("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,i,a){let l=Ih.get(r);if(!l)throw new Error(`Unsupported ONNX data type: ${r}`);return this.tensorManager.ensureTensor(e,l,i,a)}uploadTensor(e,r){if(!Br().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Mr("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let i=await this.tensorManager.download(e);return I(i,r)}}registerMLTensor(e,r,i){let a=Ih.get(r);if(!a)throw new Error(`Unsupported ONNX data type: ${r}`);let l=this.tensorManager.registerTensor(this.currentContext,e,a,i);return Mr("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${a}, dimensions: ${i}} -> {tensorId: ${l}}`),l}flush(){}}}),Tc={};b(Tc,{init:()=>Aa});var Sa,kc,Aa,mg=f(()=>{Dt(),Pi(),Ee(),Kt(),xc(),Sa=class Gv{constructor(r,i,a,l){this.module=r,this.dataType=i,this.data=a,this.dims=l}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=De.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=De.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=De.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=De.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(De.size(r)!==De.size(this.dims))throw new Error("Invalid new shape");return new Gv(this.module,this.dataType,this.data,r)}},kc=class{constructor(e,r,i){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let a=e.HEAPU32,l=i>>>2;this.opKernelContext=a[l++];let d=a[l++];this.outputCount=a[l++],this.customDataOffset=a[l++],this.customDataSize=a[l++];let c=[];for(let g=0;g<d;g++){let y=a[l++],w=a[l++],F=a[l++],$=[];for(let m=0;m<F;m++)$.push(a[l++]);c.push(new Sa(e,y,w,$))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,r){var c;let i=((c=r==null?void 0:r.inputs)==null?void 0:c.map(g=>typeof g=="number"?this.inputs[g]:g))??this.inputs,a=(r==null?void 0:r.outputs)??[],l=(g,y,w)=>new Sa(this.module,y,this.output(g,w),w),d=(g,y)=>{let w=Bn(g,y);if(!w)throw new Error(`Unsupported data type: ${g}`);let F=w>0?this.backend.gpuDataManager.create(w).id:0;return new Sa(this.module,g,F,y)};return this.backend.run(e,i,a,l,d,this.outputCount)}output(e,r){let i=this.module.stackSave();try{let a=this.module.stackAlloc((1+r.length)*4),l=a>>2;this.module.HEAPU32[l++]=r.length;for(let d=0;d<r.length;d++)this.module.HEAPU32[l++]=r[d];return this.module._JsepOutput(this.opKernelContext,e,a)}catch(a){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${a}`)}finally{this.module.stackRestore(i)}}},Aa=async(e,r,i,a)=>{let l=r.jsepInit;if(!l)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let d=new ls;await d.initialize(i,a),l("webgpu",[d,c=>d.alloc(c),c=>d.free(c),(c,g,y,w=!1)=>{if(w)Mr("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${c}, dst=${g}, size=${y}`),d.memcpy(c,g);else{Mr("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${c}, gpuDataId=${g}, size=${y}`);let F=r.HEAPU8.subarray(c>>>0,(c>>>0)+y);d.upload(g,F)}},async(c,g,y)=>{Mr("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${c}, dataOffset=${g}, size=${y}`),await d.download(c,()=>r.HEAPU8.subarray(g>>>0,(g>>>0)+y))},(c,g,y)=>d.createKernel(c,g,y,r.UTF8ToString(r._JsepGetNodeName(g))),c=>d.releaseKernel(c),(c,g,y,w)=>{Mr("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${y}, kernel=${c}, contextDataOffset=${g}`);let F=new kc(r,d,g);return d.computeKernel(c,F,w)},()=>d.captureBegin(),()=>d.captureEnd(),()=>d.replay()])}else{let d=new Mc(i);l("webnn",[d,()=>d.reserveTensorId(),c=>d.releaseTensorId(c),async(c,g,y,w)=>d.ensureTensor(c,g,y,w),(c,g)=>{d.uploadTensor(c,g)},async(c,g)=>d.downloadTensor(c,g)])}}}),Vm,$h,fi,Ps,By,Wm,fg,gg,_g,yg,wg,bg,Ry=f(()=>{Jo(),Zo(),Dt(),Is(),Wi(),go(),Vm=(e,r)=>{Br()._OrtInit(e,r)!==0&&Sr("Can't initialize onnxruntime.")},$h=async e=>{Vm(e.wasm.numThreads,xi(e.logLevel))},fi=async(e,r)=>{{let i=(mg(),k(Tc)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let a=e.webgpu.adapter;if(a){if(typeof a.limits!="object"||typeof a.features!="object"||typeof a.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let l=e.webgpu.powerPreference;if(l!==void 0&&l!=="low-power"&&l!=="high-performance")throw new Error(`Invalid powerPreference setting: "${l}"`);let d=e.webgpu.forceFallbackAdapter;if(d!==void 0&&typeof d!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${d}"`);if(a=await navigator.gpu.requestAdapter({powerPreference:l,forceFallbackAdapter:d}),!a)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await i("webgpu",Br(),e,a)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await i("webnn",Br(),e)}}},Ps=new Map,By=e=>{let r=Br(),i=r.stackSave();try{let a=r.stackAlloc(8);return r._OrtGetInputOutputCount(e,a,a+4)!==0&&Sr("Can't get session input/output count."),[r.HEAP32[a/4],r.HEAP32[a/4+1]]}finally{r.stackRestore(i)}},Wm=e=>{let r=Br(),i=r._malloc(e.byteLength);if(i===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,i),[i,e.byteLength]},fg=async(e,r)=>{var $,m;let i,a,l=Br();Array.isArray(e)?[i,a]=e:e.buffer===l.HEAPU8.buffer?[i,a]=[e.byteOffset,e.byteLength]:[i,a]=Wm(e);let d=0,c=0,g=0,y=[],w=[],F=[];try{if([c,y]=fo(r),(r==null?void 0:r.externalData)&&l.mountExternalData){let ue=[];for(let we of r.externalData){let Ge=typeof we=="string"?we:we.path;ue.push(Hi(typeof we=="string"?we:we.data).then(Le=>{l.mountExternalData(Ge,Le)}))}await Promise.all(ue)}for(let ue of(r==null?void 0:r.executionProviders)??[])if((typeof ue=="string"?ue:ue.name)==="webnn"){if(l.shouldTransferToMLTensor=!1,l.currentContext)throw new Error("WebNN execution provider is already set.");if(typeof ue!="string"){let we=ue,Ge=we==null?void 0:we.context,Le=we==null?void 0:we.gpuDevice,st=we==null?void 0:we.deviceType,Mt=we==null?void 0:we.numThreads,St=we==null?void 0:we.powerPreference;Ge?l.currentContext=Ge:Le?l.currentContext=await navigator.ml.createContext(Le):l.currentContext=await navigator.ml.createContext({deviceType:st,numThreads:Mt,powerPreference:St})}else l.currentContext=await navigator.ml.createContext();break}d=await l._OrtCreateSession(i,a,c),d===0&&Sr("Can't create a session."),l.currentContext&&(l.jsepRegisterMLContext(d,l.currentContext),l.currentContext=void 0,l.shouldTransferToMLTensor=!0);let[R,W]=By(d),q=!!(r!=null&&r.enableGraphCapture),ne=[],ie=[],Z=[];for(let ue=0;ue<R;ue++){let we=l._OrtGetInputName(d,ue);we===0&&Sr("Can't get an input name."),w.push(we),ne.push(l.UTF8ToString(we))}for(let ue=0;ue<W;ue++){let we=l._OrtGetOutputName(d,ue);we===0&&Sr("Can't get an output name."),F.push(we);let Ge=l.UTF8ToString(we);ie.push(Ge);{if(q&&(r==null?void 0:r.preferredOutputLocation)===void 0){Z.push("gpu-buffer");continue}let Le=typeof(r==null?void 0:r.preferredOutputLocation)=="string"?r.preferredOutputLocation:(($=r==null?void 0:r.preferredOutputLocation)==null?void 0:$[Ge])??"cpu";if(Le!=="cpu"&&Le!=="cpu-pinned"&&Le!=="gpu-buffer"&&Le!=="ml-tensor")throw new Error(`Not supported preferred output location: ${Le}.`);if(q&&Le!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${Le}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);Z.push(Le)}}let _e=null;return Z.some(ue=>ue==="gpu-buffer"||ue==="ml-tensor")&&(g=l._OrtCreateBinding(d),g===0&&Sr("Can't create IO binding."),_e={handle:g,outputPreferredLocations:Z,outputPreferredLocationsEncoded:Z.map(ue=>Ki(ue))}),Ps.set(d,[d,w,F,_e,q,!1]),[d,ne,ie]}catch(R){throw w.forEach(W=>l._OrtFree(W)),F.forEach(W=>l._OrtFree(W)),g!==0&&l._OrtReleaseBinding(g),d!==0&&l._OrtReleaseSession(d),R}finally{l._free(i),c!==0&&l._OrtReleaseSessionOptions(c),y.forEach(R=>l._free(R)),(m=l.unmountExternalData)==null||m.call(l)}},gg=e=>{var y;let r=Br(),i=Ps.get(e);if(!i)throw new Error(`cannot release session. invalid session id: ${e}`);let[a,l,d,c,g]=i;c&&(g&&r._OrtClearBoundOutputs(c.handle),r._OrtReleaseBinding(c.handle)),(y=r.jsepOnReleaseSession)==null||y.call(r,e),l.forEach(w=>r._OrtFree(w)),d.forEach(w=>r._OrtFree(w)),r._OrtReleaseSession(a),Ps.delete(e)},_g=(e,r,i,a,l,d=!1)=>{if(!e){r.push(0);return}let c=Br(),g=e[0],y=e[1],w=e[3],F,$;if(g==="string"&&(w==="gpu-buffer"||w==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(d&&w!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${l} when enableGraphCapture is true.`);if(w==="gpu-buffer"){let W=e[2].gpuBuffer;$=Bn(di(g),y);let q=c.jsepRegisterBuffer;if(!q)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');F=q(a,l,W,$)}else if(w==="ml-tensor"){let W=e[2].mlTensor;$=Bn(di(g),y);let q=c.jsepRegisterMLTensor;if(!q)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');F=q(W,di(g),y)}else{let W=e[2];if(Array.isArray(W)){$=4*W.length,F=c._malloc($),i.push(F);let q=F/4;for(let ne=0;ne<W.length;ne++){if(typeof W[ne]!="string")throw new TypeError(`tensor data at index ${ne} is not a string`);c.HEAPU32[q++]=Yr(W[ne],i)}}else $=W.byteLength,F=c._malloc($),i.push(F),c.HEAPU8.set(new Uint8Array(W.buffer,W.byteOffset,$),F)}let m=c.stackSave(),R=c.stackAlloc(4*y.length);try{let W=R/4;y.forEach(ne=>c.HEAP32[W++]=ne);let q=c._OrtCreateTensor(di(g),F,$,R,y.length,Ki(w));q===0&&Sr(`Can't create tensor for input/output. session=${a}, index=${l}.`),r.push(q)}finally{c.stackRestore(m)}},yg=async(e,r,i,a,l,d)=>{var St,sr;let c=Br(),g=Ps.get(e);if(!g)throw new Error(`cannot run inference. invalid session id: ${e}`);let y=g[0],w=g[1],F=g[2],$=g[3],m=g[4],R=g[5],W=r.length,q=a.length,ne=0,ie=[],Z=[],_e=[],ue=[],we=c.stackSave(),Ge=c.stackAlloc(W*4),Le=c.stackAlloc(W*4),st=c.stackAlloc(q*4),Mt=c.stackAlloc(q*4);try{(St=c.jsepOnRunStart)==null||St.call(c,y),[ne,ie]=ui(d);for(let zt=0;zt<W;zt++)_g(i[zt],Z,ue,e,r[zt],m);for(let zt=0;zt<q;zt++)_g(l[zt],_e,ue,e,W+a[zt],m);let lr=Ge/4,Nt=Le/4,Ir=st/4,Ur=Mt/4;for(let zt=0;zt<W;zt++)c.HEAPU32[lr++]=Z[zt],c.HEAPU32[Nt++]=w[r[zt]];for(let zt=0;zt<q;zt++)c.HEAPU32[Ir++]=_e[zt],c.HEAPU32[Ur++]=F[a[zt]];if($&&!R){let{handle:zt,outputPreferredLocations:qt,outputPreferredLocationsEncoded:wr}=$;if(w.length!==W)throw new Error(`input count from feeds (${W}) is expected to be always equal to model's input count (${w.length}).`);for(let Ke=0;Ke<W;Ke++){let dt=r[Ke];await c._OrtBindInput(zt,w[dt],Z[Ke])!==0&&Sr(`Can't bind input[${Ke}] for session=${e}.`)}for(let Ke=0;Ke<q;Ke++){let dt=a[Ke];(sr=l[Ke])!=null&&sr[3]?c._OrtBindOutput(zt,F[dt],_e[Ke],0)!==0&&Sr(`Can't bind pre-allocated output[${Ke}] for session=${e}.`):c._OrtBindOutput(zt,F[dt],0,wr[dt])!==0&&Sr(`Can't bind output[${Ke}] to ${qt[Ke]} for session=${e}.`)}Ps.set(e,[y,w,F,$,m,!0])}let ur;$?ur=await c._OrtRunWithBinding(y,$.handle,q,st,ne):ur=await c._OrtRun(y,Le,Ge,W,Mt,q,st,ne),ur!==0&&Sr("failed to call OrtRun().");let Or=[];for(let zt=0;zt<q;zt++){let qt=c.HEAPU32[st/4+zt];if(qt===_e[zt]){Or.push(l[zt]);continue}let wr=c.stackSave(),Ke=c.stackAlloc(4*4),dt=!1,Ht,$r=0;try{c._OrtGetTensorData(qt,Ke,Ke+4,Ke+8,Ke+12)!==0&&Sr(`Can't access output tensor data on index ${zt}.`);let ys=Ke/4,Ms=c.HEAPU32[ys++];$r=c.HEAPU32[ys++];let Fo=c.HEAPU32[ys++],Km=c.HEAPU32[ys++],nn=[];for(let Cs=0;Cs<Km;Cs++)nn.push(c.HEAPU32[Fo/4+Cs]);c._OrtFree(Fo);let Ls=nn.reduce((Cs,qs)=>Cs*qs,1);Ht=cn(Ms);let Fa=$==null?void 0:$.outputPreferredLocations[a[zt]];if(Ht==="string"){if(Fa==="gpu-buffer"||Fa==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let Cs=[],qs=$r/4;for(let Wn=0;Wn<Ls;Wn++){let Oo=c.HEAPU32[qs++],Hm=Wn===Ls-1?void 0:c.HEAPU32[qs]-Oo;Cs.push(c.UTF8ToString(Oo,Hm))}Or.push([Ht,nn,Cs,"cpu"])}else if(Fa==="gpu-buffer"&&Ls>0){let Cs=c.jsepGetBuffer;if(!Cs)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let qs=Cs($r),Wn=Bn(Ms,Ls);if(Wn===void 0||!Gi(Ht))throw new Error(`Unsupported data type: ${Ht}`);dt=!0,Or.push([Ht,nn,{gpuBuffer:qs,download:c.jsepCreateDownloader(qs,Wn,Ht),dispose:()=>{c._OrtReleaseTensor(qt)}},"gpu-buffer"])}else if(Fa==="ml-tensor"&&Ls>0){let Cs=c.jsepEnsureTensor;if(!Cs)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Bn(Ms,Ls)===void 0||!qi(Ht))throw new Error(`Unsupported data type: ${Ht}`);let qs=await Cs($r,Ms,nn,!1);dt=!0,Or.push([Ht,nn,{mlTensor:qs,download:c.jsepCreateMLTensorDownloader($r,Ht),dispose:()=>{c.jsepReleaseTensorId($r),c._OrtReleaseTensor(qt)}},"ml-tensor"])}else{let Cs=Rn(Ht),qs=new Cs(Ls);new Uint8Array(qs.buffer,qs.byteOffset,qs.byteLength).set(c.HEAPU8.subarray($r,$r+qs.byteLength)),Or.push([Ht,nn,qs,"cpu"])}}finally{c.stackRestore(wr),Ht==="string"&&$r&&c._free($r),dt||c._OrtReleaseTensor(qt)}}return $&&!m&&(c._OrtClearBoundOutputs($.handle),Ps.set(e,[y,w,F,$,m,!1])),Or}finally{c.stackRestore(we),Z.forEach(lr=>c._OrtReleaseTensor(lr)),_e.forEach(lr=>c._OrtReleaseTensor(lr)),ue.forEach(lr=>c._free(lr)),ne!==0&&c._OrtReleaseRunOptions(ne),ie.forEach(lr=>c._free(lr))}},wg=e=>{let r=Br(),i=Ps.get(e);if(!i)throw new Error("invalid session id");let a=i[0],l=r._OrtEndProfiling(a);l===0&&Sr("Can't get an profile file name."),r._OrtFree(l)},bg=e=>{let r=[];for(let i of e){let a=i[2];!Array.isArray(a)&&"buffer"in a&&r.push(a.buffer)}return r}}),$o,mn,Ec,Fh,Oh,Gm,vg,qm,Ia,$a,Ny,Uy,Vy,Wy,Gy,qy,Ky,Hy,Xy=f(()=>{kt(),Ry(),Is(),Ln(),$o=()=>!!S.wasm.proxy&&typeof document<"u",Ec=!1,Fh=!1,Oh=!1,qm=new Map,Ia=(e,r)=>{let i=qm.get(e);i?i.push(r):qm.set(e,[r])},$a=()=>{if(Ec||!Fh||Oh||!mn)throw new Error("worker not ready")},Ny=e=>{switch(e.data.type){case"init-wasm":Ec=!1,e.data.err?(Oh=!0,vg[1](e.data.err)):(Fh=!0,vg[0]()),Gm&&(URL.revokeObjectURL(Gm),Gm=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=qm.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},Uy=async()=>{if(!Fh){if(Ec)throw new Error("multiple calls to 'initWasm()' detected.");if(Oh)throw new Error("previous call to 'initWasm()' failed.");if(Ec=!0,$o())return new Promise((e,r)=>{mn==null||mn.terminate(),ln().then(([i,a])=>{try{mn=a,mn.onerror=d=>r(d),mn.onmessage=Ny,vg=[e,r];let l={type:"init-wasm",in:S};mn.postMessage(l),Gm=i}catch(l){r(l)}},r)});try{await Dn(S.wasm),await $h(S),Fh=!0}catch(e){throw Oh=!0,e}finally{Ec=!1}}},Vy=async e=>{if($o())return $a(),new Promise((r,i)=>{Ia("init-ep",[r,i]);let a={type:"init-ep",in:{epName:e,env:S}};mn.postMessage(a)});await fi(S,e)},Wy=async e=>$o()?($a(),new Promise((r,i)=>{Ia("copy-from",[r,i]);let a={type:"copy-from",in:{buffer:e}};mn.postMessage(a,[e.buffer])})):Wm(e),Gy=async(e,r)=>{if($o()){if(r!=null&&r.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return $a(),new Promise((i,a)=>{Ia("create",[i,a]);let l={type:"create",in:{model:e,options:{...r}}},d=[];e instanceof Uint8Array&&d.push(e.buffer),mn.postMessage(l,d)})}else return fg(e,r)},qy=async e=>{if($o())return $a(),new Promise((r,i)=>{Ia("release",[r,i]);let a={type:"release",in:e};mn.postMessage(a)});gg(e)},Ky=async(e,r,i,a,l,d)=>{if($o()){if(i.some(c=>c[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(l.some(c=>c))throw new Error("pre-allocated output tensor is not supported for proxy.");return $a(),new Promise((c,g)=>{Ia("run",[c,g]);let y=i,w={type:"run",in:{sessionId:e,inputIndices:r,inputs:y,outputIndices:a,options:d}};mn.postMessage(w,bg(y))})}else return yg(e,r,i,a,l,d)},Hy=async e=>{if($o())return $a(),new Promise((r,i)=>{Ia("end-profiling",[r,i]);let a={type:"end-profiling",in:e};mn.postMessage(a)});wg(e)}}),Mg,Qy,Yy,qv=f(()=>{kt(),Xy(),Dt(),Ct(),go(),Mg=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},Qy=e=>{switch(e[3]){case"cpu":return new ye(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!Gi(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:i,download:a,dispose:l}=e[2];return ye.fromGpuBuffer(i,{dataType:r,dims:e[1],download:a,dispose:l})}case"ml-tensor":{let r=e[0];if(!qi(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:i,download:a,dispose:l}=e[2];return ye.fromMLTensor(i,{dataType:r,dims:e[1],download:a,dispose:l})}default:throw new Error(`invalid data location: ${e[3]}`)}},Yy=class{async fetchModelAndCopyToWasmMemory(e){return Wy(await Hi(e))}async loadModel(e,r){Qe();let i;typeof e=="string"?i=await this.fetchModelAndCopyToWasmMemory(e):i=e,[this.sessionId,this.inputNames,this.outputNames]=await Gy(i,r),Ue()}async dispose(){return qy(this.sessionId)}async run(e,r,i){Qe();let a=[],l=[];Object.entries(e).forEach($=>{let m=$[0],R=$[1],W=this.inputNames.indexOf(m);if(W===-1)throw new Error(`invalid input '${m}'`);a.push(R),l.push(W)});let d=[],c=[];Object.entries(r).forEach($=>{let m=$[0],R=$[1],W=this.outputNames.indexOf(m);if(W===-1)throw new Error(`invalid output '${m}'`);d.push(R),c.push(W)});let g=a.map(($,m)=>Mg($,()=>`input "${this.inputNames[l[m]]}"`)),y=d.map(($,m)=>$?Mg($,()=>`output "${this.outputNames[c[m]]}"`):null),w=await Ky(this.sessionId,l,g,c,y,i),F={};for(let $=0;$<w.length;$++)F[this.outputNames[c[$]]]=d[$]??Qy(w[$]);return Ue(),F}startProfiling(){}endProfiling(){Hy(this.sessionId)}}}),Jy={};b(Jy,{OnnxruntimeWebAssemblyBackend:()=>Tg,initializeFlags:()=>xg,wasmBackend:()=>Zy});var xg,Tg,Zy,Kv=f(()=>{kt(),Xy(),qv(),Ln(),xg=()=>{if((typeof S.wasm.initTimeout!="number"||S.wasm.initTimeout<0)&&(S.wasm.initTimeout=0),S.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof S.wasm.proxy!="boolean"&&(S.wasm.proxy=!1),typeof S.wasm.trace!="boolean"&&(S.wasm.trace=!1),typeof S.wasm.numThreads!="number"||!Number.isInteger(S.wasm.numThreads)||S.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)S.wasm.numThreads=1;else{let e=typeof navigator>"u"?P("node:os").cpus().length:navigator.hardwareConcurrency;S.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Tg=class{async init(e){xg(),await Uy(),await Vy(e)}async createInferenceSessionHandler(e,r){let i=new Yy;return await i.loadModel(e,r),Promise.resolve(i)}},Zy=new Tg});kt(),kt(),kt();var Hv="1.20.1",Xv=Tt;{let e=(Kv(),k(Jy)).wasmBackend;X("webgpu",e,5),X("webnn",e,5),X("cpu",e,10),X("wasm",e,10)}Object.defineProperty(S.versions,"web",{value:Hv,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(t,s,n)=>{var o;n.r(s),n.d(s,{Tensor:()=>P.Tensor,createInferenceSession:()=>re,deviceToExecutionProviders:()=>X,isONNXProxy:()=>te,isONNXTensor:()=>V});var u=n("./src/env.js"),h=n("?2ce3"),v=n("./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs"),P=n("./node_modules/onnxruntime-common/dist/esm/index.js");const f=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),b=[];let x,k;const C=Symbol.for("onnxruntime");if(C in globalThis)k=globalThis[C];else if(u.apis.IS_NODE_ENV){switch(k=h??(o||(o=n.t(h,2))),process.platform){case"win32":b.push("dml");break;case"linux":process.arch==="x64"&&b.push("cuda");break}b.push("cpu"),x=["cpu"]}else k=v,u.apis.IS_WEBNN_AVAILABLE&&b.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),u.apis.IS_WEBGPU_AVAILABLE&&b.push("webgpu"),b.push("wasm"),x=["wasm"];const N=k.InferenceSession;function X(G=null){if(!G)return x;switch(G){case"auto":return b;case"gpu":return b.filter(D=>["webgpu","cuda","dml","webnn-gpu"].includes(D))}if(b.includes(G))return[f[G]??G];throw new Error(`Unsupported device: "${G}". Should be one of: ${b.join(", ")}.`)}let oe=null;async function re(G,D,E){oe&&await oe;const L=N.create(G,D);oe??(oe=L);const S=await L;return S.config=E,S}function V(G){return G instanceof k.Tensor}const H=k==null?void 0:k.env;H!=null&&H.wasm&&(H.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${u.env.version}/dist/`,H.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(H.wasm.numThreads=1)),H!=null&&H.webgpu&&(H.webgpu.powerPreference="high-performance");function te(){var G;return(G=H==null?void 0:H.wasm)==null?void 0:G.proxy}u.env.backends.onnx=H},"./src/base/feature_extraction_utils.js":(t,s,n)=>{n.r(s),n.d(s,{FeatureExtractor:()=>v,validate_audio_inputs:()=>P});var o=n("./src/utils/constants.js"),u=n("./src/utils/generic.js"),h=n("./src/utils/hub.js");class v extends u.Callable{constructor(b){super(),this.config=b}static async from_pretrained(b,x){const k=await(0,h.getModelJSON)(b,o.FEATURE_EXTRACTOR_NAME,!0,x);return new this(k)}}function P(f,b){var x;if(!(f instanceof Float32Array||f instanceof Float64Array))throw new Error(`${b} expects input to be a Float32Array or a Float64Array, but got ${((x=f==null?void 0:f.constructor)==null?void 0:x.name)??typeof f} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(t,s,n)=>{n.r(s),n.d(s,{ImageProcessor:()=>G,post_process_instance_segmentation:()=>te,post_process_object_detection:()=>C,post_process_panoptic_segmentation:()=>H,post_process_semantic_segmentation:()=>N});var o=n("./src/utils/generic.js"),u=n("./src/utils/tensor.js"),h=n("./src/utils/maths.js");n("./src/utils/image.js");var v=n("./src/utils/core.js"),P=n("./src/utils/hub.js"),f=n("./src/utils/constants.js");function b(D,E,L=0,S=null){const se=D/E;let ee=(0,h.bankers_round)(se)*E;return S!==null&&ee>S&&(ee=Math.floor(se)*E),ee<L&&(ee=Math.ceil(se)*E),ee}function x([D,E],L){return[Math.max(Math.floor(D/L),1)*L,Math.max(Math.floor(E/L),1)*L]}function k([D,E,L,S]){return[D-L/2,E-S/2,D+L/2,E+S/2]}function C(D,E=.5,L=null,S=!1){const se=D.logits,ee=D.pred_boxes,[pe,he,be]=se.dims;if(L!==null&&L.length!==pe)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ce=[];for(let ke=0;ke<pe;++ke){let je=L!==null?L[ke]:null,fe={boxes:[],classes:[],scores:[]},K=se[ke],me=ee[ke];for(let ge=0;ge<he;++ge){let $e=K[ge],We=[],Se;if(S){Se=$e.sigmoid().data;for(let Ne=0;Ne<Se.length;++Ne)Se[Ne]>E&&We.push(Ne)}else{let Ne=(0,h.max)($e.data)[1];if(Ne===be-1||(Se=(0,h.softmax)($e.data),Se[Ne]<E))continue;We.push(Ne)}for(const Ne of We){let He=me[ge].data;He=k(He),je!==null&&(He=He.map((Be,le)=>Be*je[(le+1)%2])),fe.boxes.push(He),fe.classes.push(Ne),fe.scores.push(Se[Ne])}}Ce.push(fe)}return Ce}function N(D,E=null){const L=D.logits,S=L.dims[0];if(E!==null&&E.length!==S)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const se=[];for(let ee=0;ee<S;++ee){const pe=E!==null?E[ee]:null;let he=L[ee];pe!==null&&(he=(0,u.interpolate)(he,pe,"bilinear",!1));const[be,Ce]=pe??he.dims.slice(-2),ke=new u.Tensor("int32",new Int32Array(be*Ce),[be,Ce]),je=he[0].data,fe=ke.data;for(let ge=1;ge<he.dims[0];++ge){const $e=he[ge].data;for(let We=0;We<$e.length;++We)$e[We]>je[We]&&(je[We]=$e[We],fe[We]=ge)}const K=new Array(he.dims[0]);for(let ge=0;ge<fe.length;++ge){const $e=fe[ge];K[$e]=$e}const me=K.filter(ge=>ge!==void 0);se.push({segmentation:ke,labels:me})}return se}function X(D,E,L,S){const se=[],ee=[],pe=[];for(let he=0;he<D.dims[0];++he){const be=D[he],Ce=E[he],ke=(0,h.max)(be.data)[1];if(ke===S)continue;const fe=(0,h.softmax)(be.data)[ke];fe>L&&(se.push(Ce),ee.push(fe),pe.push(ke))}return[se,ee,pe]}function oe(D,E,L,S=.5,se=.8){const ee=[];let pe=0,he=0;const be=E[L].data;for(let ke=0;ke<D.length;++ke)D[ke]===L&&(ee.push(ke),++pe),be[ke]>=S&&++he;let Ce=pe>0&&he>0;return Ce&&(Ce=pe/he>se),[Ce,ee]}function re(D,E,L,S,se,ee=null,pe=null){const[he,be]=pe??D[0].dims,Ce=new u.Tensor("int32",new Int32Array(he*be),[he,be]),ke=[];if(pe!==null)for(let ge=0;ge<D.length;++ge)D[ge]=(0,u.interpolate)(D[ge],pe,"bilinear",!1);const je=new Int32Array(D[0].data.length),fe=new Float32Array(D[0].data.length);for(let ge=0;ge<D.length;++ge){let $e=E[ge];const We=D[ge].data;for(let Se=0;Se<We.length;++Se)We[Se]*=$e,We[Se]>fe[Se]&&(je[Se]=ge,fe[Se]=We[Se])}let K=0;const me=Ce.data;for(let ge=0;ge<L.length;++ge){const $e=L[ge],[We,Se]=oe(je,D,ge,S,se);if(We){++K;for(const Ne of Se)me[Ne]=K;ke.push({id:K,label_id:$e,score:E[ge]})}}return[Ce,ke]}function V(D,E,L=28,S=56*56,se=14*14*4*1280){if(D<L||E<L)throw new Error(`height:${D} or width:${E} must be larger than factor:${L}`);if(Math.max(D,E)/Math.min(D,E)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(D,E)/Math.min(D,E)}`);let ee=Math.round(D/L)*L,pe=Math.round(E/L)*L;if(ee*pe>se){const he=Math.sqrt(D*E/se);ee=Math.floor(D/he/L)*L,pe=Math.floor(E/he/L)*L}else if(ee*pe<S){const he=Math.sqrt(S/(D*E));ee=Math.ceil(D*he/L)*L,pe=Math.ceil(E*he/L)*L}return[ee,pe]}function H(D,E=.5,L=.5,S=.8,se=null,ee=null){se===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),se=new Set);const pe=D.class_queries_logits??D.logits,be=(D.masks_queries_logits??D.pred_masks).sigmoid();let[Ce,ke,je]=pe.dims;if(je-=1,ee!==null&&ee.length!==Ce)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let fe=[];for(let K=0;K<Ce;++K){let me=ee!==null?ee[K]:null,ge=pe[K],$e=be[K],[We,Se,Ne]=X(ge,$e,E,je);if(Ne.length===0){let[le,Fe]=me??$e.dims.slice(-2),Re=new u.Tensor("int32",new Int32Array(le*Fe).fill(-1),[le,Fe]);fe.push({segmentation:Re,segments_info:[]});continue}let[He,Be]=re(We,Se,Ne,L,S,se,me);fe.push({segmentation:He,segments_info:Be})}return fe}function te(D,E=.5,L=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class G extends o.Callable{constructor(E){super(),this.image_mean=E.image_mean??E.mean,this.image_std=E.image_std??E.std,this.resample=E.resample??2,this.do_rescale=E.do_rescale??!0,this.rescale_factor=E.rescale_factor??1/255,this.do_normalize=E.do_normalize,this.do_thumbnail=E.do_thumbnail,this.size=E.size??E.image_size,this.do_resize=E.do_resize??this.size!==void 0,this.size_divisibility=E.size_divisibility??E.size_divisor,this.do_center_crop=E.do_center_crop,this.crop_size=E.crop_size,this.do_convert_rgb=E.do_convert_rgb??!0,this.do_crop_margin=E.do_crop_margin,this.pad_size=E.pad_size,this.do_pad=E.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=E.do_flip_channel_order??!1,this.config=E}async thumbnail(E,L,S=2){const se=E.height,ee=E.width,pe=L.height,he=L.width;let be=Math.min(se,pe),Ce=Math.min(ee,he);return be===se&&Ce===ee?E:(se>ee?Ce=Math.floor(ee*be/se):ee>se&&(be=Math.floor(se*Ce/ee)),await E.resize(Ce,be,{resample:S}))}async crop_margin(E,L=200){const S=E.clone().grayscale(),se=(0,h.min)(S.data)[0],pe=(0,h.max)(S.data)[0]-se;if(pe===0)return E;const he=L/255;let be=S.width,Ce=S.height,ke=0,je=0;const fe=S.data;for(let K=0;K<S.height;++K){const me=K*S.width;for(let ge=0;ge<S.width;++ge)(fe[me+ge]-se)/pe<he&&(be=Math.min(be,ge),Ce=Math.min(Ce,K),ke=Math.max(ke,ge),je=Math.max(je,K))}return E=await E.crop([be,Ce,ke,je]),E}pad_image(E,L,S,{mode:se="constant",center:ee=!1,constant_values:pe=0}={}){const[he,be,Ce]=L;let ke,je;if(typeof S=="number"?(ke=S,je=S):(ke=S.width,je=S.height),ke!==be||je!==he){const fe=new Float32Array(ke*je*Ce);if(Array.isArray(pe))for(let ge=0;ge<fe.length;++ge)fe[ge]=pe[ge%Ce];else pe!==0&&fe.fill(pe);const[K,me]=ee?[Math.floor((ke-be)/2),Math.floor((je-he)/2)]:[0,0];for(let ge=0;ge<he;++ge){const $e=(ge+me)*ke,We=ge*be;for(let Se=0;Se<be;++Se){const Ne=($e+Se+K)*Ce,He=(We+Se)*Ce;for(let Be=0;Be<Ce;++Be)fe[Ne+Be]=E[He+Be]}}if(se==="symmetric"){if(ee)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const ge=he-1,$e=be-1;for(let We=0;We<je;++We){const Se=We*ke,Ne=(0,v.calculateReflectOffset)(We,ge)*be;for(let He=0;He<ke;++He){if(We<he&&He<be)continue;const Be=(Se+He)*Ce,le=(Ne+(0,v.calculateReflectOffset)(He,$e))*Ce;for(let Fe=0;Fe<Ce;++Fe)fe[Be+Fe]=E[le+Fe]}}}E=fe,L=[je,ke,Ce]}return[E,L]}rescale(E){for(let L=0;L<E.length;++L)E[L]=this.rescale_factor*E[L]}get_resize_output_image_size(E,L){const[S,se]=E.size;let ee,pe;if(this.do_thumbnail){const{height:he,width:be}=L;ee=Math.min(he,be)}else Number.isInteger(L)?(ee=L,pe=this.config.max_size??ee):L!==void 0&&(ee=L.shortest_edge,pe=L.longest_edge);if(ee!==void 0||pe!==void 0){const he=ee===void 0?1:Math.max(ee/S,ee/se),be=S*he,Ce=se*he,ke=pe===void 0?1:Math.min(pe/be,pe/Ce);let je=Math.floor(Number((be*ke).toFixed(2))),fe=Math.floor(Number((Ce*ke).toFixed(2)));return this.size_divisibility!==void 0&&([je,fe]=x([je,fe],this.size_divisibility)),[je,fe]}else if(L!==void 0&&L.width!==void 0&&L.height!==void 0){let he=L.width,be=L.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Ce=be/se,ke=he/S;Math.abs(1-ke)<Math.abs(1-Ce)?Ce=ke:ke=Ce,be=b(Ce*se,this.config.ensure_multiple_of),he=b(ke*S,this.config.ensure_multiple_of)}return[he,be]}else{if(this.size_divisibility!==void 0)return x([S,se],this.size_divisibility);if(L.min_pixels!==void 0&&L.max_pixels!==void 0){const{min_pixels:he,max_pixels:be}=L,Ce=this.config.patch_size*this.config.merge_size;return V(se,S,Ce,he,be)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(L)}`)}}async resize(E){const[L,S]=this.get_resize_output_image_size(E,this.size);return await E.resize(L,S,{resample:this.resample})}async preprocess(E,{do_normalize:L=null,do_pad:S=null,do_convert_rgb:se=null,do_convert_grayscale:ee=null,do_flip_channel_order:pe=null}={}){this.do_crop_margin&&(E=await this.crop_margin(E));const[he,be]=E.size;if(se??this.do_convert_rgb?E=E.rgb():ee&&(E=E.grayscale()),this.do_resize&&(E=await this.resize(E)),this.do_thumbnail&&(E=await this.thumbnail(E,this.size,this.resample)),this.do_center_crop){let K,me;Number.isInteger(this.crop_size)?(K=this.crop_size,me=this.crop_size):(K=this.crop_size.width,me=this.crop_size.height),E=await E.center_crop(K,me)}const Ce=[E.height,E.width];let ke=Float32Array.from(E.data),je=[E.height,E.width,E.channels];if(this.do_rescale&&this.rescale(ke),L??this.do_normalize){let K=this.image_mean;Array.isArray(this.image_mean)||(K=new Array(E.channels).fill(K));let me=this.image_std;if(Array.isArray(this.image_std)||(me=new Array(E.channels).fill(K)),K.length!==E.channels||me.length!==E.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${K.length}) and \`image_std\` (${me.length}) must match the number of channels in the image (${E.channels}).`);for(let ge=0;ge<ke.length;ge+=E.channels)for(let $e=0;$e<E.channels;++$e)ke[ge+$e]=(ke[ge+$e]-K[$e])/me[$e]}if(S??this.do_pad){if(this.pad_size)[ke,je]=this.pad_image(ke,[E.height,E.width,E.channels],this.pad_size);else if(this.size_divisibility){const[K,me]=x([je[1],je[0]],this.size_divisibility);[ke,je]=this.pad_image(ke,je,{width:K,height:me})}}if(pe??this.do_flip_channel_order){if(je[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let K=0;K<ke.length;K+=3){const me=ke[K];ke[K]=ke[K+2],ke[K+2]=me}}const fe=new u.Tensor("float32",ke,je).permute(2,0,1);return{original_size:[be,he],reshaped_input_size:Ce,pixel_values:fe}}async _call(E,...L){Array.isArray(E)||(E=[E]);const S=await Promise.all(E.map(ee=>this.preprocess(ee)));return{pixel_values:(0,u.stack)(S.map(ee=>ee.pixel_values),0),original_sizes:S.map(ee=>ee.original_size),reshaped_input_sizes:S.map(ee=>ee.reshaped_input_size)}}static async from_pretrained(E,L){const S=await(0,P.getModelJSON)(E,f.IMAGE_PROCESSOR_NAME,!0,L);return new this(S)}}},"./src/base/processing_utils.js":(t,s,n)=>{n.r(s),n.d(s,{Processor:()=>v});var o=n("./src/utils/constants.js"),u=n("./src/utils/generic.js"),h=n("./src/utils/hub.js");class v extends u.Callable{constructor(f,b){super(),this.config=f,this.components=b}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(f,b={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(f,{tokenize:!1,...b})}batch_decode(...f){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...f)}async _call(f,...b){for(const x of[this.image_processor,this.feature_extractor,this.tokenizer])if(x)return x(f,...b);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(f,b){const[x,k]=await Promise.all([this.uses_processor_config?(0,h.getModelJSON)(f,o.PROCESSOR_NAME,!0,b):{},Promise.all(this.classes.filter(C=>C in this).map(async C=>{const N=await this[C].from_pretrained(f,b);return[C.replace(/_class$/,""),N]})).then(Object.fromEntries)]);return new this(x,k)}}Te(v,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),Te(v,"uses_processor_config",!1)},"./src/configs.js":(t,s,n)=>{n.r(s),n.d(s,{AutoConfig:()=>b,PretrainedConfig:()=>f,getKeyValueShapes:()=>P});var o=n("./src/utils/core.js"),u=n("./src/utils/hub.js");async function h(x,k){return await(0,u.getModelJSON)(x,"config.json",!0,k)}function v(x){const k={};let C={};switch(x.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":C=v(x.text_config);break;case"moondream1":C=v(x.phi_config);break;case"musicgen":C=v(x.decoder);break;case"multi_modality":C=v(x.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":k.num_heads="n_head",k.num_layers="n_layer",k.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":k.num_heads="num_attention_heads",k.num_layers="num_hidden_layers",k.hidden_size="hidden_size";break;case"llama":case"olmo":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":k.num_heads="num_key_value_heads",k.num_layers="num_hidden_layers",k.hidden_size="hidden_size",k.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":k.num_heads="num_key_value_heads",k.num_layers="num_hidden_layers",k.dim_kv="head_dim";break;case"openelm":k.num_heads="num_kv_heads",k.num_layers="num_transformer_layers",k.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":k.num_heads="num_heads",k.num_layers="num_layers",k.hidden_size="hidden_size";break;case"bloom":k.num_heads="n_head",k.num_layers="n_layer",k.hidden_size="hidden_size";break;case"mpt":k.num_heads="n_heads",k.num_layers="n_layers",k.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":k.num_decoder_layers="num_decoder_layers",k.num_decoder_heads="num_heads",k.decoder_dim_kv="d_kv",k.num_encoder_layers="num_layers",k.num_encoder_heads="num_heads",k.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":k.num_decoder_layers="decoder_layers",k.num_decoder_heads="decoder_attention_heads",k.decoder_hidden_size="d_model",k.num_encoder_layers="encoder_layers",k.num_encoder_heads="encoder_attention_heads",k.encoder_hidden_size="d_model";break;case"speecht5":k.num_decoder_layers="decoder_layers",k.num_decoder_heads="decoder_attention_heads",k.decoder_hidden_size="hidden_size",k.num_encoder_layers="encoder_layers",k.num_encoder_heads="encoder_attention_heads",k.encoder_hidden_size="hidden_size";break;case"trocr":k.num_encoder_layers=k.num_decoder_layers="decoder_layers",k.num_encoder_heads=k.num_decoder_heads="decoder_attention_heads",k.encoder_hidden_size=k.decoder_hidden_size="d_model";break;case"musicgen_decoder":k.num_encoder_layers=k.num_decoder_layers="num_hidden_layers",k.num_encoder_heads=k.num_decoder_heads="num_attention_heads",k.encoder_hidden_size=k.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const X=v(x.decoder),oe="num_decoder_layers"in X,re=(0,o.pick)(x,["model_type","is_encoder_decoder"]);return oe?(re.num_decoder_layers=X.num_decoder_layers,re.num_decoder_heads=X.num_decoder_heads,re.decoder_hidden_size=X.decoder_hidden_size,re.num_encoder_layers=X.num_encoder_layers,re.num_encoder_heads=X.num_encoder_heads,re.encoder_hidden_size=X.encoder_hidden_size):(re.num_layers=X.num_layers,re.num_heads=X.num_heads,re.hidden_size=X.hidden_size),re}const N={...C,...(0,o.pick)(x,["model_type","multi_query","is_encoder_decoder"])};for(const X in k)N[X]=x[k[X]];return N}function P(x,{prefix:k="past_key_values",batch_size:C=1}={}){const N={},X=x.normalized_config;if(X.is_encoder_decoder&&"num_encoder_heads"in X&&"num_decoder_heads"in X){const oe=X.encoder_dim_kv??X.encoder_hidden_size/X.num_encoder_heads,re=X.decoder_dim_kv??X.decoder_hidden_size/X.num_decoder_heads,V=[C,X.num_encoder_heads,0,oe],H=[C,X.num_decoder_heads,0,re];for(let te=0;te<X.num_decoder_layers;++te)N[`${k}.${te}.encoder.key`]=V,N[`${k}.${te}.encoder.value`]=V,N[`${k}.${te}.decoder.key`]=H,N[`${k}.${te}.decoder.value`]=H}else{const oe=X.num_heads,re=X.num_layers,V=X.dim_kv??X.hidden_size/(X.num_attention_heads??oe);if(X.model_type==="falcon"){const H=[C*oe,0,V];for(let te=0;te<re;++te)N[`${k}.${te}.key`]=H,N[`${k}.${te}.value`]=H}else if(X.multi_query){const H=[C*oe,0,2*V];for(let te=0;te<re;++te)N[`${k}.${te}.key_value`]=H}else if(X.model_type==="bloom"){const H=[C*oe,V,0],te=[C*oe,0,V];for(let G=0;G<re;++G)N[`${k}.${G}.key`]=H,N[`${k}.${G}.value`]=te}else if(X.model_type==="openelm")for(let H=0;H<re;++H){const te=[C,oe[H],0,V];N[`${k}.${H}.key`]=te,N[`${k}.${H}.value`]=te}else{const H=[C,oe,0,V];for(let te=0;te<re;++te)N[`${k}.${te}.key`]=H,N[`${k}.${te}.value`]=H}}return N}class f{constructor(k){Te(this,"model_type",null);Te(this,"is_encoder_decoder",!1);Te(this,"max_position_embeddings");Te(this,"transformers.js_config");Object.assign(this,k),this.normalized_config=v(this)}static async from_pretrained(k,{progress_callback:C=null,config:N=null,cache_dir:X=null,local_files_only:oe=!1,revision:re="main"}={}){N&&!(N instanceof f)&&(N=new f(N));const V=N??await h(k,{progress_callback:C,config:N,cache_dir:X,local_files_only:oe,revision:re});return new this(V)}}class b{static async from_pretrained(...k){return f.from_pretrained(...k)}}},"./src/env.js":(t,s,n)=>{var S,se;n.r(s),n.d(s,{apis:()=>re,env:()=>E});var o=n("?569f"),u=n("?3f59"),h=n("?154a");const v="3.1.1",P=typeof window<"u"&&typeof window.document<"u",f=typeof self<"u"&&((S=self.constructor)==null?void 0:S.name)==="DedicatedWorkerGlobalScope",b=typeof self<"u"&&"caches"in self,x=typeof navigator<"u"&&"gpu"in navigator,k=typeof navigator<"u"&&"ml"in navigator,C=typeof process<"u",N=C&&((se=process==null?void 0:process.release)==null?void 0:se.name)==="node",X=!L(o),oe=!L(u),re=Object.freeze({IS_BROWSER_ENV:P,IS_WEBWORKER_ENV:f,IS_WEB_CACHE_AVAILABLE:b,IS_WEBGPU_AVAILABLE:x,IS_WEBNN_AVAILABLE:k,IS_PROCESS_AVAILABLE:C,IS_NODE_ENV:N,IS_FS_AVAILABLE:X,IS_PATH_AVAILABLE:oe}),V=X&&oe;let H="./";if(V){const ee=Object(import.meta).url;ee?H=u.dirname(u.dirname(h.fileURLToPath(ee))):typeof __dirname<"u"&&(H=u.dirname(__dirname))}const te=V?u.join(H,"/.cache/"):null,G="/models/",D=V?u.join(H,G):G,E={version:v,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(P||f),localModelPath:D,useFS:X,useBrowserCache:b,useFSCache:X,cacheDir:te,useCustomCache:!1,customCache:null};function L(ee){return Object.keys(ee).length===0}},"./src/generation/configuration_utils.js":(t,s,n)=>{n.r(s),n.d(s,{GenerationConfig:()=>u});var o=n("./src/utils/core.js");class u{constructor(v){Te(this,"max_length",20);Te(this,"max_new_tokens",null);Te(this,"min_length",0);Te(this,"min_new_tokens",null);Te(this,"early_stopping",!1);Te(this,"max_time",null);Te(this,"do_sample",!1);Te(this,"num_beams",1);Te(this,"num_beam_groups",1);Te(this,"penalty_alpha",null);Te(this,"use_cache",!0);Te(this,"temperature",1);Te(this,"top_k",50);Te(this,"top_p",1);Te(this,"typical_p",1);Te(this,"epsilon_cutoff",0);Te(this,"eta_cutoff",0);Te(this,"diversity_penalty",0);Te(this,"repetition_penalty",1);Te(this,"encoder_repetition_penalty",1);Te(this,"length_penalty",1);Te(this,"no_repeat_ngram_size",0);Te(this,"bad_words_ids",null);Te(this,"force_words_ids",null);Te(this,"renormalize_logits",!1);Te(this,"constraints",null);Te(this,"forced_bos_token_id",null);Te(this,"forced_eos_token_id",null);Te(this,"remove_invalid_values",!1);Te(this,"exponential_decay_length_penalty",null);Te(this,"suppress_tokens",null);Te(this,"streamer",null);Te(this,"begin_suppress_tokens",null);Te(this,"forced_decoder_ids",null);Te(this,"guidance_scale",null);Te(this,"num_return_sequences",1);Te(this,"output_attentions",!1);Te(this,"output_hidden_states",!1);Te(this,"output_scores",!1);Te(this,"return_dict_in_generate",!1);Te(this,"pad_token_id",null);Te(this,"bos_token_id",null);Te(this,"eos_token_id",null);Te(this,"encoder_no_repeat_ngram_size",0);Te(this,"decoder_start_token_id",null);Te(this,"generation_kwargs",{});Object.assign(this,(0,o.pick)(v,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(t,s,n)=>{n.r(s),n.d(s,{ClassifierFreeGuidanceLogitsProcessor:()=>V,ForcedBOSTokenLogitsProcessor:()=>f,ForcedEOSTokenLogitsProcessor:()=>b,LogitsProcessor:()=>h,LogitsProcessorList:()=>P,LogitsWarper:()=>v,MinLengthLogitsProcessor:()=>X,MinNewTokensLengthLogitsProcessor:()=>oe,NoBadWordsLogitsProcessor:()=>re,NoRepeatNGramLogitsProcessor:()=>C,RepetitionPenaltyLogitsProcessor:()=>N,SuppressTokensAtBeginLogitsProcessor:()=>x,TemperatureLogitsWarper:()=>H,TopKLogitsWarper:()=>G,TopPLogitsWarper:()=>te,WhisperTimeStampLogitsProcessor:()=>k});var o=n("./src/utils/generic.js");n("./src/utils/tensor.js");var u=n("./src/utils/maths.js");class h extends o.Callable{_call(E,L){throw Error("`_call` should be implemented in a subclass")}}class v extends o.Callable{_call(E,L){throw Error("`_call` should be implemented in a subclass")}}class P extends o.Callable{constructor(){super(),this.processors=[]}push(E){this.processors.push(E)}extend(E){this.processors.push(...E)}_call(E,L){let S=L;for(const se of this.processors)S=se(E,S);return S}[Symbol.iterator](){return this.processors.values()}}class f extends h{constructor(E){super(),this.bos_token_id=E}_call(E,L){for(let S=0;S<E.length;++S)if(E[S].length===1){const se=L[S].data;se.fill(-1/0),se[this.bos_token_id]=0}return L}}class b extends h{constructor(E,L){super(),this.max_length=E,this.eos_token_id=Array.isArray(L)?L:[L]}_call(E,L){for(let S=0;S<E.length;++S)if(E[S].length===this.max_length-1){const se=L[S].data;se.fill(-1/0);for(const ee of this.eos_token_id)se[ee]=0}return L}}class x extends h{constructor(E,L){super(),this.begin_suppress_tokens=E,this.begin_index=L}_call(E,L){for(let S=0;S<E.length;++S)if(E[S].length===this.begin_index){const se=L[S].data;for(const ee of this.begin_suppress_tokens)se[ee]=-1/0}return L}}class k extends h{constructor(E,L){super(),this.eos_token_id=Array.isArray(E.eos_token_id)?E.eos_token_id[0]:E.eos_token_id,this.no_timestamps_token_id=E.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=L.length,L.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=E.max_initial_timestamp_index}_call(E,L){for(let S=0;S<E.length;++S){const se=L[S].data;if(se[this.no_timestamps_token_id]=-1/0,E[S].length===this.begin_index-1){se.fill(-1/0),se[this.timestamp_begin]=0;continue}const ee=E[S].slice(this.begin_index),pe=ee.length>=1&&ee[ee.length-1]>=this.timestamp_begin,he=ee.length<2||ee[ee.length-2]>=this.timestamp_begin;if(pe&&(he?se.subarray(this.timestamp_begin).fill(-1/0):se.subarray(0,this.eos_token_id).fill(-1/0)),E[S].length===this.begin_index&&this.max_initial_timestamp_index!==null){const je=this.timestamp_begin+this.max_initial_timestamp_index;se.subarray(je+1).fill(-1/0)}const be=(0,u.log_softmax)(se),Ce=Math.log(be.subarray(this.timestamp_begin).map(Math.exp).reduce((je,fe)=>je+fe)),ke=(0,u.max)(be.subarray(0,this.timestamp_begin))[0];Ce>ke&&se.subarray(0,this.timestamp_begin).fill(-1/0)}return L}}class C extends h{constructor(E){super(),this.no_repeat_ngram_size=E}getNgrams(E){const L=E.length,S=[];for(let ee=0;ee<L+1-this.no_repeat_ngram_size;++ee){const pe=[];for(let he=0;he<this.no_repeat_ngram_size;++he)pe.push(E[ee+he]);S.push(pe.map(Number))}const se=new Map;for(const ee of S){const pe=ee.slice(0,ee.length-1),he=JSON.stringify(pe),be=se.get(he)??[];be.push(ee[ee.length-1]),se.set(he,be)}return se}getGeneratedNgrams(E,L){const S=L.slice(L.length+1-this.no_repeat_ngram_size,L.length);return E.get(JSON.stringify(S.map(Number)))??[]}calcBannedNgramTokens(E){const L=[];if(E.length+1<this.no_repeat_ngram_size)return L;{const S=this.getNgrams(E);return this.getGeneratedNgrams(S,E)}}_call(E,L){for(let S=0;S<E.length;++S){const se=L[S].data,ee=this.calcBannedNgramTokens(E[S]);for(const pe of ee)se[pe]=-1/0}return L}}class N extends h{constructor(E){super(),this.penalty=E}_call(E,L){for(let S=0;S<E.length;++S){const se=L[S].data;for(const ee of new Set(E[S])){const pe=Number(ee);se[pe]<0?se[pe]*=this.penalty:se[pe]/=this.penalty}}return L}}class X extends h{constructor(E,L){super(),this.min_length=E,this.eos_token_id=Array.isArray(L)?L:[L]}_call(E,L){for(let S=0;S<E.length;++S)if(E[S].length<this.min_length){const se=L[S].data;for(const ee of this.eos_token_id)se[ee]=-1/0}return L}}class oe extends h{constructor(E,L,S){super(),this.prompt_length_to_skip=E,this.min_new_tokens=L,this.eos_token_id=Array.isArray(S)?S:[S]}_call(E,L){for(let S=0;S<E.length;++S)if(E[S].length-this.prompt_length_to_skip<this.min_new_tokens){const ee=L[S].data;for(const pe of this.eos_token_id)ee[pe]=-1/0}return L}}class re extends h{constructor(E,L){super(),this.bad_words_ids=E,this.eos_token_id=Array.isArray(L)?L:[L]}_call(E,L){for(let S=0;S<E.length;++S){const se=L[S].data,ee=E[S];for(const pe of this.bad_words_ids){let he=!0;for(let be=1;be<=pe.length-1&&pe.length<ee.length;++be)if(pe.at(-be-1)!=ee.at(-be)){he=!1;break}he&&(se[pe.at(-1)]=-1/0)}}return L}}class V extends h{constructor(E){if(super(),E<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${E}.`);this.guidance_scale=E}_call(E,L){if(L.dims[0]!==2*E.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${L.dims[0]} for the logits and ${E.length} for the input ids.`);const S=E.length,se=L.slice([0,S],null),ee=L.slice([S,L.dims[0]],null);for(let pe=0;pe<ee.data.length;++pe)ee.data[pe]+=(se.data[pe]-ee.data[pe])*this.guidance_scale;return ee}}class H extends v{constructor(E){super(),this.temperature=E}_call(E,L){const S=L.data;for(let se=0;se<S.length;++se)S[se]/=this.temperature;return L}}class te extends v{constructor(E,{filter_value:L=-1/0,min_tokens_to_keep:S=1}={}){if(super(),E<0||E>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${E}`);if(!Number.isInteger(S)||S<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${S}`);this.top_p=E,this.filter_value=L,this.min_tokens_to_keep=S}}class G extends v{constructor(E,{filter_value:L=-1/0,min_tokens_to_keep:S=1}={}){if(super(),!Number.isInteger(E)||E<0)throw new Error(`\`top_k\` must be a positive integer, but is ${E}`);this.top_k=Math.max(E,S),this.filter_value=L}}},"./src/generation/logits_sampler.js":(t,s,n)=>{n.r(s),n.d(s,{LogitsSampler:()=>v});var o=n("./src/utils/generic.js"),u=n("./src/utils/tensor.js"),h=n("./src/utils/maths.js");n("./src/generation/configuration_utils.js");class v extends o.Callable{constructor(k){super(),this.generation_config=k}async _call(k){return this.sample(k)}async sample(k){throw Error("sample should be implemented in subclasses.")}getLogits(k,C){let N=k.dims.at(-1),X=k.data;if(C===-1)X=X.slice(-N);else{let oe=C*N;X=X.slice(oe,oe+N)}return X}randomSelect(k){let C=0;for(let X=0;X<k.length;++X)C+=k[X];let N=Math.random()*C;for(let X=0;X<k.length;++X)if(N-=k[X],N<=0)return X;return 0}static getSampler(k){if(k.do_sample)return new f(k);if(k.num_beams>1)return new b(k);if(k.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${k.num_return_sequences}.`);return new P(k)}}class P extends v{async sample(k){const C=(0,h.max)(k.data)[1];return[[BigInt(C),0]]}}class f extends v{async sample(k){let C=k.dims.at(-1);this.generation_config.top_k>0&&(C=Math.min(this.generation_config.top_k,C));const[N,X]=await(0,u.topk)(k,C),oe=(0,h.softmax)(N.data);return Array.from({length:this.generation_config.num_beams},()=>{const re=this.randomSelect(oe);return[X.data[re],Math.log(oe[re])]})}}class b extends v{async sample(k){let C=k.dims.at(-1);this.generation_config.top_k>0&&(C=Math.min(this.generation_config.top_k,C));const[N,X]=await(0,u.topk)(k,C),oe=(0,h.softmax)(N.data);return Array.from({length:this.generation_config.num_beams},(re,V)=>[X.data[V],Math.log(oe[V])])}}},"./src/generation/stopping_criteria.js":(t,s,n)=>{n.r(s),n.d(s,{EosTokenCriteria:()=>P,InterruptableStoppingCriteria:()=>f,MaxLengthCriteria:()=>v,StoppingCriteria:()=>u,StoppingCriteriaList:()=>h});var o=n("./src/utils/generic.js");class u extends o.Callable{_call(x,k){throw Error("StoppingCriteria needs to be subclassed")}}class h extends o.Callable{constructor(){super(),this.criteria=[]}push(x){this.criteria.push(x)}extend(x){x instanceof h?x=x.criteria:x instanceof u&&(x=[x]),this.criteria.push(...x)}_call(x,k){const C=new Array(x.length).fill(!1);for(const N of this.criteria){const X=N(x,k);for(let oe=0;oe<C.length;++oe)C[oe]||(C[oe]=X[oe])}return C}[Symbol.iterator](){return this.criteria.values()}}class v extends u{constructor(x,k=null){super(),this.max_length=x,this.max_position_embeddings=k}_call(x){return x.map(k=>k.length>=this.max_length)}}class P extends u{constructor(x){super(),Array.isArray(x)||(x=[x]),this.eos_token_id=x}_call(x,k){return x.map(C=>{const N=C.at(-1);return this.eos_token_id.some(X=>N==X)})}}class f extends u{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(x,k){return new Array(x.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(t,s,n)=>{n.r(s),n.d(s,{BaseStreamer:()=>v,TextStreamer:()=>f,WhisperTextStreamer:()=>b});var o=n("./src/utils/core.js"),u=n("./src/tokenizers.js"),h=n("./src/env.js");class v{put(k){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const P=h.apis.IS_PROCESS_AVAILABLE?x=>process.stdout.write(x):x=>console.log(x);class f extends v{constructor(k,{skip_prompt:C=!1,callback_function:N=null,token_callback_function:X=null,decode_kwargs:oe={},...re}={}){super(),this.tokenizer=k,this.skip_prompt=C,this.callback_function=N??P,this.token_callback_function=X,this.decode_kwargs={...oe,...re},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(k){var oe;if(k.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const C=k[0];(oe=this.token_callback_function)==null||oe.call(this,C),this.token_cache=(0,o.mergeArrays)(this.token_cache,C);const N=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let X;N.endsWith(`
`)?(X=N.slice(this.print_len),this.token_cache=[],this.print_len=0):N.length>0&&(0,u.is_chinese_char)(N.charCodeAt(N.length-1))?(X=N.slice(this.print_len),this.print_len+=X.length):(X=N.slice(this.print_len,N.lastIndexOf(" ")+1),this.print_len+=X.length),this.on_finalized_text(X,!1)}end(){let k;this.token_cache.length>0?(k=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):k="",this.next_tokens_are_prompt=!0,this.on_finalized_text(k,!0)}on_finalized_text(k,C){var N,X;k.length>0&&((N=this.callback_function)==null||N.call(this,k)),C&&this.callback_function===P&&h.apis.IS_PROCESS_AVAILABLE&&((X=this.callback_function)==null||X.call(this,`
`))}}class b extends f{constructor(k,{skip_prompt:C=!1,callback_function:N=null,token_callback_function:X=null,on_chunk_start:oe=null,on_chunk_end:re=null,on_finalize:V=null,time_precision:H=.02,skip_special_tokens:te=!0,decode_kwargs:G={}}={}){super(k,{skip_prompt:C,callback_function:N,token_callback_function:X,decode_kwargs:{skip_special_tokens:te,...G}}),this.timestamp_begin=k.timestamp_begin,this.on_chunk_start=oe,this.on_chunk_end=re,this.on_finalize=V,this.time_precision=H,this.waiting_for_timestamp=!1}put(k){var N,X;if(k.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const C=k[0];if(C.length===1){const oe=Number(C[0])-this.timestamp_begin;if(oe>=0){const re=oe*this.time_precision;this.waiting_for_timestamp?(N=this.on_chunk_end)==null||N.call(this,re):(X=this.on_chunk_start)==null||X.call(this,re),this.waiting_for_timestamp=!this.waiting_for_timestamp,k=[[]]}}return super.put(k)}end(){var k;super.end(),(k=this.on_finalize)==null||k.call(this)}}},"./src/models.js":(t,s,n)=>{n.r(s),n.d(s,{ASTForAudioClassification:()=>Jc,ASTModel:()=>Ha,ASTPreTrainedModel:()=>$t,AlbertForMaskedLM:()=>yo,AlbertForQuestionAnswering:()=>_o,AlbertForSequenceClassification:()=>go,AlbertModel:()=>Hi,AlbertPreTrainedModel:()=>Dt,AutoModel:()=>gc,AutoModelForAudioClassification:()=>_h,AutoModelForAudioFrameClassification:()=>wh,AutoModelForCTC:()=>gh,AutoModelForCausalLM:()=>ah,AutoModelForDepthEstimation:()=>Mh,AutoModelForDocumentQuestionAnswering:()=>bh,AutoModelForImageClassification:()=>uh,AutoModelForImageFeatureExtraction:()=>kh,AutoModelForImageMatting:()=>vh,AutoModelForImageSegmentation:()=>Nm,AutoModelForImageToImage:()=>_c,AutoModelForMaskGeneration:()=>fh,AutoModelForMaskedLM:()=>Rm,AutoModelForNormalEstimation:()=>xh,AutoModelForObjectDetection:()=>hh,AutoModelForPoseEstimation:()=>Th,AutoModelForQuestionAnswering:()=>lh,AutoModelForSemanticSegmentation:()=>dh,AutoModelForSeq2SeqLM:()=>Bm,AutoModelForSequenceClassification:()=>rh,AutoModelForSpeechSeq2Seq:()=>nh,AutoModelForTextToSpectrogram:()=>ih,AutoModelForTextToWaveform:()=>oh,AutoModelForTokenClassification:()=>sh,AutoModelForUniversalSegmentation:()=>ph,AutoModelForVision2Seq:()=>ch,AutoModelForXVector:()=>yh,AutoModelForZeroShotObjectDetection:()=>mh,BartForConditionalGeneration:()=>qe,BartForSequenceClassification:()=>lt,BartModel:()=>Pe,BartPretrainedModel:()=>ve,BaseModelOutput:()=>Re,BeitForImageClassification:()=>wd,BeitModel:()=>yd,BeitPreTrainedModel:()=>la,BertForMaskedLM:()=>Ze,BertForQuestionAnswering:()=>Ue,BertForSequenceClassification:()=>Ye,BertForTokenClassification:()=>Qe,BertModel:()=>Ae,BertPreTrainedModel:()=>ye,BlenderbotForConditionalGeneration:()=>er,BlenderbotModel:()=>Dr,BlenderbotPreTrainedModel:()=>nr,BlenderbotSmallForConditionalGeneration:()=>gs,BlenderbotSmallModel:()=>Hs,BlenderbotSmallPreTrainedModel:()=>mr,BloomForCausalLM:()=>Ku,BloomModel:()=>qu,BloomPreTrainedModel:()=>dl,CLIPModel:()=>su,CLIPPreTrainedModel:()=>Ti,CLIPSegForImageSegmentation:()=>mu,CLIPSegModel:()=>hu,CLIPSegPreTrainedModel:()=>Za,CLIPTextModel:()=>sm,CLIPTextModelWithProjection:()=>nu,CLIPVisionModel:()=>nm,CLIPVisionModelWithProjection:()=>iu,CamembertForMaskedLM:()=>si,CamembertForQuestionAnswering:()=>Vi,CamembertForSequenceClassification:()=>ni,CamembertForTokenClassification:()=>On,CamembertModel:()=>Bs,CamembertPreTrainedModel:()=>Gr,CausalLMOutput:()=>Ei,CausalLMOutputWithPast:()=>hg,ChineseCLIPModel:()=>cu,ChineseCLIPPreTrainedModel:()=>dn,ClapAudioModelWithProjection:()=>bp,ClapModel:()=>yp,ClapPreTrainedModel:()=>Ta,ClapTextModelWithProjection:()=>wp,CodeGenForCausalLM:()=>ku,CodeGenModel:()=>Tu,CodeGenPreTrainedModel:()=>rn,CohereForCausalLM:()=>Fu,CohereModel:()=>om,CoherePreTrainedModel:()=>oa,ConvBertForMaskedLM:()=>et,ConvBertForQuestionAnswering:()=>Ft,ConvBertForSequenceClassification:()=>ot,ConvBertForTokenClassification:()=>ct,ConvBertModel:()=>Oe,ConvBertPreTrainedModel:()=>de,ConvNextForImageClassification:()=>jd,ConvNextModel:()=>zl,ConvNextPreTrainedModel:()=>Ol,ConvNextV2ForImageClassification:()=>hm,ConvNextV2Model:()=>Bd,ConvNextV2PreTrainedModel:()=>Ll,DPTForDepthEstimation:()=>Al,DPTModel:()=>pa,DPTPreTrainedModel:()=>da,DebertaForMaskedLM:()=>zn,DebertaForQuestionAnswering:()=>oi,DebertaForSequenceClassification:()=>ii,DebertaForTokenClassification:()=>Mi,DebertaModel:()=>an,DebertaPreTrainedModel:()=>jt,DebertaV2ForMaskedLM:()=>li,DebertaV2ForQuestionAnswering:()=>at,DebertaV2ForSequenceClassification:()=>Ln,DebertaV2ForTokenClassification:()=>Ks,DebertaV2Model:()=>ai,DebertaV2PreTrainedModel:()=>ln,DecisionTransformerModel:()=>$p,DecisionTransformerPreTrainedModel:()=>Ip,DeiTForImageClassification:()=>Cd,DeiTModel:()=>um,DeiTPreTrainedModel:()=>Pl,DepthAnythingForDepthEstimation:()=>Fd,DepthAnythingPreTrainedModel:()=>$d,DepthProForDepthEstimation:()=>zd,DepthProPreTrainedModel:()=>fa,DetrForObjectDetection:()=>bd,DetrForSegmentation:()=>Tl,DetrModel:()=>cm,DetrObjectDetectionOutput:()=>sn,DetrPreTrainedModel:()=>ca,DetrSegmentationOutput:()=>vd,Dinov2ForImageClassification:()=>mm,Dinov2Model:()=>Rd,Dinov2PreTrainedModel:()=>Dl,DistilBertForMaskedLM:()=>Br,DistilBertForQuestionAnswering:()=>Dn,DistilBertForSequenceClassification:()=>fs,DistilBertForTokenClassification:()=>ci,DistilBertModel:()=>Ot,DistilBertPreTrainedModel:()=>bt,DonutSwinModel:()=>xo,DonutSwinPreTrainedModel:()=>Fl,EfficientNetForImageClassification:()=>Tp,EfficientNetModel:()=>Pm,EfficientNetPreTrainedModel:()=>Ql,ElectraForMaskedLM:()=>Ct,ElectraForQuestionAnswering:()=>as,ElectraForSequenceClassification:()=>hr,ElectraForTokenClassification:()=>Cr,ElectraModel:()=>kt,ElectraPreTrainedModel:()=>Tt,EsmForMaskedLM:()=>Mn,EsmForSequenceClassification:()=>Sr,EsmForTokenClassification:()=>Wi,EsmModel:()=>Yr,EsmPreTrainedModel:()=>Is,FalconForCausalLM:()=>xm,FalconModel:()=>_p,FalconPreTrainedModel:()=>Kl,FastViTForImageClassification:()=>ud,FastViTModel:()=>cd,FastViTPreTrainedModel:()=>gl,Florence2ForConditionalGeneration:()=>tu,Florence2PreTrainedModel:()=>Qs,GLPNForDepthEstimation:()=>Dd,GLPNModel:()=>pm,GLPNPreTrainedModel:()=>$l,GPT2LMHeadModel:()=>im,GPT2Model:()=>fu,GPT2PreTrainedModel:()=>el,GPTBigCodeForCausalLM:()=>xu,GPTBigCodeModel:()=>Mu,GPTBigCodePreTrainedModel:()=>sl,GPTJForCausalLM:()=>vu,GPTJModel:()=>bu,GPTJPreTrainedModel:()=>rl,GPTNeoForCausalLM:()=>_u,GPTNeoModel:()=>pn,GPTNeoPreTrainedModel:()=>na,GPTNeoXForCausalLM:()=>wu,GPTNeoXModel:()=>yu,GPTNeoXPreTrainedModel:()=>tl,Gemma2ForCausalLM:()=>Du,Gemma2Model:()=>Lu,Gemma2PreTrainedModel:()=>Ji,GemmaForCausalLM:()=>zu,GemmaModel:()=>Ou,GemmaPreTrainedModel:()=>ll,GraniteForCausalLM:()=>$u,GraniteModel:()=>Iu,GranitePreTrainedModel:()=>ia,GroupViTModel:()=>ld,GroupViTPreTrainedModel:()=>ad,HieraForImageClassification:()=>Ad,HieraModel:()=>Sd,HieraPreTrainedModel:()=>Cl,HubertForCTC:()=>lp,HubertForSequenceClassification:()=>cp,HubertModel:()=>ap,HubertPreTrainedModel:()=>wm,Idefics3ForConditionalGeneration:()=>Nn,Idefics3PreTrainedModel:()=>ru,ImageMattingOutput:()=>Ph,JAISLMHeadModel:()=>sa,JAISModel:()=>gu,JAISPreTrainedModel:()=>tn,JinaCLIPModel:()=>uu,JinaCLIPPreTrainedModel:()=>ra,JinaCLIPTextModel:()=>du,JinaCLIPVisionModel:()=>pu,LlamaForCausalLM:()=>Pu,LlamaModel:()=>Eu,LlamaPreTrainedModel:()=>nl,LlavaForConditionalGeneration:()=>ta,LlavaOnevisionForConditionalGeneration:()=>Zc,LlavaPreTrainedModel:()=>Ya,LongT5ForConditionalGeneration:()=>Ee,LongT5Model:()=>Mr,LongT5PreTrainedModel:()=>Yi,M2M100ForConditionalGeneration:()=>Nl,M2M100Model:()=>qd,M2M100PreTrainedModel:()=>Rl,MBartForCausalLM:()=>xr,MBartForConditionalGeneration:()=>xt,MBartForSequenceClassification:()=>Qt,MBartModel:()=>pt,MBartPreTrainedModel:()=>mt,MPNetForMaskedLM:()=>Zo,MPNetForQuestionAnswering:()=>Bn,MPNetForSequenceClassification:()=>di,MPNetForTokenClassification:()=>cn,MPNetModel:()=>fo,MPNetPreTrainedModel:()=>jn,MT5ForConditionalGeneration:()=>ce,MT5Model:()=>J,MT5PreTrainedModel:()=>I,MarianMTModel:()=>Bl,MarianModel:()=>jl,MarianPreTrainedModel:()=>To,MaskFormerForInstanceSegmentation:()=>Ld,MaskFormerModel:()=>_a,MaskFormerPreTrainedModel:()=>ga,MaskedLMOutput:()=>Es,MgpstrForSceneTextRecognition:()=>sc,MgpstrModelOutput:()=>Op,MgpstrPreTrainedModel:()=>zp,MistralForCausalLM:()=>fp,MistralModel:()=>Gl,MistralPreTrainedModel:()=>Wl,MobileBertForMaskedLM:()=>po,MobileBertForQuestionAnswering:()=>mo,MobileBertForSequenceClassification:()=>ho,MobileBertModel:()=>Jo,MobileBertPreTrainedModel:()=>ui,MobileLLMForCausalLM:()=>Su,MobileLLMModel:()=>Cu,MobileLLMPreTrainedModel:()=>il,MobileNetV1ForImageClassification:()=>Pp,MobileNetV1Model:()=>Ep,MobileNetV1PreTrainedModel:()=>Fs,MobileNetV2ForImageClassification:()=>So,MobileNetV2Model:()=>Cp,MobileNetV2PreTrainedModel:()=>Ea,MobileNetV3ForImageClassification:()=>Zl,MobileNetV3Model:()=>Sp,MobileNetV3PreTrainedModel:()=>Jl,MobileNetV4ForImageClassification:()=>tc,MobileNetV4Model:()=>Ap,MobileNetV4PreTrainedModel:()=>ec,MobileViTForImageClassification:()=>yl,MobileViTModel:()=>hd,MobileViTPreTrainedModel:()=>_l,MobileViTV2ForImageClassification:()=>vl,MobileViTV2Model:()=>bl,MobileViTV2PreTrainedModel:()=>wl,ModelOutput:()=>Fe,Moondream1ForConditionalGeneration:()=>eu,MptForCausalLM:()=>Xu,MptModel:()=>Hu,MptPreTrainedModel:()=>pl,MultiModalityCausalLM:()=>rc,MultiModalityPreTrainedModel:()=>Fp,MusicgenForCausalLM:()=>Sm,MusicgenForConditionalGeneration:()=>kp,MusicgenModel:()=>Cm,MusicgenPreTrainedModel:()=>Yl,NomicBertModel:()=>ut,NomicBertPreTrainedModel:()=>it,OPTForCausalLM:()=>Yu,OPTModel:()=>Qu,OPTPreTrainedModel:()=>hl,OlmoForCausalLM:()=>al,OlmoModel:()=>Au,OlmoPreTrainedModel:()=>ol,OpenELMForCausalLM:()=>Bu,OpenELMModel:()=>ju,OpenELMPreTrainedModel:()=>aa,OwlViTForObjectDetection:()=>fd,OwlViTModel:()=>md,OwlViTPreTrainedModel:()=>Ml,Owlv2ForObjectDetection:()=>_d,Owlv2Model:()=>gd,Owlv2PreTrainedModel:()=>xl,PatchTSMixerForPrediction:()=>Dp,PatchTSMixerModel:()=>Lp,PatchTSMixerPreTrainedModel:()=>oc,PatchTSTForPrediction:()=>ic,PatchTSTModel:()=>Am,PatchTSTPreTrainedModel:()=>nc,Phi3ForCausalLM:()=>Gu,Phi3Model:()=>Wu,Phi3PreTrainedModel:()=>fr,PhiForCausalLM:()=>Vu,PhiModel:()=>lm,PhiPreTrainedModel:()=>ul,PreTrainedModel:()=>le,PretrainedMixin:()=>Ar,PvtForImageClassification:()=>rd,PvtModel:()=>td,PvtPreTrainedModel:()=>Mo,PyAnnoteForAudioFrameClassification:()=>Qd,PyAnnoteModel:()=>gm,PyAnnotePreTrainedModel:()=>ba,QuestionAnsweringModelOutput:()=>Os,Qwen2ForCausalLM:()=>am,Qwen2Model:()=>Ru,Qwen2PreTrainedModel:()=>cl,Qwen2VLForConditionalGeneration:()=>Uu,Qwen2VLPreTrainedModel:()=>Nu,RTDetrForObjectDetection:()=>xd,RTDetrModel:()=>Md,RTDetrObjectDetectionOutput:()=>Td,RTDetrPreTrainedModel:()=>kl,ResNetForImageClassification:()=>dm,ResNetModel:()=>Id,ResNetPreTrainedModel:()=>Sl,RoFormerForMaskedLM:()=>gt,RoFormerForQuestionAnswering:()=>Q,RoFormerForSequenceClassification:()=>j,RoFormerForTokenClassification:()=>ae,RoFormerModel:()=>ht,RoFormerPreTrainedModel:()=>_t,RobertaForMaskedLM:()=>vs,RobertaForQuestionAnswering:()=>Kt,RobertaForSequenceClassification:()=>Xs,RobertaForTokenClassification:()=>un,RobertaModel:()=>Tr,RobertaPreTrainedModel:()=>De,SamImageSegmentationOutput:()=>Gd,SamModel:()=>wa,SamPreTrainedModel:()=>Wd,SapiensForDepthEstimation:()=>Il,SapiensForNormalEstimation:()=>Od,SapiensForSemanticSegmentation:()=>ma,SapiensPreTrainedModel:()=>ha,SegformerForImageClassification:()=>vp,SegformerForSemanticSegmentation:()=>Em,SegformerModel:()=>km,SegformerPreTrainedModel:()=>ka,Seq2SeqLMOutput:()=>Um,SequenceClassifierOutput:()=>ar,SiglipModel:()=>ou,SiglipPreTrainedModel:()=>Ja,SiglipTextModel:()=>au,SiglipVisionModel:()=>lu,SpeechT5ForSpeechToText:()=>Vl,SpeechT5ForTextToSpeech:()=>pp,SpeechT5HifiGan:()=>hp,SpeechT5Model:()=>bm,SpeechT5PreTrainedModel:()=>xa,SqueezeBertForMaskedLM:()=>Gi,SqueezeBertForQuestionAnswering:()=>Ki,SqueezeBertForSequenceClassification:()=>qi,SqueezeBertModel:()=>xi,SqueezeBertPreTrainedModel:()=>Rn,StableLmForCausalLM:()=>xp,StableLmModel:()=>Mp,StableLmPreTrainedModel:()=>Xl,Starcoder2ForCausalLM:()=>Mm,Starcoder2Model:()=>gp,Starcoder2PreTrainedModel:()=>ql,Swin2SRForImageSuperResolution:()=>$s,Swin2SRModel:()=>mi,Swin2SRPreTrainedModel:()=>ua,SwinForImageClassification:()=>hi,SwinModel:()=>pi,SwinPreTrainedModel:()=>Un,T5ForConditionalGeneration:()=>Qi,T5Model:()=>wo,T5PreTrainedModel:()=>Xi,TableTransformerForObjectDetection:()=>Ed,TableTransformerModel:()=>kd,TableTransformerObjectDetectionOutput:()=>Pd,TableTransformerPreTrainedModel:()=>El,TokenClassifierOutput:()=>ks,TrOCRForCausalLM:()=>vm,TrOCRPreTrainedModel:()=>mp,UniSpeechForCTC:()=>ep,UniSpeechForSequenceClassification:()=>tp,UniSpeechModel:()=>Zd,UniSpeechPreTrainedModel:()=>ko,UniSpeechSatForAudioFrameClassification:()=>np,UniSpeechSatForCTC:()=>sp,UniSpeechSatForSequenceClassification:()=>_m,UniSpeechSatModel:()=>rp,UniSpeechSatPreTrainedModel:()=>Eo,ViTForImageClassification:()=>Zu,ViTMAEModel:()=>nd,ViTMAEPreTrainedModel:()=>sd,ViTMSNForImageClassification:()=>od,ViTMSNModel:()=>id,ViTMSNPreTrainedModel:()=>fl,ViTModel:()=>Ju,ViTPreTrainedModel:()=>ml,VisionEncoderDecoderModel:()=>Qa,VitMatteForImageMatting:()=>pd,VitMattePreTrainedModel:()=>dd,VitPoseForPoseEstimation:()=>ed,VitPosePreTrainedModel:()=>vo,VitsModel:()=>Hl,VitsModelOutput:()=>Ch,VitsPreTrainedModel:()=>Tm,Wav2Vec2BertForCTC:()=>ym,Wav2Vec2BertForSequenceClassification:()=>op,Wav2Vec2BertModel:()=>ip,Wav2Vec2BertPreTrainedModel:()=>va,Wav2Vec2ForAudioFrameClassification:()=>Xd,Wav2Vec2ForCTC:()=>Hd,Wav2Vec2ForSequenceClassification:()=>fm,Wav2Vec2Model:()=>Kd,Wav2Vec2PreTrainedModel:()=>ki,WavLMForAudioFrameClassification:()=>dp,WavLMForCTC:()=>Co,WavLMForSequenceClassification:()=>Ul,WavLMForXVector:()=>up,WavLMModel:()=>Ma,WavLMPreTrainedModel:()=>Po,WeSpeakerResNetModel:()=>Jd,WeSpeakerResNetPreTrainedModel:()=>Yd,WhisperForConditionalGeneration:()=>or,WhisperModel:()=>bo,WhisperPreTrainedModel:()=>Xa,XLMForQuestionAnswering:()=>ir,XLMForSequenceClassification:()=>kr,XLMForTokenClassification:()=>yt,XLMModel:()=>Gs,XLMPreTrainedModel:()=>ts,XLMRobertaForMaskedLM:()=>Tn,XLMRobertaForQuestionAnswering:()=>tt,XLMRobertaForSequenceClassification:()=>At,XLMRobertaForTokenClassification:()=>ea,XLMRobertaModel:()=>xn,XLMRobertaPreTrainedModel:()=>Hr,XLMWithLMHeadModel:()=>dr,XVectorOutput:()=>Eh,YolosForObjectDetection:()=>Ud,YolosModel:()=>Nd,YolosObjectDetectionOutput:()=>Vd,YolosPreTrainedModel:()=>ya});var o=n("./src/configs.js"),u=n("./src/backends/onnx.js"),h=n("./src/utils/dtypes.js"),v=n("./src/utils/generic.js"),P=n("./src/utils/core.js"),f=n("./src/utils/hub.js"),b=n("./src/utils/constants.js"),x=n("./src/generation/logits_process.js"),k=n("./src/generation/configuration_utils.js"),C=n("./src/utils/tensor.js"),N=n("./src/utils/image.js"),X=n("./src/utils/maths.js"),oe=n("./src/generation/stopping_criteria.js"),re=n("./src/generation/logits_sampler.js"),V=n("./src/env.js"),H=n("./src/models/whisper/generation_whisper.js"),te=n("./src/models/whisper/common_whisper.js");const G={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8},D=new Map,E=new Map,L=new Map;async function S(T,z,U){var jr;const xe=((jr=U.config)==null?void 0:jr["transformers.js_config"])??{};let ze=U.device??xe.device;ze&&typeof ze!="string"&&(ze.hasOwnProperty(z)?ze=ze[z]:(console.warn(`device not specified for "${z}". Using the default device.`),ze=null));const Ie=ze??(V.apis.IS_NODE_ENV?"cpu":"wasm"),Je=(0,u.deviceToExecutionProviders)(Ie);let rt=U.dtype??xe.dtype;if(typeof rt!="string"&&(rt&&rt.hasOwnProperty(z)?rt=rt[z]:(rt=h.DEFAULT_DEVICE_DTYPE_MAPPING[Ie]??h.DATA_TYPES.fp32,console.warn(`dtype not specified for "${z}". Using the default dtype (${rt}) for this device (${Ie}).`))),rt===h.DATA_TYPES.auto){let yr=xe.dtype;typeof yr!="string"&&(yr=yr[z]),yr&&yr!==h.DATA_TYPES.auto&&h.DATA_TYPES.hasOwnProperty(yr)?rt=yr:rt=h.DEFAULT_DEVICE_DTYPE_MAPPING[Ie]??h.DATA_TYPES.fp32}const ft=rt;if(h.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(ft)){if(ft===h.DATA_TYPES.fp16&&Ie==="webgpu"&&!await(0,h.isWebGpuFp16Supported)())throw new Error(`The device (${Ie}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${ft}. Should be one of: ${Object.keys(h.DATA_TYPES).join(", ")}`);const vt=xe.kv_cache_dtype?typeof xe.kv_cache_dtype=="string"?xe.kv_cache_dtype:xe.kv_cache_dtype[ft]??"float32":void 0;if(vt&&!["float32","float16"].includes(vt))throw new Error(`Invalid kv_cache_dtype: ${vt}. Should be one of: float32, float16`);const Jt={dtype:ft,kv_cache_dtype:vt},Gt=h.DEFAULT_DTYPE_SUFFIX_MAPPING[ft],Bt=`${U.subfolder??""}/${z}${Gt}.onnx`,Yt={...U.session_options};Yt.executionProviders??(Yt.executionProviders=Je);const cr=xe.free_dimension_overrides;cr?Yt.freeDimensionOverrides??(Yt.freeDimensionOverrides=cr):Ie.startsWith("webnn")&&!Yt.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const pr=(0,f.getModelFile)(T,Bt,!0,U),tr=U.use_external_data_format??xe.use_external_data_format;let gr=[];if(tr&&(tr===!0||typeof tr=="object"&&tr.hasOwnProperty(z)&&tr[z]===!0)){if(V.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const yr=`${z}${Gt}.onnx_data`,Rr=`${U.subfolder??""}/${yr}`;gr.push(new Promise(async(Xr,zs)=>{const _s=await(0,f.getModelFile)(T,Rr,!0,U);Xr({path:yr,data:_s})}))}else Yt.externalData!==void 0&&(gr=Yt.externalData.map(async yr=>{if(typeof yr.data=="string"){const Rr=await(0,f.getModelFile)(T,yr.data,!0,U);return{...yr,data:Rr}}return yr}));if(gr.length>0&&(Yt.externalData=await Promise.all(gr)),Ie==="webgpu"){const yr=(0,o.getKeyValueShapes)(U.config,{prefix:"present"});if(Object.keys(yr).length>0&&!(0,u.isONNXProxy)()){const Rr={};for(const Xr in yr)Rr[Xr]="gpu-buffer";Yt.preferredOutputLocation=Rr}}return{buffer:await pr,session_options:Yt,session_config:Jt}}async function se(T,z,U){return Object.fromEntries(await Promise.all(Object.keys(z).map(async xe=>{const{buffer:ze,session_options:Ie,session_config:Je}=await S(T,z[xe],U),rt=await(0,u.createInferenceSession)(ze,Ie,Je);return[xe,rt]})))}async function ee(T,z,U){return Object.fromEntries(await Promise.all(Object.keys(z).map(async xe=>{const ze=await(0,f.getModelJSON)(T,z[xe],!1,U);return[xe,ze]})))}function pe(T,z){const U=Object.create(null),xe=[];for(const Je of T.inputNames){const rt=z[Je];if(!(rt instanceof C.Tensor)){xe.push(Je);continue}U[Je]=(0,u.isONNXProxy)()?rt.clone():rt}if(xe.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${xe.join(", ")}.`);const ze=Object.keys(z).length,Ie=T.inputNames.length;if(ze>Ie){let Je=Object.keys(z).filter(rt=>!T.inputNames.includes(rt));console.warn(`WARNING: Too many inputs were provided (${ze} > ${Ie}). The following inputs will be ignored: "${Je.join(", ")}".`)}return U}async function he(T,z){const U=pe(T,z);try{const xe=Object.fromEntries(Object.entries(U).map(([Ie,Je])=>[Ie,Je.ort_tensor]));let ze=await T.run(xe);return ze=be(ze),ze}catch(xe){const ze=Object.fromEntries(Object.entries(U).map(([Ie,{type:Je,dims:rt,data:ft}])=>[Ie,{type:Je,dims:rt,data:ft}]));throw console.error(`An error occurred during model execution: "${xe}".`),console.error("Inputs given to model:",ze),xe}}function be(T){for(let z in T)(0,u.isONNXTensor)(T[z])?T[z]=new C.Tensor(T[z]):typeof T[z]=="object"&&be(T[z]);return T}function Ce(T){if(T instanceof C.Tensor)return T;if(T.length===0)throw Error("items must be non-empty");if(Array.isArray(T[0])){if(T.some(z=>z.length!==T[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new C.Tensor("int64",BigInt64Array.from(T.flat().map(z=>BigInt(z))),[T.length,T[0].length])}else return new C.Tensor("int64",BigInt64Array.from(T.map(z=>BigInt(z))),[1,T.length])}function ke(T){return new C.Tensor("bool",[T],[1])}async function je(T,z){let{encoder_outputs:U,input_ids:xe,decoder_input_ids:ze,...Ie}=z;if(!U){const rt=(0,P.pick)(z,T.sessions.model.inputNames);U=(await fe(T,rt)).last_hidden_state}return Ie.input_ids=ze,Ie.encoder_hidden_states=U,T.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(Ie.encoder_attention_mask=z.attention_mask),await K(T,Ie,!0)}async function fe(T,z){const U=T.sessions.model,xe=(0,P.pick)(z,U.inputNames);if(U.inputNames.includes("inputs_embeds")&&!xe.inputs_embeds){if(!z.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");xe.inputs_embeds=await T.encode_text({input_ids:z.input_ids})}return U.inputNames.includes("token_type_ids")&&!xe.token_type_ids&&(xe.token_type_ids=new C.Tensor("int64",new BigInt64Array(xe.input_ids.data.length),xe.input_ids.dims)),await he(U,xe)}async function K(T,z,U=!1){const xe=T.sessions[U?"decoder_model_merged":"model"],{past_key_values:ze,...Ie}=z;xe.inputNames.includes("use_cache_branch")&&(Ie.use_cache_branch=ke(!!ze)),xe.inputNames.includes("position_ids")&&Ie.attention_mask&&!Ie.position_ids&&(Ie.position_ids=We(Ie,ze)),T.addPastKeyValues(Ie,ze);const Je=(0,P.pick)(Ie,xe.inputNames);return await he(xe,Je)}function me({image_token_id:T,inputs_embeds:z,image_features:U,input_ids:xe,attention_mask:ze}){const Ie=xe.tolist().map(vt=>vt.reduce((Jt,Gt,Bt)=>(Gt==T&&Jt.push(Bt),Jt),[])),Je=Ie.reduce((vt,Jt)=>vt+Jt.length,0),rt=U.dims[0];if(Je!==rt)throw new Error(`Image features and image tokens do not match: tokens: ${Je}, features ${rt}`);let ft=0;for(let vt=0;vt<Ie.length;++vt){const Jt=Ie[vt],Gt=z[vt];for(let Bt=0;Bt<Jt.length;++Bt)Gt[Jt[Bt]].data.set(U[ft++].data)}return{inputs_embeds:z,attention_mask:ze}}async function ge(T,{input_ids:z=null,attention_mask:U=null,pixel_values:xe=null,position_ids:ze=null,inputs_embeds:Ie=null,past_key_values:Je=null,generation_config:rt=null,logits_processor:ft=null,...vt}){if(!Ie){if(Ie=await T.encode_text({input_ids:z,...vt}),xe&&z.dims[1]!==1){const Gt=await T.encode_image({pixel_values:xe,...vt});({inputs_embeds:Ie,attention_mask:U}=T._merge_input_ids_with_image_features({image_features:Gt,inputs_embeds:Ie,input_ids:z,attention_mask:U}))}else if(Je&&xe&&z.dims[1]===1){const Gt=z.dims[1],Bt=Object.values(Je)[0].dims.at(-2);U=(0,C.cat)([(0,C.ones)([z.dims[0],Bt]),U.slice(null,[U.dims[1]-Gt,U.dims[1]])],1)}}if(!ze&&T.config.model_type==="qwen2_vl"){const{image_grid_thw:Gt,video_grid_thw:Bt}=vt;[ze]=T.get_rope_index(z,Gt,Bt,U)}return await K(T,{inputs_embeds:Ie,past_key_values:Je,attention_mask:U,position_ids:ze,generation_config:rt,logits_processor:ft},!0)}function $e(T){const[z,U]=T.dims,xe=T.data,ze=new BigInt64Array(xe.length);for(let Ie=0;Ie<z;++Ie){const Je=Ie*U;let rt=BigInt(0);for(let ft=0;ft<U;++ft){const vt=Je+ft;xe[vt]===0n?ze[vt]=BigInt(1):(ze[vt]=rt,rt+=xe[vt])}}return{data:ze,dims:T.dims}}function We(T,z=null){const{input_ids:U,inputs_embeds:xe,attention_mask:ze}=T,{data:Ie,dims:Je}=$e(ze);let rt=new C.Tensor("int64",Ie,Je);if(z){const ft=-(U??xe).dims.at(1);rt=rt.slice(null,[ft,null])}return rt}function Se(T,z,U,xe){if(U.past_key_values){const ze=Object.values(U.past_key_values)[0].dims.at(-2),{input_ids:Ie,attention_mask:Je}=U;if(!(Je&&Je.dims[1]>Ie.dims[1])){if(ze<Ie.dims[1])U.input_ids=Ie.slice(null,[ze,null]);else if(T.config.image_token_index!=null&&Ie.data.some(rt=>rt==T.config.image_token_index)){const rt=T.config.num_image_tokens;if(!rt)throw new Error("`num_image_tokens` is missing in the model configuration.");const ft=Ie.dims[1]-(ze-rt);U.input_ids=Ie.slice(null,[-ft,null]),U.attention_mask=(0,C.ones)([1,ze+ft])}}}return U}function Ne(T,z,U,xe){return U.past_key_values&&(z=z.map(ze=>[ze.at(-1)])),{...U,decoder_input_ids:Ce(z)}}function He(T,...z){return T.config.is_encoder_decoder?Ne(T,...z):Se(T,...z)}function Be(T,z,U,xe){const ze=!!U.past_key_values;return xe.guidance_scale!==null&&xe.guidance_scale>1&&(ze?U.input_ids=(0,C.cat)([U.input_ids,U.input_ids],0):(U.input_ids=(0,C.cat)([U.input_ids,(0,C.full_like)(U.input_ids,BigInt(xe.pad_token_id))],0),U.attention_mask=(0,C.cat)([U.attention_mask,(0,C.full_like)(U.attention_mask,0n)],0))),(ze||!U.pixel_values)&&(U.pixel_values=(0,C.full)([0,0,3,384,384],1)),ze&&(U.images_seq_mask=new C.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),U.images_emb_mask=new C.Tensor("bool",new Array(0).fill(!1),[1,1,0])),U}class le extends v.Callable{constructor(U,xe,ze){super();Te(this,"main_input_name","input_ids");Te(this,"forward_params",["input_ids","attention_mask"]);this.config=U,this.sessions=xe,this.configs=ze;const Ie=L.get(this.constructor),Je=D.get(Ie);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Je){case G.DecoderOnly:this.can_generate=!0,this._forward=K,this._prepare_inputs_for_generation=Se;break;case G.Seq2Seq:case G.Vision2Seq:case G.Musicgen:this.can_generate=!0,this._forward=je,this._prepare_inputs_for_generation=Ne;break;case G.EncoderDecoder:this._forward=je;break;case G.ImageTextToText:this.can_generate=!0,this._forward=ge,this._prepare_inputs_for_generation=He;break;case G.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=Be;break;default:this._forward=fe;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var xe;const U=[];for(const ze of Object.values(this.sessions))(xe=ze==null?void 0:ze.handler)!=null&&xe.dispose&&U.push(ze.handler.dispose());return await Promise.all(U)}static async from_pretrained(U,{progress_callback:xe=null,config:ze=null,cache_dir:Ie=null,local_files_only:Je=!1,revision:rt="main",model_file_name:ft=null,subfolder:vt="onnx",device:Jt=null,dtype:Gt=null,use_external_data_format:Bt=null,session_options:Yt={}}={}){let cr={progress_callback:xe,config:ze,cache_dir:Ie,local_files_only:Je,revision:rt,model_file_name:ft,subfolder:vt,device:Jt,dtype:Gt,use_external_data_format:Bt,session_options:Yt};const pr=L.get(this),tr=D.get(pr);ze=cr.config=await o.AutoConfig.from_pretrained(U,cr);let gr;if(tr===G.DecoderOnly)gr=await Promise.all([se(U,{model:cr.model_file_name??"model"},cr),ee(U,{generation_config:"generation_config.json"},cr)]);else if(tr===G.Seq2Seq||tr===G.Vision2Seq)gr=await Promise.all([se(U,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},cr),ee(U,{generation_config:"generation_config.json"},cr)]);else if(tr===G.MaskGeneration)gr=await Promise.all([se(U,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},cr)]);else if(tr===G.EncoderDecoder)gr=await Promise.all([se(U,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},cr)]);else if(tr===G.ImageTextToText){const qr={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};ze.is_encoder_decoder&&(qr.model="encoder_model"),gr=await Promise.all([se(U,qr,cr),ee(U,{generation_config:"generation_config.json"},cr)])}else if(tr===G.Musicgen)gr=await Promise.all([se(U,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},cr),ee(U,{generation_config:"generation_config.json"},cr)]);else if(tr===G.MultiModality)gr=await Promise.all([se(U,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},cr),ee(U,{generation_config:"generation_config.json"},cr)]);else{if(tr!==G.EncoderOnly){const qr=pr??(ze==null?void 0:ze.model_type);qr!=="custom"&&console.warn(`Model type for '${qr}' not found, assuming encoder-only architecture. Please report this at ${b.GITHUB_ISSUE_URL}.`)}gr=await Promise.all([se(U,{model:cr.model_file_name??"model"},cr)])}return new this(ze,...gr)}async _call(U){return await this.forward(U)}async forward(U){return await this._forward(this,U)}get generation_config(){var U;return((U=this.configs)==null?void 0:U.generation_config)??null}_get_logits_warper(U){const xe=new x.LogitsProcessorList;return U.temperature!==null&&U.temperature!==1&&xe.push(new x.TemperatureLogitsWarper(U.temperature)),U.top_k!==null&&U.top_k!==0&&xe.push(new x.TopKLogitsWarper(U.top_k)),U.top_p!==null&&U.top_p<1&&xe.push(new x.TopPLogitsWarper(U.top_p)),xe}_get_logits_processor(U,xe,ze=null){const Ie=new x.LogitsProcessorList;if(U.repetition_penalty!==null&&U.repetition_penalty!==1&&Ie.push(new x.RepetitionPenaltyLogitsProcessor(U.repetition_penalty)),U.no_repeat_ngram_size!==null&&U.no_repeat_ngram_size>0&&Ie.push(new x.NoRepeatNGramLogitsProcessor(U.no_repeat_ngram_size)),U.bad_words_ids!==null&&Ie.push(new x.NoBadWordsLogitsProcessor(U.bad_words_ids,U.eos_token_id)),U.min_length!==null&&U.eos_token_id!==null&&U.min_length>0&&Ie.push(new x.MinLengthLogitsProcessor(U.min_length,U.eos_token_id)),U.min_new_tokens!==null&&U.eos_token_id!==null&&U.min_new_tokens>0&&Ie.push(new x.MinNewTokensLengthLogitsProcessor(xe,U.min_new_tokens,U.eos_token_id)),U.forced_bos_token_id!==null&&Ie.push(new x.ForcedBOSTokenLogitsProcessor(U.forced_bos_token_id)),U.forced_eos_token_id!==null&&Ie.push(new x.ForcedEOSTokenLogitsProcessor(U.max_length,U.forced_eos_token_id)),U.begin_suppress_tokens!==null){const Je=xe>1||U.forced_bos_token_id===null?xe:xe+1;Ie.push(new x.SuppressTokensAtBeginLogitsProcessor(U.begin_suppress_tokens,Je))}return U.guidance_scale!==null&&U.guidance_scale>1&&Ie.push(new x.ClassifierFreeGuidanceLogitsProcessor(U.guidance_scale)),ze!==null&&Ie.extend(ze),Ie}_prepare_generation_config(U,xe,ze=k.GenerationConfig){const Ie={...this.config};for(const rt of["decoder","generator","text_config"])rt in Ie&&Object.assign(Ie,Ie[rt]);const Je=new ze(Ie);return Object.assign(Je,this.generation_config??{}),U&&Object.assign(Je,U),xe&&Object.assign(Je,(0,P.pick)(xe,Object.getOwnPropertyNames(Je))),Je}_get_stopping_criteria(U,xe=null){const ze=new oe.StoppingCriteriaList;return U.max_length!==null&&ze.push(new oe.MaxLengthCriteria(U.max_length,this.config.max_position_embeddings??null)),U.eos_token_id!==null&&ze.push(new oe.EosTokenCriteria(U.eos_token_id)),xe&&ze.extend(xe),ze}_validate_model_class(){if(!this.can_generate){const U=[Vp,lc,ac,jp],xe=L.get(this.constructor),ze=new Set,Ie=this.config.model_type;for(const rt of U){const ft=rt.get(Ie);ft&&ze.add(ft[0])}let Je=`The current model class (${xe}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw ze.size>0&&(Je+=` Please use the following class instead: ${[...ze].join(", ")}`),Error(Je)}}prepare_inputs_for_generation(...U){return this._prepare_inputs_for_generation(this,...U)}_update_model_kwargs_for_generation({generated_input_ids:U,outputs:xe,model_inputs:ze,is_encoder_decoder:Ie}){return ze.past_key_values=this.getPastKeyValues(xe,ze.past_key_values),ze.input_ids=new C.Tensor("int64",U.flat(),[U.length,1]),Ie||(ze.attention_mask=(0,C.cat)([ze.attention_mask,(0,C.ones)([ze.attention_mask.dims[0],1])],1)),ze.position_ids=null,ze}_prepare_model_inputs({inputs:U,bos_token_id:xe,model_kwargs:ze}){const Ie=(0,P.pick)(ze,this.forward_params),Je=this.main_input_name;if(Je in Ie){if(U)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else Ie[Je]=U;return{inputs_tensor:Ie[Je],model_inputs:Ie,model_input_name:Je}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:U,model_inputs:xe,model_input_name:ze,generation_config:Ie}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!xe.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:rt,pixel_values:ft,attention_mask:vt,...Jt}=xe,Gt=await this._prepare_inputs_embeds(xe);xe={...Jt,...(0,P.pick)(Gt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Je}=await fe(this,xe);if(Ie.guidance_scale!==null&&Ie.guidance_scale>1)Je=(0,C.cat)([Je,(0,C.full_like)(Je,0)],0),"attention_mask"in xe&&(xe.attention_mask=(0,C.cat)([xe.attention_mask,(0,C.zeros_like)(xe.attention_mask)],0));else if(xe.decoder_input_ids){const rt=Ce(xe.decoder_input_ids).dims[0];if(rt!==Je.dims[0]){if(Je.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Je.dims[0]}) than the decoder inputs (${rt}).`);Je=(0,C.cat)(Array.from({length:rt},()=>Je),0)}}return xe.encoder_outputs=Je,xe}_prepare_decoder_input_ids_for_generation({batch_size:U,model_input_name:xe,model_kwargs:ze,decoder_start_token_id:Ie,bos_token_id:Je,generation_config:rt}){let{decoder_input_ids:ft,...vt}=ze;if(!(ft instanceof C.Tensor)){if(ft)Array.isArray(ft[0])||(ft=Array.from({length:U},()=>ft));else if(Ie??(Ie=Je),this.config.model_type==="musicgen")ft=Array.from({length:U*this.config.decoder.num_codebooks},()=>[Ie]);else if(Array.isArray(Ie)){if(Ie.length!==U)throw new Error(`\`decoder_start_token_id\` expcted to have length ${U} but got ${Ie.length}`);ft=Ie}else ft=Array.from({length:U},()=>[Ie]);ft=Ce(ft)}return ze.decoder_attention_mask=(0,C.ones_like)(ft),{input_ids:ft,model_inputs:vt}}async generate({inputs:U=null,generation_config:xe=null,logits_processor:ze=null,stopping_criteria:Ie=null,streamer:Je=null,...rt}){this._validate_model_class(),xe=this._prepare_generation_config(xe,rt);let{inputs_tensor:ft,model_inputs:vt,model_input_name:Jt}=this._prepare_model_inputs({inputs:U,model_kwargs:rt});const Gt=this.config.is_encoder_decoder;Gt&&("encoder_outputs"in vt||(vt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:ft,model_inputs:vt,model_input_name:Jt,generation_config:xe})));let Bt;Gt?{input_ids:Bt,model_inputs:vt}=this._prepare_decoder_input_ids_for_generation({batch_size:vt[Jt].dims.at(0),model_input_name:Jt,model_kwargs:vt,decoder_start_token_id:xe.decoder_start_token_id,bos_token_id:xe.bos_token_id,generation_config:xe}):Bt=vt[Jt];let Yt=Bt.dims.at(-1);xe.max_new_tokens!==null&&(xe.max_length=Yt+xe.max_new_tokens);const cr=this._get_logits_processor(xe,Yt,ze),pr=this._get_stopping_criteria(xe,Ie),tr=vt[Jt].dims.at(0),gr=re.LogitsSampler.getSampler(xe),qr=new Array(tr).fill(0),jr=Bt.tolist();Je&&Je.put(jr);let yr,Rr={};for(;;){if(vt=this.prepare_inputs_for_generation(jr,vt,xe),yr=await this.forward(vt),xe.output_attentions&&xe.return_dict_in_generate){const Ys=this.getAttentions(yr);for(const Vn in Ys)Vn in Rr||(Rr[Vn]=[]),Rr[Vn].push(Ys[Vn])}const _s=yr.logits.slice(null,-1,null),hn=cr(jr,_s),Zi=[];for(let Ys=0;Ys<hn.dims.at(0);++Ys){const Vn=hn[Ys],yc=await gr(Vn);for(const[wc,Pa]of yc){const Ca=BigInt(wc);qr[Ys]+=Pa,jr[Ys].push(Ca),Zi.push([Ca]);break}}if(Je&&Je.put(Zi),pr(jr).every(Ys=>Ys))break;vt=this._update_model_kwargs_for_generation({generated_input_ids:Zi,outputs:yr,model_inputs:vt,is_encoder_decoder:Gt})}Je&&Je.end();const Xr=this.getPastKeyValues(yr,vt.past_key_values,!0),zs=new C.Tensor("int64",jr.flat(),[jr.length,jr[0].length]);if(xe.return_dict_in_generate)return{sequences:zs,past_key_values:Xr,...Rr};for(const _s of Object.values(yr))_s.location==="gpu-buffer"&&_s.dispose();return zs}getPastKeyValues(U,xe,ze=!1){const Ie=Object.create(null);for(const Je in U)if(Je.startsWith("present")){const rt=Je.replace("present","past_key_values"),ft=Je.includes("encoder");if(ft&&xe?Ie[rt]=xe[rt]:Ie[rt]=U[Je],xe&&(!ft||ze)){const vt=xe[rt];vt.location==="gpu-buffer"&&vt.dispose()}}return Ie}getAttentions(U){const xe={};for(const ze of["cross_attentions","encoder_attentions","decoder_attentions"])for(const Ie in U)Ie.startsWith(ze)&&(ze in xe||(xe[ze]=[]),xe[ze].push(U[Ie]));return xe}addPastKeyValues(U,xe){var ze,Ie,Je;if(xe)Object.assign(U,xe);else{const rt=this.sessions.decoder_model_merged??this.sessions.model,ft=((ze=rt==null?void 0:rt.config)==null?void 0:ze.kv_cache_dtype)??"float32",vt=ft==="float16"?new Uint16Array:[],Jt=((Je=(Ie=U[this.main_input_name]??U.attention_mask)==null?void 0:Ie.dims)==null?void 0:Je[0])??1,Gt=(0,o.getKeyValueShapes)(this.config,{batch_size:Jt});for(const Bt in Gt)U[Bt]=new C.Tensor(ft,vt,Gt[Bt])}}async encode_image({pixel_values:U}){const xe=(await he(this.sessions.vision_encoder,{pixel_values:U})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${xe.dims[1]}).`),this.config.num_image_tokens=xe.dims[1]),xe}async encode_text({input_ids:U}){return(await he(this.sessions.embed_tokens,{input_ids:U})).inputs_embeds}}class Fe{}class Re extends Fe{constructor({last_hidden_state:z,hidden_states:U=null,attentions:xe=null}){super(),this.last_hidden_state=z,this.hidden_states=U,this.attentions=xe}}class ye extends le{}class Ae extends ye{}class Ze extends ye{async _call(z){return new Es(await super._call(z))}}class Ye extends ye{async _call(z){return new ar(await super._call(z))}}class Qe extends ye{async _call(z){return new ks(await super._call(z))}}class Ue extends ye{async _call(z){return new Os(await super._call(z))}}class it extends le{}class ut extends it{}class _t extends le{}class ht extends _t{}class gt extends _t{async _call(z){return new Es(await super._call(z))}}class j extends _t{async _call(z){return new ar(await super._call(z))}}class ae extends _t{async _call(z){return new ks(await super._call(z))}}class Q extends _t{async _call(z){return new Os(await super._call(z))}}class de extends le{}class Oe extends de{}class et extends de{async _call(z){return new Es(await super._call(z))}}class ot extends de{async _call(z){return new ar(await super._call(z))}}class ct extends de{async _call(z){return new ks(await super._call(z))}}class Ft extends de{async _call(z){return new Os(await super._call(z))}}class Tt extends le{}class kt extends Tt{}class Ct extends Tt{async _call(z){return new Es(await super._call(z))}}class hr extends Tt{async _call(z){return new ar(await super._call(z))}}class Cr extends Tt{async _call(z){return new ks(await super._call(z))}}class as extends Tt{async _call(z){return new Os(await super._call(z))}}class Gr extends le{}class Bs extends Gr{}class si extends Gr{async _call(z){return new Es(await super._call(z))}}class ni extends Gr{async _call(z){return new ar(await super._call(z))}}class On extends Gr{async _call(z){return new ks(await super._call(z))}}class Vi extends Gr{async _call(z){return new Os(await super._call(z))}}class jt extends le{}class an extends jt{}class zn extends jt{async _call(z){return new Es(await super._call(z))}}class ii extends jt{async _call(z){return new ar(await super._call(z))}}class Mi extends jt{async _call(z){return new ks(await super._call(z))}}class oi extends jt{async _call(z){return new Os(await super._call(z))}}class ln extends le{}class ai extends ln{}class li extends ln{async _call(z){return new Es(await super._call(z))}}class Ln extends ln{async _call(z){return new ar(await super._call(z))}}class Ks extends ln{async _call(z){return new ks(await super._call(z))}}class at extends ln{async _call(z){return new Os(await super._call(z))}}class bt extends le{}class Ot extends bt{}class fs extends bt{async _call(z){return new ar(await super._call(z))}}class ci extends bt{async _call(z){return new ks(await super._call(z))}}class Dn extends bt{async _call(z){return new Os(await super._call(z))}}class Br extends bt{async _call(z){return new Es(await super._call(z))}}class Is extends le{}class Yr extends Is{}class Mn extends Is{async _call(z){return new Es(await super._call(z))}}class Sr extends Is{async _call(z){return new ar(await super._call(z))}}class Wi extends Is{async _call(z){return new ks(await super._call(z))}}class ui extends le{}class Jo extends ui{}class po extends ui{async _call(z){return new Es(await super._call(z))}}class ho extends ui{async _call(z){return new ar(await super._call(z))}}class mo extends ui{async _call(z){return new Os(await super._call(z))}}class jn extends le{}class fo extends jn{}class Zo extends jn{async _call(z){return new Es(await super._call(z))}}class di extends jn{async _call(z){return new ar(await super._call(z))}}class cn extends jn{async _call(z){return new ks(await super._call(z))}}class Bn extends jn{async _call(z){return new Os(await super._call(z))}}class Rn extends le{}class xi extends Rn{}class Gi extends Rn{async _call(z){return new Es(await super._call(z))}}class qi extends Rn{async _call(z){return new ar(await super._call(z))}}class Ki extends Rn{async _call(z){return new Os(await super._call(z))}}class Dt extends le{}class Hi extends Dt{}class go extends Dt{async _call(z){return new ar(await super._call(z))}}class _o extends Dt{async _call(z){return new Os(await super._call(z))}}class yo extends Dt{async _call(z){return new Es(await super._call(z))}}class Xi extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class wo extends Xi{}class Qi extends Xi{}class Yi extends le{}class Mr extends Yi{}class Ee extends Yi{}class I extends le{}class J extends I{}class ce extends I{}class ve extends le{}class Pe extends ve{}class qe extends ve{}class lt extends ve{async _call(z){return new ar(await super._call(z))}}class mt extends le{}class pt extends mt{}class xt extends mt{}class Qt extends mt{async _call(z){return new ar(await super._call(z))}}class xr extends mt{}class nr extends le{}class Dr extends nr{}class er extends nr{}class mr extends le{}class Hs extends mr{}class gs extends mr{}class De extends le{}class Tr extends De{}class vs extends De{async _call(z){return new Es(await super._call(z))}}class Xs extends De{async _call(z){return new ar(await super._call(z))}}class un extends De{async _call(z){return new ks(await super._call(z))}}class Kt extends De{async _call(z){return new Os(await super._call(z))}}class ts extends le{}class Gs extends ts{}class dr extends ts{async _call(z){return new Es(await super._call(z))}}class kr extends ts{async _call(z){return new ar(await super._call(z))}}class yt extends ts{async _call(z){return new ks(await super._call(z))}}class ir extends ts{async _call(z){return new Os(await super._call(z))}}class Hr extends le{}class xn extends Hr{}class Tn extends Hr{async _call(z){return new Es(await super._call(z))}}class At extends Hr{async _call(z){return new ar(await super._call(z))}}class ea extends Hr{async _call(z){return new ks(await super._call(z))}}class tt extends Hr{async _call(z){return new Os(await super._call(z))}}class $t extends le{}class Ha extends $t{}class Jc extends $t{}class Xa extends le{constructor(){super(...arguments);Te(this,"requires_attention_mask",!1);Te(this,"main_input_name","input_features");Te(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class bo extends Xa{}class or extends Xa{_prepare_generation_config(z,U){return super._prepare_generation_config(z,U,H.WhisperGenerationConfig)}_retrieve_init_tokens(z){const U=[z.decoder_start_token_id];let xe=z.language;const ze=z.task;if(z.is_multilingual){xe||(console.warn("No language specified - defaulting to English (en)."),xe="en");const Je=`<|${(0,te.whisper_language_to_code)(xe)}|>`;U.push(z.lang_to_id[Je]),U.push(z.task_to_id[ze??"transcribe"])}else if(xe||ze)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!z.return_timestamps&&z.no_timestamps_token_id&&U.at(-1)!==z.no_timestamps_token_id?U.push(z.no_timestamps_token_id):z.return_timestamps&&U.at(-1)===z.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),U.pop()),U.filter(Ie=>Ie!=null)}async generate({inputs:z=null,generation_config:U=null,logits_processor:xe=null,stopping_criteria:ze=null,...Ie}){U=this._prepare_generation_config(U,Ie);const Je=Ie.decoder_input_ids??this._retrieve_init_tokens(U);if(U.return_timestamps&&(xe??(xe=new x.LogitsProcessorList),xe.push(new x.WhisperTimeStampLogitsProcessor(U,Je))),U.begin_suppress_tokens&&(xe??(xe=new x.LogitsProcessorList),xe.push(new x.SuppressTokensAtBeginLogitsProcessor(U.begin_suppress_tokens,Je.length))),U.return_token_timestamps){if(!U.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");U.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),U.output_attentions=!0,U.return_dict_in_generate=!0}const rt=await super.generate({inputs:z,generation_config:U,logits_processor:xe,decoder_input_ids:Je,...Ie});return U.return_token_timestamps&&(rt.token_timestamps=this._extract_token_timestamps(rt,U.alignment_heads,U.num_frames)),rt}_extract_token_timestamps(z,U,xe=null,ze=.02){if(!z.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");xe==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let Ie=this.config.median_filter_width;Ie===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),Ie=7);const Je=z.cross_attentions,rt=Array.from({length:this.config.decoder_layers},(pr,tr)=>(0,C.cat)(Je.map(gr=>gr[tr]),2)),ft=(0,C.stack)(U.map(([pr,tr])=>{if(pr>=rt.length)throw new Error(`Layer index ${pr} is out of bounds for cross attentions (length ${rt.length}).`);return xe?rt[pr].slice(null,tr,null,[0,xe]):rt[pr].slice(null,tr)})).transpose(1,0,2,3),[vt,Jt]=(0,C.std_mean)(ft,-2,0,!0),Gt=ft.clone();for(let pr=0;pr<Gt.dims[0];++pr){const tr=Gt[pr];for(let gr=0;gr<tr.dims[0];++gr){const qr=tr[gr],jr=vt[pr][gr][0].data,yr=Jt[pr][gr][0].data;for(let Rr=0;Rr<qr.dims[0];++Rr){let Xr=qr[Rr].data;for(let zs=0;zs<Xr.length;++zs)Xr[zs]=(Xr[zs]-yr[zs])/jr[zs];Xr.set((0,X.medianFilter)(Xr,Ie))}}}const Bt=[(0,C.mean)(Gt,1)],Yt=z.sequences.dims,cr=new C.Tensor("float32",new Float32Array(Yt[0]*Yt[1]),Yt);for(let pr=0;pr<Yt[0];++pr){const tr=Bt[pr].neg().squeeze_(0),[gr,qr]=(0,X.dynamic_time_warping)(tr.tolist()),jr=Array.from({length:gr.length-1},(Xr,zs)=>gr[zs+1]-gr[zs]),yr=(0,P.mergeArrays)([1],jr).map(Xr=>!!Xr),Rr=[];for(let Xr=0;Xr<yr.length;++Xr)yr[Xr]&&Rr.push(qr[Xr]*ze);cr[pr].data.set(Rr,1)}return cr}}class Qa extends le{constructor(){super(...arguments);Te(this,"main_input_name","pixel_values");Te(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Ya extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class ta extends Ya{_merge_input_ids_with_image_features({inputs_embeds:z,image_features:U,input_ids:xe,attention_mask:ze}){const Ie=this.config.image_token_index,rt=xe.tolist().map(Bt=>Bt.findIndex(Yt=>Yt==Ie)),ft=rt.every(Bt=>Bt===-1),vt=rt.every(Bt=>Bt!==-1);if(!ft&&!vt)throw new Error("Every input should contain either 0 or 1 image token.");if(ft)return{inputs_embeds:z,attention_mask:ze};const Jt=[],Gt=[];for(let Bt=0;Bt<rt.length;++Bt){const Yt=rt[Bt],cr=z[Bt],pr=U[Bt],tr=ze[Bt];Jt.push((0,C.cat)([cr.slice([0,Yt]),pr,cr.slice([Yt+1,cr.dims[0]])],0)),Gt.push((0,C.cat)([tr.slice([0,Yt]),(0,C.ones)([pr.dims[0]]),tr.slice([Yt+1,tr.dims[0]])],0))}return{inputs_embeds:(0,C.stack)(Jt,0),attention_mask:(0,C.stack)(Gt,0)}}}class Zc extends ta{}class eu extends ta{}class Qs extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Te(this,"main_input_name","inputs_embeds")}}class tu extends Qs{_merge_input_ids_with_image_features({inputs_embeds:z,image_features:U,input_ids:xe,attention_mask:ze}){return{inputs_embeds:(0,C.cat)([U,z],1),attention_mask:(0,C.cat)([(0,C.ones)(U.dims.slice(0,2)),ze],1)}}async _prepare_inputs_embeds({input_ids:z,pixel_values:U,inputs_embeds:xe,attention_mask:ze}){if(!z&&!U)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let Ie,Je;return z&&(Ie=await this.encode_text({input_ids:z})),U&&(Je=await this.encode_image({pixel_values:U})),Ie&&Je?{inputs_embeds:xe,attention_mask:ze}=this._merge_input_ids_with_image_features({inputs_embeds:Ie,image_features:Je,input_ids:z,attention_mask:ze}):xe=Ie||Je,{inputs_embeds:xe,attention_mask:ze}}async forward({input_ids:z,pixel_values:U,attention_mask:xe,decoder_input_ids:ze,decoder_attention_mask:Ie,encoder_outputs:Je,past_key_values:rt,inputs_embeds:ft,decoder_inputs_embeds:vt}){if(ft||({inputs_embeds:ft,attention_mask:xe}=await this._prepare_inputs_embeds({input_ids:z,pixel_values:U,inputs_embeds:ft,attention_mask:xe})),!Je){let{last_hidden_state:Bt}=await fe(this,{inputs_embeds:ft,attention_mask:xe});Je=Bt}if(!vt){if(!ze)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");vt=await this.encode_text({input_ids:ze})}return await K(this,{inputs_embeds:vt,attention_mask:Ie,encoder_attention_mask:xe,encoder_hidden_states:Je,past_key_values:rt},!0)}}class ru extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class Nn extends ru{async encode_image({pixel_values:z,pixel_attention_mask:U}){return(await he(this.sessions.vision_encoder,{pixel_values:z,pixel_attention_mask:U})).image_features}_merge_input_ids_with_image_features(z){const U=z.image_features.dims.at(-1),xe=z.image_features.view(-1,U);return me({image_token_id:this.config.image_token_id,...z,image_features:xe})}}class Ti extends le{}class su extends Ti{}class sm extends Ti{static async from_pretrained(z,U={}){return U.model_file_name??(U.model_file_name="text_model"),super.from_pretrained(z,U)}}class nu extends Ti{static async from_pretrained(z,U={}){return U.model_file_name??(U.model_file_name="text_model"),super.from_pretrained(z,U)}}class nm extends Ti{static async from_pretrained(z,U={}){return U.model_file_name??(U.model_file_name="vision_model"),super.from_pretrained(z,U)}}class iu extends Ti{static async from_pretrained(z,U={}){return U.model_file_name??(U.model_file_name="vision_model"),super.from_pretrained(z,U)}}class Ja extends le{}class ou extends Ja{}class au extends Ja{static async from_pretrained(z,U={}){return U.model_file_name??(U.model_file_name="text_model"),super.from_pretrained(z,U)}}class lu extends Ti{static async from_pretrained(z,U={}){return U.model_file_name??(U.model_file_name="vision_model"),super.from_pretrained(z,U)}}class dn extends le{}class cu extends dn{}class ra extends le{}class uu extends ra{async forward(z){const U=!z.input_ids,xe=!z.pixel_values;if(U&&xe)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(U&&(z.input_ids=(0,C.ones)([z.pixel_values.dims[0],1])),xe){const{image_size:vt}=this.config.vision_config;z.pixel_values=(0,C.full)([0,3,vt,vt],0)}const{text_embeddings:ze,image_embeddings:Ie,l2norm_text_embeddings:Je,l2norm_image_embeddings:rt}=await super.forward(z),ft={};return U||(ft.text_embeddings=ze,ft.l2norm_text_embeddings=Je),xe||(ft.image_embeddings=Ie,ft.l2norm_image_embeddings=rt),ft}}class du extends ra{static async from_pretrained(z,U={}){return U.model_file_name??(U.model_file_name="text_model"),super.from_pretrained(z,U)}}class pu extends ra{static async from_pretrained(z,U={}){return U.model_file_name??(U.model_file_name="vision_model"),super.from_pretrained(z,U)}}class Za extends le{}class hu extends Za{}class mu extends Za{}class el extends le{}class fu extends el{}class im extends el{}class tn extends le{}class gu extends tn{}class sa extends tn{}class na extends le{}class pn extends na{}class _u extends na{}class tl extends le{}class yu extends tl{}class wu extends tl{}class rl extends le{}class bu extends rl{}class vu extends rl{}class sl extends le{}class Mu extends sl{}class xu extends sl{}class rn extends le{}class Tu extends rn{}class ku extends rn{}class nl extends le{}class Eu extends nl{}class Pu extends nl{}class il extends le{}class Cu extends il{}class Su extends il{}class ol extends le{}class Au extends ol{}class al extends ol{}class ia extends le{}class Iu extends ia{}class $u extends ia{}class oa extends le{}class om extends oa{}class Fu extends oa{}class ll extends le{}class Ou extends ll{}class zu extends ll{}class Ji extends le{}class Lu extends Ji{}class Du extends Ji{}class aa extends le{}class ju extends aa{}class Bu extends aa{}class cl extends le{}class Ru extends cl{}class am extends cl{}class Nu extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class Uu extends Nu{get_rope_index(z,U,xe,ze){const{vision_config:Ie,image_token_id:Je,video_token_id:rt,vision_start_token_id:ft}=this.config,vt=Ie.spatial_merge_size??2,Jt=[];if(U||xe){let Gt=z.tolist();ze||(ze=(0,C.ones_like)(z));const Bt=ze.tolist(),Yt=Array.from({length:3},qr=>Array.from({length:z.dims[0]},jr=>Array.from({length:z.dims[1]},yr=>1))),cr=U?U.tolist():[],pr=xe?xe.tolist():[];let tr=0,gr=0;for(let qr=0;qr<Gt.length;++qr){const jr=Gt[qr].filter((Nr,ls)=>Bt[qr][ls]==1),Rr=jr.reduce((Nr,ls,Pi)=>(ls==ft&&Nr.push(Pi),Nr),[]).map(Nr=>jr[Nr+1]),Xr=Rr.filter(Nr=>Nr==Je).length,zs=Rr.filter(Nr=>Nr==rt).length;let _s=[],hn=0,Zi=Xr,Sh=zs;for(let Nr=0;Nr<Rr.length;++Nr){const ls=jr.findIndex((fi,Ps)=>Ps>hn&&fi==Je),Pi=jr.findIndex((fi,Ps)=>Ps>hn&&fi==rt),Ci=Zi>0&&ls!==-1?ls:jr.length+1,Si=Sh>0&&Pi!==-1?Pi:jr.length+1;let Io,bc,vc,Ah;Ci<Si?([bc,vc,Ah]=cr[tr],++tr,--Zi,Io=Ci):([bc,vc,Ah]=pr[gr],++gr,--Sh,Io=Si);const[Ih,Mc,xc]=[Number(bc),Math.floor(Number(vc)/vt),Math.floor(Number(Ah)/vt)],Tc=Io-hn,Sa=_s.length>0?(0,X.max)(_s.at(-1))[0]+1:0;_s.push(Array.from({length:3*Tc},(fi,Ps)=>Sa+Ps%Tc));const kc=Tc+Sa,Aa=Ih*Mc*xc,mg=Array.from({length:Aa},(fi,Ps)=>kc+Math.floor(Ps/(Mc*xc))),Vm=Array.from({length:Aa},(fi,Ps)=>kc+Math.floor(Ps/xc)%Mc),$h=Array.from({length:Aa},(fi,Ps)=>kc+Ps%xc);_s.push([mg,Vm,$h].flat()),hn=Io+Aa}if(hn<jr.length){const Nr=_s.length>0?(0,X.max)(_s.at(-1))[0]+1:0,ls=jr.length-hn;_s.push(Array.from({length:3*ls},(Pi,Ci)=>Nr+Ci%ls))}const Ys=_s.reduce((Nr,ls)=>Nr+ls.length,0),Vn=new Array(Ys);let yc=0;for(let Nr=0;Nr<3;++Nr)for(let ls=0;ls<_s.length;++ls){const Pi=_s[ls],Ci=Pi.length/3;for(let Si=Nr*Ci;Si<(Nr+1)*Ci;++Si)Vn[yc++]=Pi[Si]}let wc=0;const Pa=Bt[qr];for(let Nr=0;Nr<Pa.length;++Nr)if(Pa[Nr]==1){for(let ls=0;ls<3;++ls)Yt[ls][qr][Nr]=Vn[ls*Ys/3+wc];++wc}const Ca=(0,X.max)(Vn)[0];Jt.push(Ca+1-Gt[qr].length)}return[new C.Tensor("int64",Yt.flat(1/0),[3,z.dims[0],z.dims[1]]),new C.Tensor("int64",Jt,[Jt.length,1])]}else if(ze){const{data:Gt,dims:Bt}=$e(ze),Yt=BigInt64Array.from({length:3*Gt.length},(pr,tr)=>Gt[tr%Gt.length]),cr=Array.from({length:Bt[0]},(pr,tr)=>(0,X.max)(Gt.subarray(Bt[1]*tr,Bt[1]*(tr+1)))[0]+1+Bt[1]);return[new C.Tensor("int64",Yt,[3,...Bt]),new C.Tensor("int64",cr,[cr.length,1])]}else{const[Gt,Bt]=z.dims,Yt=BigInt64Array.from({length:3*Gt*Bt},(cr,pr)=>BigInt(Math.floor(pr%Bt/Gt)));return[new C.Tensor("int64",Yt,[3,...z.dims]),(0,C.zeros)([Gt,1])]}}async encode_image({pixel_values:z,image_grid_thw:U}){return(await he(this.sessions.vision_encoder,{pixel_values:z,grid_thw:U})).image_features}_merge_input_ids_with_image_features(z){return me({image_token_id:this.config.image_token_id,...z})}prepare_inputs_for_generation(z,U,xe){if(U.attention_mask&&!U.position_ids)if(!U.past_key_values)[U.position_ids,U.rope_deltas]=this.get_rope_index(U.input_ids,U.image_grid_thw,U.video_grid_thw,U.attention_mask);else{U.pixel_values=null;const ze=BigInt(Object.values(U.past_key_values)[0].dims.at(-2)),Ie=U.rope_deltas.map(Je=>ze+Je);U.position_ids=(0,C.stack)([Ie,Ie,Ie],0)}return U}}class ul extends le{}class lm extends ul{}class Vu extends ul{}class fr extends le{}class Wu extends fr{}class Gu extends fr{}class dl extends le{}class qu extends dl{}class Ku extends dl{}class pl extends le{}class Hu extends pl{}class Xu extends pl{}class hl extends le{}class Qu extends hl{}class Yu extends hl{}class ml extends le{}class Ju extends ml{}class Zu extends ml{async _call(z){return new ar(await super._call(z))}}class vo extends le{}class ed extends vo{}class Mo extends le{}class td extends Mo{}class rd extends Mo{async _call(z){return new ar(await super._call(z))}}class sd extends le{}class nd extends sd{}class fl extends le{}class id extends fl{}class od extends fl{async _call(z){return new ar(await super._call(z))}}class ad extends le{}class ld extends ad{}class gl extends le{}class cd extends gl{}class ud extends gl{async _call(z){return new ar(await super._call(z))}}class dd extends le{}class pd extends dd{async _call(z){return new Ph(await super._call(z))}}class _l extends le{}class hd extends _l{}class yl extends _l{async _call(z){return new ar(await super._call(z))}}class wl extends le{}class bl extends wl{}class vl extends wl{async _call(z){return new ar(await super._call(z))}}class Ml extends le{}class md extends Ml{}class fd extends Ml{}class xl extends le{}class gd extends xl{}class _d extends xl{}class la extends le{}class yd extends la{}class wd extends la{async _call(z){return new ar(await super._call(z))}}class ca extends le{}class cm extends ca{}class bd extends ca{async _call(z){return new sn(await super._call(z))}}class Tl extends ca{async _call(z){return new vd(await super._call(z))}}class sn extends Fe{constructor({logits:z,pred_boxes:U}){super(),this.logits=z,this.pred_boxes=U}}class vd extends Fe{constructor({logits:z,pred_boxes:U,pred_masks:xe}){super(),this.logits=z,this.pred_boxes=U,this.pred_masks=xe}}class kl extends le{}class Md extends kl{}class xd extends kl{async _call(z){return new Td(await super._call(z))}}class Td extends Fe{constructor({logits:z,pred_boxes:U}){super(),this.logits=z,this.pred_boxes=U}}class El extends le{}class kd extends El{}class Ed extends El{async _call(z){return new Pd(await super._call(z))}}class Pd extends sn{}class Pl extends le{}class um extends Pl{}class Cd extends Pl{async _call(z){return new ar(await super._call(z))}}class Cl extends le{}class Sd extends Cl{}class Ad extends Cl{async _call(z){return new ar(await super._call(z))}}class Sl extends le{}class Id extends Sl{}class dm extends Sl{async _call(z){return new ar(await super._call(z))}}class Un extends le{}class pi extends Un{}class hi extends Un{async _call(z){return new ar(await super._call(z))}}class ua extends le{}class mi extends ua{}class $s extends ua{}class da extends le{}class pa extends da{}class Al extends da{}class $d extends le{}class Fd extends $d{}class ha extends le{}class ma extends ha{}class Il extends ha{}class Od extends ha{}class fa extends le{}class zd extends fa{}class ga extends le{}class _a extends ga{}class Ld extends ga{}class $l extends le{}class pm extends $l{}class Dd extends $l{}class Fl extends le{}class xo extends Fl{}class Ol extends le{}class zl extends Ol{}class jd extends Ol{async _call(z){return new ar(await super._call(z))}}class Ll extends le{}class Bd extends Ll{}class hm extends Ll{async _call(z){return new ar(await super._call(z))}}class Dl extends le{}class Rd extends Dl{}class mm extends Dl{async _call(z){return new ar(await super._call(z))}}class ya extends le{}class Nd extends ya{}class Ud extends ya{async _call(z){return new Vd(await super._call(z))}}class Vd extends Fe{constructor({logits:z,pred_boxes:U}){super(),this.logits=z,this.pred_boxes=U}}class Wd extends le{}class wa extends Wd{async get_image_embeddings({pixel_values:z}){return await fe(this,{pixel_values:z})}async forward(z){if((!z.image_embeddings||!z.image_positional_embeddings)&&(z={...z,...await this.get_image_embeddings(z)}),!z.input_labels&&z.input_points){const xe=z.input_points.dims.slice(0,-1),ze=xe.reduce((Ie,Je)=>Ie*Je,1);z.input_labels=new C.Tensor("int64",new BigInt64Array(ze).fill(1n),xe)}const U={image_embeddings:z.image_embeddings,image_positional_embeddings:z.image_positional_embeddings};return z.input_points&&(U.input_points=z.input_points),z.input_labels&&(U.input_labels=z.input_labels),z.input_boxes&&(U.input_boxes=z.input_boxes),await he(this.sessions.prompt_encoder_mask_decoder,U)}async _call(z){return new Gd(await super._call(z))}}class Gd extends Fe{constructor({iou_scores:z,pred_masks:U}){super(),this.iou_scores=z,this.pred_masks=U}}class To extends le{}class jl extends To{}class Bl extends To{}class Rl extends le{}class qd extends Rl{}class Nl extends Rl{}class ki extends le{}class Kd extends ki{}class Hd extends ki{async _call(z){return new Ei(await super._call(z))}}class fm extends ki{async _call(z){return new ar(await super._call(z))}}class Xd extends ki{async _call(z){return new ks(await super._call(z))}}class ba extends le{}class gm extends ba{}class Qd extends ba{async _call(z){return new ks(await super._call(z))}}class Yd extends le{}class Jd extends Yd{}class ko extends le{}class Zd extends ko{}class ep extends ko{async _call(z){return new Ei(await super._call(z))}}class tp extends ko{async _call(z){return new ar(await super._call(z))}}class Eo extends le{}class rp extends Eo{}class sp extends Eo{async _call(z){return new Ei(await super._call(z))}}class _m extends Eo{async _call(z){return new ar(await super._call(z))}}class np extends Eo{async _call(z){return new ks(await super._call(z))}}class va extends le{}class ip extends va{}class ym extends va{async _call(z){return new Ei(await super._call(z))}}class op extends va{async _call(z){return new ar(await super._call(z))}}class wm extends le{}class ap extends ki{}class lp extends ki{async _call(z){return new Ei(await super._call(z))}}class cp extends ki{async _call(z){return new ar(await super._call(z))}}class Po extends le{}class Ma extends Po{}class Co extends Po{async _call(z){return new Ei(await super._call(z))}}class Ul extends Po{async _call(z){return new ar(await super._call(z))}}class up extends Po{async _call(z){return new Eh(await super._call(z))}}class dp extends Po{async _call(z){return new ks(await super._call(z))}}class xa extends le{}class bm extends xa{}class Vl extends xa{}class pp extends xa{async generate_speech(z,U,{threshold:xe=.5,minlenratio:ze=0,maxlenratio:Ie=20,vocoder:Je=null}={}){const rt={input_ids:z},{encoder_outputs:ft,encoder_attention_mask:vt}=await fe(this,rt),Jt=ft.dims[1]/this.config.reduction_factor,Gt=Math.floor(Jt*Ie),Bt=Math.floor(Jt*ze),Yt=this.config.num_mel_bins;let cr=[],pr=null,tr=null,gr=0;for(;;){++gr;const yr=ke(!!tr);let Rr;tr?Rr=tr.output_sequence_out:Rr=new C.Tensor("float32",new Float32Array(Yt),[1,1,Yt]);let Xr={use_cache_branch:yr,output_sequence:Rr,encoder_attention_mask:vt,speaker_embeddings:U,encoder_hidden_states:ft};this.addPastKeyValues(Xr,pr),tr=await he(this.sessions.decoder_model_merged,Xr),pr=this.getPastKeyValues(tr,pr);const{prob:zs,spectrum:_s}=tr;if(cr.push(_s),gr>=Bt&&(Array.from(zs.data).filter(hn=>hn>=xe).length>0||gr>=Gt))break}const qr=(0,C.cat)(cr),{waveform:jr}=await he(Je.sessions.model,{spectrogram:qr});return{spectrogram:qr,waveform:jr}}}class hp extends le{constructor(){super(...arguments);Te(this,"main_input_name","spectrogram")}}class mp extends le{}class vm extends mp{}class Wl extends le{}class Gl extends Wl{}class fp extends Wl{}class ql extends le{}class gp extends ql{}class Mm extends ql{}class Kl extends le{}class _p extends Kl{}class xm extends Kl{}class Ta extends le{}class yp extends Ta{}class wp extends Ta{static async from_pretrained(z,U={}){return U.model_file_name??(U.model_file_name="text_model"),super.from_pretrained(z,U)}}class bp extends Ta{static async from_pretrained(z,U={}){return U.model_file_name??(U.model_file_name="audio_model"),super.from_pretrained(z,U)}}class Tm extends le{}class Hl extends Tm{async _call(z){return new Ch(await super._call(z))}}class ka extends le{}class km extends ka{}class vp extends ka{}class Em extends ka{}class Xl extends le{}class Mp extends Xl{}class xp extends Xl{}class Ql extends le{}class Pm extends Ql{}class Tp extends Ql{async _call(z){return new ar(await super._call(z))}}class Yl extends le{}class Cm extends Yl{}class Sm extends Yl{}class kp extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(U){const[xe,ze]=U.dims,Ie=this.config.decoder.num_codebooks,Je=ze-Ie;let rt=0;for(let Jt=0;Jt<U.size;++Jt){if(U.data[Jt]===this.config.decoder.pad_token_id)continue;const Gt=Jt%ze,Bt=Math.floor(Jt/ze)%Ie,Yt=Gt-Bt;Yt>0&&Yt<=Je&&(U.data[rt++]=U.data[Jt])}const ft=Math.floor(xe/Ie),vt=rt/(ft*Ie);return new C.Tensor(U.type,U.data.slice(0,rt),[ft,Ie,vt])}prepare_inputs_for_generation(U,xe,ze){let Ie=structuredClone(U);for(let rt=0;rt<Ie.length;++rt)for(let ft=0;ft<Ie[rt].length;++ft)rt%this.config.decoder.num_codebooks>=ft&&(Ie[rt][ft]=BigInt(this.config.decoder.pad_token_id));return ze.guidance_scale!==null&&ze.guidance_scale>1&&(Ie=Ie.concat(Ie)),super.prepare_inputs_for_generation(Ie,xe,ze)}async generate(U){const xe=await super.generate(U),ze=this._apply_and_filter_by_delay_pattern_mask(xe).unsqueeze_(0),{audio_values:Ie}=await he(this.sessions.encodec_decode,{audio_codes:ze});return Ie}}class Fs extends le{}class Ep extends Fs{}class Pp extends Fs{async _call(z){return new ar(await super._call(z))}}class Ea extends le{}class Cp extends Ea{}class So extends Ea{async _call(z){return new ar(await super._call(z))}}class Jl extends le{}class Sp extends Jl{}class Zl extends Jl{async _call(z){return new ar(await super._call(z))}}class ec extends le{}class Ap extends ec{}class tc extends ec{async _call(z){return new ar(await super._call(z))}}class Ip extends le{}class $p extends Ip{}class Fp extends le{}class rc extends Fp{constructor(...U){super(...U);Te(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(U){const xe=this._generation_mode??"text";let ze;if(xe==="text"||!U.past_key_values){const vt=this.sessions.prepare_inputs_embeds,Jt=(0,P.pick)(U,vt.inputNames);ze=await he(vt,Jt)}else{const vt=this.sessions.gen_img_embeds,Jt=(0,P.pick)({image_ids:U.input_ids},vt.inputNames);ze=await he(vt,Jt)}const Ie={...U,...ze},Je=await K(this,Ie),rt=this.sessions[xe==="text"?"lm_head":"gen_head"];if(!rt)throw new Error(`Unable to find "${rt}" generation head`);const ft=await he(rt,(0,P.pick)(Je,rt.inputNames));return{...ze,...Je,...ft}}async generate(U){return this._generation_mode="text",super.generate(U)}async generate_images(U){this._generation_mode="image";const xe=(U.inputs??U[this.main_input_name]).dims[1],Ie=(await super.generate(U)).slice(null,[xe,null]),Je=this.sessions.image_decode,{decoded_image:rt}=await he(Je,{generated_tokens:Ie}),ft=rt.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),vt=[];for(const Jt of ft){const Gt=N.RawImage.fromTensor(Jt);vt.push(Gt)}return vt}}class Op extends Fe{constructor({char_logits:z,bpe_logits:U,wp_logits:xe}){super(),this.char_logits=z,this.bpe_logits=U,this.wp_logits=xe}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class zp extends le{}class sc extends zp{async _call(z){return new Op(await super._call(z))}}class nc extends le{}class Am extends nc{}class ic extends nc{}class oc extends le{}class Lp extends oc{}class Dp extends oc{}class Ar{static async from_pretrained(z,{progress_callback:U=null,config:xe=null,cache_dir:ze=null,local_files_only:Ie=!1,revision:Je="main",model_file_name:rt=null,subfolder:ft="onnx",device:vt=null,dtype:Jt=null,use_external_data_format:Gt=null,session_options:Bt={}}={}){const Yt={progress_callback:U,config:xe,cache_dir:ze,local_files_only:Ie,revision:Je,model_file_name:rt,subfolder:ft,device:vt,dtype:Jt,use_external_data_format:Gt,session_options:Bt};if(Yt.config=await o.AutoConfig.from_pretrained(z,Yt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const cr of this.MODEL_CLASS_MAPPINGS){const pr=cr.get(Yt.config.model_type);if(pr)return await pr[1].from_pretrained(z,Yt)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${Yt.config.model_type}", attempting to construct from base class.`),await le.from_pretrained(z,Yt);throw Error(`Unsupported model type: ${Yt.config.model_type}`)}}Te(Ar,"MODEL_CLASS_MAPPINGS",null),Te(Ar,"BASE_IF_FAIL",!1);const Im=new Map([["bert",["BertModel",Ae]],["nomic_bert",["NomicBertModel",ut]],["roformer",["RoFormerModel",ht]],["electra",["ElectraModel",kt]],["esm",["EsmModel",Yr]],["convbert",["ConvBertModel",Oe]],["camembert",["CamembertModel",Bs]],["deberta",["DebertaModel",an]],["deberta-v2",["DebertaV2Model",ai]],["mpnet",["MPNetModel",fo]],["albert",["AlbertModel",Hi]],["distilbert",["DistilBertModel",Ot]],["roberta",["RobertaModel",Tr]],["xlm",["XLMModel",Gs]],["xlm-roberta",["XLMRobertaModel",xn]],["clap",["ClapModel",yp]],["clip",["CLIPModel",su]],["clipseg",["CLIPSegModel",hu]],["chinese_clip",["ChineseCLIPModel",cu]],["siglip",["SiglipModel",ou]],["jina_clip",["JinaCLIPModel",uu]],["mobilebert",["MobileBertModel",Jo]],["squeezebert",["SqueezeBertModel",xi]],["wav2vec2",["Wav2Vec2Model",Kd]],["wav2vec2-bert",["Wav2Vec2BertModel",ip]],["unispeech",["UniSpeechModel",Zd]],["unispeech-sat",["UniSpeechSatModel",rp]],["hubert",["HubertModel",ap]],["wavlm",["WavLMModel",Ma]],["audio-spectrogram-transformer",["ASTModel",Ha]],["vits",["VitsModel",Hl]],["pyannote",["PyAnnoteModel",gm]],["wespeaker-resnet",["WeSpeakerResNetModel",Jd]],["detr",["DetrModel",cm]],["rt_detr",["RTDetrModel",Md]],["table-transformer",["TableTransformerModel",kd]],["vit",["ViTModel",Ju]],["pvt",["PvtModel",td]],["vit_msn",["ViTMSNModel",id]],["vit_mae",["ViTMAEModel",nd]],["groupvit",["GroupViTModel",ld]],["fastvit",["FastViTModel",cd]],["mobilevit",["MobileViTModel",hd]],["mobilevitv2",["MobileViTV2Model",bl]],["owlvit",["OwlViTModel",md]],["owlv2",["Owlv2Model",gd]],["beit",["BeitModel",yd]],["deit",["DeiTModel",um]],["hiera",["HieraModel",Sd]],["convnext",["ConvNextModel",zl]],["convnextv2",["ConvNextV2Model",Bd]],["dinov2",["Dinov2Model",Rd]],["resnet",["ResNetModel",Id]],["swin",["SwinModel",pi]],["swin2sr",["Swin2SRModel",mi]],["donut-swin",["DonutSwinModel",xo]],["yolos",["YolosModel",Nd]],["dpt",["DPTModel",pa]],["glpn",["GLPNModel",pm]],["hifigan",["SpeechT5HifiGan",hp]],["efficientnet",["EfficientNetModel",Pm]],["decision_transformer",["DecisionTransformerModel",$p]],["patchtst",["PatchTSTForPrediction",Am]],["patchtsmixer",["PatchTSMixerForPrediction",Lp]],["mobilenet_v1",["MobileNetV1Model",Ep]],["mobilenet_v2",["MobileNetV2Model",Cp]],["mobilenet_v3",["MobileNetV3Model",Sp]],["mobilenet_v4",["MobileNetV4Model",Ap]],["maskformer",["MaskFormerModel",_a]],["mgp-str",["MgpstrForSceneTextRecognition",sc]]]),$m=new Map([["t5",["T5Model",wo]],["longt5",["LongT5Model",Mr]],["mt5",["MT5Model",J]],["bart",["BartModel",Pe]],["mbart",["MBartModel",pt]],["marian",["MarianModel",jl]],["whisper",["WhisperModel",bo]],["m2m_100",["M2M100Model",qd]],["blenderbot",["BlenderbotModel",Dr]],["blenderbot-small",["BlenderbotSmallModel",Hs]]]),Fm=new Map([["bloom",["BloomModel",qu]],["jais",["JAISModel",gu]],["gpt2",["GPT2Model",fu]],["gptj",["GPTJModel",bu]],["gpt_bigcode",["GPTBigCodeModel",Mu]],["gpt_neo",["GPTNeoModel",pn]],["gpt_neox",["GPTNeoXModel",yu]],["codegen",["CodeGenModel",Tu]],["llama",["LlamaModel",Eu]],["olmo",["OlmoModel",Au]],["mobilellm",["MobileLLMModel",Cu]],["granite",["GraniteModel",Iu]],["cohere",["CohereModel",om]],["gemma",["GemmaModel",Ou]],["gemma2",["Gemma2Model",Lu]],["openelm",["OpenELMModel",ju]],["qwen2",["Qwen2Model",Ru]],["phi",["PhiModel",lm]],["phi3",["Phi3Model",Wu]],["mpt",["MptModel",Hu]],["opt",["OPTModel",Qu]],["mistral",["MistralModel",Gl]],["starcoder2",["Starcoder2Model",gp]],["falcon",["FalconModel",_p]],["stablelm",["StableLmModel",Mp]]]),jp=new Map([["speecht5",["SpeechT5ForSpeechToText",Vl]],["whisper",["WhisperForConditionalGeneration",or]]]),Bp=new Map([["speecht5",["SpeechT5ForTextToSpeech",pp]]]),Rp=new Map([["vits",["VitsModel",Hl]],["musicgen",["MusicgenForConditionalGeneration",kp]]]),Np=new Map([["bert",["BertForSequenceClassification",Ye]],["roformer",["RoFormerForSequenceClassification",j]],["electra",["ElectraForSequenceClassification",hr]],["esm",["EsmForSequenceClassification",Sr]],["convbert",["ConvBertForSequenceClassification",ot]],["camembert",["CamembertForSequenceClassification",ni]],["deberta",["DebertaForSequenceClassification",ii]],["deberta-v2",["DebertaV2ForSequenceClassification",Ln]],["mpnet",["MPNetForSequenceClassification",di]],["albert",["AlbertForSequenceClassification",go]],["distilbert",["DistilBertForSequenceClassification",fs]],["roberta",["RobertaForSequenceClassification",Xs]],["xlm",["XLMForSequenceClassification",kr]],["xlm-roberta",["XLMRobertaForSequenceClassification",At]],["bart",["BartForSequenceClassification",lt]],["mbart",["MBartForSequenceClassification",Qt]],["mobilebert",["MobileBertForSequenceClassification",ho]],["squeezebert",["SqueezeBertForSequenceClassification",qi]]]),Up=new Map([["bert",["BertForTokenClassification",Qe]],["roformer",["RoFormerForTokenClassification",ae]],["electra",["ElectraForTokenClassification",Cr]],["esm",["EsmForTokenClassification",Wi]],["convbert",["ConvBertForTokenClassification",ct]],["camembert",["CamembertForTokenClassification",On]],["deberta",["DebertaForTokenClassification",Mi]],["deberta-v2",["DebertaV2ForTokenClassification",Ks]],["mpnet",["MPNetForTokenClassification",cn]],["distilbert",["DistilBertForTokenClassification",ci]],["roberta",["RobertaForTokenClassification",un]],["xlm",["XLMForTokenClassification",yt]],["xlm-roberta",["XLMRobertaForTokenClassification",ea]]]),ac=new Map([["t5",["T5ForConditionalGeneration",Qi]],["longt5",["LongT5ForConditionalGeneration",Ee]],["mt5",["MT5ForConditionalGeneration",ce]],["bart",["BartForConditionalGeneration",qe]],["mbart",["MBartForConditionalGeneration",xt]],["marian",["MarianMTModel",Bl]],["m2m_100",["M2M100ForConditionalGeneration",Nl]],["blenderbot",["BlenderbotForConditionalGeneration",er]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",gs]]]),Vp=new Map([["bloom",["BloomForCausalLM",Ku]],["gpt2",["GPT2LMHeadModel",im]],["jais",["JAISLMHeadModel",sa]],["gptj",["GPTJForCausalLM",vu]],["gpt_bigcode",["GPTBigCodeForCausalLM",xu]],["gpt_neo",["GPTNeoForCausalLM",_u]],["gpt_neox",["GPTNeoXForCausalLM",wu]],["codegen",["CodeGenForCausalLM",ku]],["llama",["LlamaForCausalLM",Pu]],["olmo",["OlmoForCausalLM",al]],["mobilellm",["MobileLLMForCausalLM",Su]],["granite",["GraniteForCausalLM",$u]],["cohere",["CohereForCausalLM",Fu]],["gemma",["GemmaForCausalLM",zu]],["gemma2",["Gemma2ForCausalLM",Du]],["openelm",["OpenELMForCausalLM",Bu]],["qwen2",["Qwen2ForCausalLM",am]],["phi",["PhiForCausalLM",Vu]],["phi3",["Phi3ForCausalLM",Gu]],["mpt",["MptForCausalLM",Xu]],["opt",["OPTForCausalLM",Yu]],["mbart",["MBartForCausalLM",xr]],["mistral",["MistralForCausalLM",fp]],["starcoder2",["Starcoder2ForCausalLM",Mm]],["falcon",["FalconForCausalLM",xm]],["trocr",["TrOCRForCausalLM",vm]],["stablelm",["StableLmForCausalLM",xp]]]),Om=new Map([["multi_modality",["MultiModalityCausalLM",rc]]]),Wp=new Map([["bert",["BertForMaskedLM",Ze]],["roformer",["RoFormerForMaskedLM",gt]],["electra",["ElectraForMaskedLM",Ct]],["esm",["EsmForMaskedLM",Mn]],["convbert",["ConvBertForMaskedLM",et]],["camembert",["CamembertForMaskedLM",si]],["deberta",["DebertaForMaskedLM",zn]],["deberta-v2",["DebertaV2ForMaskedLM",li]],["mpnet",["MPNetForMaskedLM",Zo]],["albert",["AlbertForMaskedLM",yo]],["distilbert",["DistilBertForMaskedLM",Br]],["roberta",["RobertaForMaskedLM",vs]],["xlm",["XLMWithLMHeadModel",dr]],["xlm-roberta",["XLMRobertaForMaskedLM",Tn]],["mobilebert",["MobileBertForMaskedLM",po]],["squeezebert",["SqueezeBertForMaskedLM",Gi]]]),Gp=new Map([["bert",["BertForQuestionAnswering",Ue]],["roformer",["RoFormerForQuestionAnswering",Q]],["electra",["ElectraForQuestionAnswering",as]],["convbert",["ConvBertForQuestionAnswering",Ft]],["camembert",["CamembertForQuestionAnswering",Vi]],["deberta",["DebertaForQuestionAnswering",oi]],["deberta-v2",["DebertaV2ForQuestionAnswering",at]],["mpnet",["MPNetForQuestionAnswering",Bn]],["albert",["AlbertForQuestionAnswering",_o]],["distilbert",["DistilBertForQuestionAnswering",Dn]],["roberta",["RobertaForQuestionAnswering",Kt]],["xlm",["XLMForQuestionAnswering",ir]],["xlm-roberta",["XLMRobertaForQuestionAnswering",tt]],["mobilebert",["MobileBertForQuestionAnswering",mo]],["squeezebert",["SqueezeBertForQuestionAnswering",Ki]]]),lc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Qa]],["idefics3",["Idefics3ForConditionalGeneration",Nn]]]),zm=new Map([["llava",["LlavaForConditionalGeneration",ta]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Zc]],["moondream1",["Moondream1ForConditionalGeneration",eu]],["florence2",["Florence2ForConditionalGeneration",tu]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Uu]],["idefics3",["Idefics3ForConditionalGeneration",Nn]]]),Lm=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Qa]]]),qp=new Map([["vit",["ViTForImageClassification",Zu]],["pvt",["PvtForImageClassification",rd]],["vit_msn",["ViTMSNForImageClassification",od]],["fastvit",["FastViTForImageClassification",ud]],["mobilevit",["MobileViTForImageClassification",yl]],["mobilevitv2",["MobileViTV2ForImageClassification",vl]],["beit",["BeitForImageClassification",wd]],["deit",["DeiTForImageClassification",Cd]],["hiera",["HieraForImageClassification",Ad]],["convnext",["ConvNextForImageClassification",jd]],["convnextv2",["ConvNextV2ForImageClassification",hm]],["dinov2",["Dinov2ForImageClassification",mm]],["resnet",["ResNetForImageClassification",dm]],["swin",["SwinForImageClassification",hi]],["segformer",["SegformerForImageClassification",vp]],["efficientnet",["EfficientNetForImageClassification",Tp]],["mobilenet_v1",["MobileNetV1ForImageClassification",Pp]],["mobilenet_v2",["MobileNetV2ForImageClassification",So]],["mobilenet_v3",["MobileNetV3ForImageClassification",Zl]],["mobilenet_v4",["MobileNetV4ForImageClassification",tc]]]),Kp=new Map([["detr",["DetrForObjectDetection",bd]],["rt_detr",["RTDetrForObjectDetection",xd]],["table-transformer",["TableTransformerForObjectDetection",Ed]],["yolos",["YolosForObjectDetection",Ud]]]),Hp=new Map([["owlvit",["OwlViTForObjectDetection",fd]],["owlv2",["Owlv2ForObjectDetection",_d]]]),Dm=new Map([["detr",["DetrForSegmentation",Tl]],["clipseg",["CLIPSegForImageSegmentation",mu]]]),Ao=new Map([["segformer",["SegformerForSemanticSegmentation",Em]],["sapiens",["SapiensForSemanticSegmentation",ma]]]),cc=new Map([["detr",["DetrForSegmentation",Tl]],["maskformer",["MaskFormerForInstanceSegmentation",Ld]]]),uc=new Map([["sam",["SamModel",wa]]]),dc=new Map([["wav2vec2",["Wav2Vec2ForCTC",Hd]],["wav2vec2-bert",["Wav2Vec2BertForCTC",ym]],["unispeech",["UniSpeechForCTC",ep]],["unispeech-sat",["UniSpeechSatForCTC",sp]],["wavlm",["WavLMForCTC",Co]],["hubert",["HubertForCTC",lp]]]),pc=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",fm]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",op]],["unispeech",["UniSpeechForSequenceClassification",tp]],["unispeech-sat",["UniSpeechSatForSequenceClassification",_m]],["wavlm",["WavLMForSequenceClassification",Ul]],["hubert",["HubertForSequenceClassification",cp]],["audio-spectrogram-transformer",["ASTForAudioClassification",Jc]]]),Xp=new Map([["wavlm",["WavLMForXVector",up]]]),Qp=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",np]],["wavlm",["WavLMForAudioFrameClassification",dp]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Xd]],["pyannote",["PyAnnoteForAudioFrameClassification",Qd]]]),hc=new Map([["vitmatte",["VitMatteForImageMatting",pd]]]),Yp=new Map([["patchtst",["PatchTSTForPrediction",ic]],["patchtsmixer",["PatchTSMixerForPrediction",Dp]]]),Jp=new Map([["swin2sr",["Swin2SRForImageSuperResolution",$s]]]),Zp=new Map([["dpt",["DPTForDepthEstimation",Al]],["depth_anything",["DepthAnythingForDepthEstimation",Fd]],["glpn",["GLPNForDepthEstimation",Dd]],["sapiens",["SapiensForDepthEstimation",Il]],["depth_pro",["DepthProForDepthEstimation",zd]]]),mc=new Map([["sapiens",["SapiensForNormalEstimation",Od]]]),eh=new Map([["vitpose",["VitPoseForPoseEstimation",ed]]]),th=new Map([["clip",["CLIPVisionModelWithProjection",iu]],["siglip",["SiglipVisionModel",lu]],["jina_clip",["JinaCLIPVisionModel",pu]]]),fc=[[Im,G.EncoderOnly],[$m,G.EncoderDecoder],[Fm,G.DecoderOnly],[Np,G.EncoderOnly],[Up,G.EncoderOnly],[ac,G.Seq2Seq],[jp,G.Seq2Seq],[Vp,G.DecoderOnly],[Om,G.MultiModality],[Wp,G.EncoderOnly],[Gp,G.EncoderOnly],[lc,G.Vision2Seq],[zm,G.ImageTextToText],[qp,G.EncoderOnly],[Dm,G.EncoderOnly],[cc,G.EncoderOnly],[Ao,G.EncoderOnly],[hc,G.EncoderOnly],[Yp,G.EncoderOnly],[Jp,G.EncoderOnly],[Zp,G.EncoderOnly],[mc,G.EncoderOnly],[eh,G.EncoderOnly],[Kp,G.EncoderOnly],[Hp,G.EncoderOnly],[uc,G.MaskGeneration],[dc,G.EncoderOnly],[pc,G.EncoderOnly],[Bp,G.Seq2Seq],[Rp,G.EncoderOnly],[Xp,G.EncoderOnly],[Qp,G.EncoderOnly],[th,G.EncoderOnly]];for(const[T,z]of fc)for(const[U,xe]of T.values())D.set(U,z),L.set(xe,U),E.set(U,xe);const jm=[["MusicgenForConditionalGeneration",kp,G.Musicgen],["CLIPTextModelWithProjection",nu,G.EncoderOnly],["SiglipTextModel",au,G.EncoderOnly],["JinaCLIPTextModel",du,G.EncoderOnly],["ClapTextModelWithProjection",wp,G.EncoderOnly],["ClapAudioModelWithProjection",bp,G.EncoderOnly]];for(const[T,z,U]of jm)D.set(T,U),L.set(z,T),E.set(T,z);class gc extends Ar{}Te(gc,"MODEL_CLASS_MAPPINGS",fc.map(z=>z[0])),Te(gc,"BASE_IF_FAIL",!0);class rh extends Ar{}Te(rh,"MODEL_CLASS_MAPPINGS",[Np]);class sh extends Ar{}Te(sh,"MODEL_CLASS_MAPPINGS",[Up]);class Bm extends Ar{}Te(Bm,"MODEL_CLASS_MAPPINGS",[ac]);class nh extends Ar{}Te(nh,"MODEL_CLASS_MAPPINGS",[jp]);class ih extends Ar{}Te(ih,"MODEL_CLASS_MAPPINGS",[Bp]);class oh extends Ar{}Te(oh,"MODEL_CLASS_MAPPINGS",[Rp]);class ah extends Ar{}Te(ah,"MODEL_CLASS_MAPPINGS",[Vp]);class Rm extends Ar{}Te(Rm,"MODEL_CLASS_MAPPINGS",[Wp]);class lh extends Ar{}Te(lh,"MODEL_CLASS_MAPPINGS",[Gp]);class ch extends Ar{}Te(ch,"MODEL_CLASS_MAPPINGS",[lc]);class uh extends Ar{}Te(uh,"MODEL_CLASS_MAPPINGS",[qp]);class Nm extends Ar{}Te(Nm,"MODEL_CLASS_MAPPINGS",[Dm]);class dh extends Ar{}Te(dh,"MODEL_CLASS_MAPPINGS",[Ao]);class ph extends Ar{}Te(ph,"MODEL_CLASS_MAPPINGS",[cc]);class hh extends Ar{}Te(hh,"MODEL_CLASS_MAPPINGS",[Kp]);class mh extends Ar{}Te(mh,"MODEL_CLASS_MAPPINGS",[Hp]);class fh extends Ar{}Te(fh,"MODEL_CLASS_MAPPINGS",[uc]);class gh extends Ar{}Te(gh,"MODEL_CLASS_MAPPINGS",[dc]);class _h extends Ar{}Te(_h,"MODEL_CLASS_MAPPINGS",[pc]);class yh extends Ar{}Te(yh,"MODEL_CLASS_MAPPINGS",[Xp]);class wh extends Ar{}Te(wh,"MODEL_CLASS_MAPPINGS",[Qp]);class bh extends Ar{}Te(bh,"MODEL_CLASS_MAPPINGS",[Lm]);class vh extends Ar{}Te(vh,"MODEL_CLASS_MAPPINGS",[hc]);class _c extends Ar{}Te(_c,"MODEL_CLASS_MAPPINGS",[Jp]);class Mh extends Ar{}Te(Mh,"MODEL_CLASS_MAPPINGS",[Zp]);class xh extends Ar{}Te(xh,"MODEL_CLASS_MAPPINGS",[mc]);class Th extends Ar{}Te(Th,"MODEL_CLASS_MAPPINGS",[eh]);class kh extends Ar{}Te(kh,"MODEL_CLASS_MAPPINGS",[th]);class Um extends Fe{constructor({logits:z,past_key_values:U,encoder_outputs:xe,decoder_attentions:ze=null,cross_attentions:Ie=null}){super(),this.logits=z,this.past_key_values=U,this.encoder_outputs=xe,this.decoder_attentions=ze,this.cross_attentions=Ie}}class ar extends Fe{constructor({logits:z}){super(),this.logits=z}}class Eh extends Fe{constructor({logits:z,embeddings:U}){super(),this.logits=z,this.embeddings=U}}class ks extends Fe{constructor({logits:z}){super(),this.logits=z}}class Es extends Fe{constructor({logits:z}){super(),this.logits=z}}class Os extends Fe{constructor({start_logits:z,end_logits:U}){super(),this.start_logits=z,this.end_logits=U}}class Ei extends Fe{constructor({logits:z}){super(),this.logits=z}}class hg extends Fe{constructor({logits:z,past_key_values:U}){super(),this.logits=z,this.past_key_values=U}}class Ph extends Fe{constructor({alphas:z}){super(),this.alphas=z}}class Ch extends Fe{constructor({waveform:z,spectrogram:U}){super(),this.waveform=z,this.spectrogram=U}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(t,s,n)=>{n.r(s),n.d(s,{ASTFeatureExtractor:()=>h});var o=n("./src/base/feature_extraction_utils.js");n("./src/utils/tensor.js");var u=n("./src/utils/audio.js");class h extends o.FeatureExtractor{constructor(P){super(P);const f=this.config.sampling_rate,b=(0,u.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(f/2),f,null,"kaldi",!0);for(let x=0;x<b.length;++x)b[x].push(0);this.mel_filters=b,this.window=(0,u.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(P,f){return(0,u.spectrogram)(P,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:f,transpose:!0})}async _call(P){(0,o.validate_audio_inputs)(P,"ASTFeatureExtractor");const f=await this._extract_fbank_features(P,this.config.max_length);if(this.config.do_normalize){const b=this.std*2,x=f.data;for(let k=0;k<x.length;++k)x[k]=(x[k]-this.mean)/b}return{input_values:f.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(t,s,n)=>{n.r(s),n.d(s,{AutoFeatureExtractor:()=>v});var o=n("./src/utils/constants.js"),u=n("./src/utils/hub.js");n("./src/base/feature_extraction_utils.js");var h=n("./src/models/feature_extractors.js");class v{static async from_pretrained(f,b={}){const x=await(0,u.getModelJSON)(f,o.FEATURE_EXTRACTOR_NAME,!0,b),k=x.feature_extractor_type,C=h[k];if(!C)throw new Error(`Unknown feature_extractor_type: '${k}'. Please report this at ${o.GITHUB_ISSUE_URL}.`);return new C(x)}}},"./src/models/auto/image_processing_auto.js":(t,s,n)=>{n.r(s),n.d(s,{AutoImageProcessor:()=>P});var o=n("./src/utils/constants.js"),u=n("./src/utils/hub.js"),h=n("./src/base/image_processors_utils.js"),v=n("./src/models/image_processors.js");class P{static async from_pretrained(b,x={}){const k=await(0,u.getModelJSON)(b,o.IMAGE_PROCESSOR_NAME,!0,x),C=k.image_processor_type??k.feature_extractor_type;let N=v[C];return N||(C!==void 0&&console.warn(`Image processor type '${C}' not found, assuming base ImageProcessor. Please report this at ${o.GITHUB_ISSUE_URL}.`),N=h.ImageProcessor),new N(k)}}},"./src/models/auto/processing_auto.js":(t,s,n)=>{n.r(s),n.d(s,{AutoProcessor:()=>b});var o=n("./src/utils/constants.js"),u=n("./src/utils/hub.js"),h=n("./src/base/processing_utils.js"),v=n("./src/models/processors.js"),P=n("./src/models/image_processors.js"),f=n("./src/models/feature_extractors.js");class b{static async from_pretrained(k,C={}){const N=await(0,u.getModelJSON)(k,o.IMAGE_PROCESSOR_NAME,!0,C),{image_processor_type:X,feature_extractor_type:oe,processor_class:re}=N;if(re&&v[re])return v[re].from_pretrained(k,C);if(!X&&!oe)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const V={};if(X){const te=P[X];if(!te)throw new Error(`Unknown image_processor_type: '${X}'.`);V.image_processor=new te(N)}if(oe){const te=P[oe];if(te)V.image_processor=new te(N);else{const G=f[oe];if(!G)throw new Error(`Unknown feature_extractor_type: '${oe}'.`);V.feature_extractor=new G(N)}}const H={};return new h.Processor(H,V)}}},"./src/models/beit/image_processing_beit.js":(t,s,n)=>{n.r(s),n.d(s,{BeitFeatureExtractor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(t,s,n)=>{n.r(s),n.d(s,{BitImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(t,s,n)=>{n.r(s),n.d(s,{ChineseCLIPFeatureExtractor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(t,s,n)=>{n.r(s),n.d(s,{ClapFeatureExtractor:()=>h});var o=n("./src/base/feature_extraction_utils.js");n("./src/utils/tensor.js");var u=n("./src/utils/audio.js");class h extends o.FeatureExtractor{constructor(P){super(P),this.mel_filters=(0,u.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,u.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,u.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(P,f,b,x){let k;const C=P.length-f;if(C>0)if(b==="rand_trunc"){const N=Math.floor(Math.random()*(C+1));P=P.subarray(N,N+f),k=await this._extract_fbank_features(P,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${b}" not implemented`);else{if(C<0){let N=new Float64Array(f);if(N.set(P),x==="repeat")for(let X=P.length;X<f;X+=P.length)N.set(P.subarray(0,Math.min(P.length,f-X)),X);else if(x==="repeatpad")for(let X=P.length;X<-C;X+=P.length)N.set(P,X);P=N}if(b==="fusion")throw new Error(`Truncation strategy "${b}" not implemented`);k=await this._extract_fbank_features(P,this.mel_filters_slaney,this.config.nb_max_samples)}return k.unsqueeze_(0)}async _extract_fbank_features(P,f,b=null){return(0,u.spectrogram)(P,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:f,log_mel:"dB",max_num_frames:b,do_pad:!1,transpose:!0})}async _call(P,{max_length:f=null}={}){return(0,o.validate_audio_inputs)(P,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(P,f??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(t,s,n)=>{n.r(s),n.d(s,{CLIPFeatureExtractor:()=>h,CLIPImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}class h extends u{}},"./src/models/convnext/image_processing_convnext.js":(t,s,n)=>{n.r(s),n.d(s,{ConvNextFeatureExtractor:()=>h,ConvNextImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{constructor(P){super(P),this.crop_pct=this.config.crop_pct??224/256}async resize(P){var b;const f=(b=this.size)==null?void 0:b.shortest_edge;if(f===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(f<384){const x=Math.floor(f/this.crop_pct),[k,C]=this.get_resize_output_image_size(P,{shortest_edge:x});P=await P.resize(k,C,{resample:this.resample}),P=await P.center_crop(f,f)}else P=await P.resize(f,f,{resample:this.resample});return P}}class h extends u{}},"./src/models/deit/image_processing_deit.js":(t,s,n)=>{n.r(s),n.d(s,{DeiTFeatureExtractor:()=>h,DeiTImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}class h extends u{}},"./src/models/detr/image_processing_detr.js":(t,s,n)=>{n.r(s),n.d(s,{DetrFeatureExtractor:()=>v,DetrImageProcessor:()=>h});var o=n("./src/base/image_processors_utils.js"),u=n("./src/utils/tensor.js");class h extends o.ImageProcessor{async _call(f){const b=await super._call(f),x=[b.pixel_values.dims[0],64,64],k=(0,u.full)(x,1n);return{...b,pixel_mask:k}}post_process_object_detection(...f){return(0,o.post_process_object_detection)(...f)}post_process_panoptic_segmentation(...f){return(0,o.post_process_panoptic_segmentation)(...f)}post_process_instance_segmentation(...f){return(0,o.post_process_instance_segmentation)(...f)}}class v extends h{}},"./src/models/donut/image_processing_donut.js":(t,s,n)=>{n.r(s),n.d(s,{DonutFeatureExtractor:()=>h,DonutImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{pad_image(P,f,b,x={}){const[k,C,N]=f;let X=this.image_mean;Array.isArray(this.image_mean)||(X=new Array(N).fill(X));let oe=this.image_std;Array.isArray(oe)||(oe=new Array(N).fill(X));const re=X.map((V,H)=>-V/oe[H]);return super.pad_image(P,f,b,{center:!0,constant_values:re,...x})}}class h extends u{}},"./src/models/dpt/image_processing_dpt.js":(t,s,n)=>{n.r(s),n.d(s,{DPTFeatureExtractor:()=>h,DPTImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}class h extends u{}},"./src/models/efficientnet/image_processing_efficientnet.js":(t,s,n)=>{n.r(s),n.d(s,{EfficientNetImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{constructor(v){super(v),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(P=>P*P))}}},"./src/models/feature_extractors.js":(t,s,n)=>{n.r(s),n.d(s,{ASTFeatureExtractor:()=>o.ASTFeatureExtractor,ClapFeatureExtractor:()=>u.ClapFeatureExtractor,ImageFeatureExtractor:()=>k.ImageProcessor,PyAnnoteFeatureExtractor:()=>h.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>v.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>P.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>f.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>b.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>x.WhisperFeatureExtractor});var o=n("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),u=n("./src/models/clap/feature_extraction_clap.js"),h=n("./src/models/pyannote/feature_extraction_pyannote.js"),v=n("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),P=n("./src/models/speecht5/feature_extraction_speecht5.js"),f=n("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),b=n("./src/models/wespeaker/feature_extraction_wespeaker.js"),x=n("./src/models/whisper/feature_extraction_whisper.js"),k=n("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(t,s,n)=>{n.r(s),n.d(s,{Florence2Processor:()=>v});var o=n("./src/base/processing_utils.js"),u=n("./src/models/auto/image_processing_auto.js"),h=n("./src/tokenizers.js");class v extends o.Processor{constructor(f,b){super(f,b);const{tasks_answer_post_processing_type:x,task_prompts_without_inputs:k,task_prompts_with_input:C}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(x??{})),this.task_prompts_without_inputs=new Map(Object.entries(k??{})),this.task_prompts_with_input=new Map(Object.entries(C??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(f){typeof f=="string"&&(f=[f]);const b=[];for(const x of f)if(this.task_prompts_without_inputs.has(x))b.push(this.task_prompts_without_inputs.get(x));else{for(const[k,C]of this.task_prompts_with_input)if(x.includes(k)){b.push(C.replaceAll("{input}",x).replaceAll(k,""));break}b.length!==f.length&&b.push(x)}return b}post_process_generation(f,b,x){const k=this.tasks_answer_post_processing_type.get(b)??"pure_text";f=f.replaceAll("<s>","").replaceAll("</s>","");let C;switch(k){case"pure_text":C=f;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const N=k==="ocr"?"quad_boxes":"bboxes",X=f.matchAll(this.regexes[N]),oe=[],re=[];for(const[V,H,...te]of X)oe.push(H?H.trim():oe.at(-1)??""),re.push(te.map((G,D)=>(Number(G)+.5)/this.size_per_bin*x[D%2]));C={labels:oe,[N]:re};break;default:throw new Error(`Task "${b}" (of type "${k}") not yet implemented.`)}return{[b]:C}}async _call(f,b=null,x={}){if(!f&&!b)throw new Error("Either text or images must be provided");const k=await this.image_processor(f,x),C=b?this.tokenizer(b,x):{};return{...k,...C}}}Te(v,"tokenizer_class",h.AutoTokenizer),Te(v,"image_processor_class",u.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(t,s,n)=>{n.r(s),n.d(s,{GLPNFeatureExtractor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}},"./src/models/idefics3/image_processing_idefics3.js":(t,s,n)=>{n.r(s),n.d(s,{Idefics3ImageProcessor:()=>h});var o=n("./src/base/image_processors_utils.js"),u=n("./src/utils/tensor.js");class h extends o.ImageProcessor{constructor(P){super(P),this.do_image_splitting=P.do_image_splitting??!0,this.max_image_size=P.max_image_size}get_resize_for_vision_encoder(P,f){let[b,x]=P.dims.slice(-2);const k=x/b;return x>=b?(x=Math.ceil(x/f)*f,b=Math.floor(x/k),b=Math.ceil(b/f)*f):(b=Math.ceil(b/f)*f,x=Math.floor(b*k),x=Math.ceil(x/f)*f),{height:b,width:x}}async _call(P,{do_image_splitting:f=null,return_row_col_info:b=!1}={}){let x;if(!Array.isArray(P))x=[[P]];else{if(P.length===0||!P[0])throw new Error("No images provided.");Array.isArray(P[0])?x=P:x=[P]}let k=[],C=[],N=[];const X=[],oe=[];for(const L of x){let S=await Promise.all(L.map(pe=>this.preprocess(pe)));X.push(...S.map(pe=>pe.original_size)),oe.push(...S.map(pe=>pe.reshaped_input_size)),S.forEach(pe=>pe.pixel_values.unsqueeze_(0));const{longest_edge:se}=this.max_image_size;let ee;if(f??this.do_image_splitting){let pe=new Array(S.length),he=new Array(S.length);ee=await Promise.all(S.map(async(be,Ce)=>{const ke=this.get_resize_for_vision_encoder(be.pixel_values,se),je=await(0,u.interpolate_4d)(be.pixel_values,{size:[ke.height,ke.width]}),{frames:fe,num_splits_h:K,num_splits_w:me}=await this.split_image(je,this.max_image_size);return pe[Ce]=K,he[Ce]=me,(0,u.cat)(fe,0)})),C.push(pe),N.push(he)}else{const pe=[se,se];ee=await Promise.all(S.map(he=>(0,u.interpolate_4d)(he.pixel_values,{size:pe}))),C.push(new Array(S.length).fill(0)),N.push(new Array(S.length).fill(0))}k.push((0,u.cat)(ee,0))}const re=k.length,[V,H,te,G]=k[0].dims;let D,E;if(re===1)D=k[0].unsqueeze_(0),E=(0,u.full)([re,V,te,G],!0);else{const L=Math.max(...k.map(ee=>ee.dims.at(0)));E=(0,u.full)([re,L,te,G],!0);const S=E.data,se=L*te*G;for(let ee=0;ee<re;++ee){const pe=k[ee].dims[0];if(pe<L){k[ee]=(0,u.cat)([k[ee],(0,u.full)([L-pe,H,te,G],0)],0);const he=ee*se+pe*te*G,be=(ee+1)*se;S.fill(!1,he,be)}}D=(0,u.stack)(k,0)}return{pixel_values:D,pixel_attention_mask:E,original_sizes:X,reshaped_input_sizes:oe,...b?{rows:C,cols:N}:{}}}async split_image(P,{longest_edge:f}){const b=f,x=f,k=[],[C,N]=P.dims.slice(-2);let X=0,oe=0;if(C>b||N>x){X=Math.ceil(C/b),oe=Math.ceil(N/x);const re=Math.ceil(C/X),V=Math.ceil(N/oe);for(let G=0;G<X;G++)for(let D=0;D<oe;D++){const E=D*V,L=G*re,S=Math.min(E+V,N),se=Math.min(L+re,C);k.push(P.slice(null,null,[L,se],[E,S]))}const H=b,te=x;(C!==H||N!==te)&&(P=await(0,u.interpolate_4d)(P,{size:[H,te]}))}return k.push(P),{frames:k,num_splits_h:X,num_splits_w:oe}}}},"./src/models/idefics3/processing_idefics3.js":(t,s,n)=>{n.r(s),n.d(s,{Idefics3Processor:()=>x});var o=n("./src/base/processing_utils.js"),u=n("./src/models/auto/image_processing_auto.js"),h=n("./src/tokenizers.js");n("./src/utils/image.js");var v=n("./src/utils/core.js");function P(k,C,N,X,oe,re){let V="";for(let H=0;H<C;++H){for(let te=0;te<N;++te)V+=X+`<row_${H+1}_col_${te+1}>`+oe.repeat(k);V+=`
`}return V+=`
${X}${re}`+oe.repeat(k)+`${X}`,V}function f(k,C,N,X){return`${C}${X}`+N.repeat(k)+`${C}`}function b(k,C,N,X,oe,re){return k===0&&C===0?f(N,X,oe,re):P(N,k,C,X,oe,re)}class x extends o.Processor{constructor(){super(...arguments);Te(this,"fake_image_token","<fake_token_around_image>");Te(this,"image_token","<image>");Te(this,"global_img_token","<global-img>")}async _call(N,X=null,oe={}){oe.return_row_col_info??(oe.return_row_col_info=!0);let re;X&&(re=await this.image_processor(X,oe)),Array.isArray(N)||(N=[N]);const V=re.rows??[new Array(N.length).fill(0)],H=re.cols??[new Array(N.length).fill(0)],te=this.config.image_seq_len,G=[],D=[];for(let L=0;L<N.length;++L){const S=N[L],se=V[L],ee=H[L];G.push((0,v.count)(S,this.image_token));const pe=se.map((Ce,ke)=>b(Ce,ee[ke],te,this.fake_image_token,this.image_token,this.global_img_token)),he=S.split(this.image_token);if(he.length===0)throw new Error("The image token should be present in the text.");let be=he[0];for(let Ce=0;Ce<pe.length;++Ce)be+=pe[Ce]+he[Ce+1];D.push(be)}return{...this.tokenizer(D),...re}}}Te(x,"image_processor_class",u.AutoImageProcessor),Te(x,"tokenizer_class",h.AutoTokenizer),Te(x,"uses_processor_config",!0)},"./src/models/image_processors.js":(t,s,n)=>{n.r(s),n.d(s,{BeitFeatureExtractor:()=>o.BeitFeatureExtractor,BitImageProcessor:()=>u.BitImageProcessor,CLIPFeatureExtractor:()=>v.CLIPFeatureExtractor,CLIPImageProcessor:()=>v.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>h.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>P.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>P.ConvNextImageProcessor,DPTFeatureExtractor:()=>k.DPTFeatureExtractor,DPTImageProcessor:()=>k.DPTImageProcessor,DeiTFeatureExtractor:()=>f.DeiTFeatureExtractor,DeiTImageProcessor:()=>f.DeiTImageProcessor,DetrFeatureExtractor:()=>b.DetrFeatureExtractor,DetrImageProcessor:()=>b.DetrImageProcessor,DonutFeatureExtractor:()=>x.DonutFeatureExtractor,DonutImageProcessor:()=>x.DonutImageProcessor,EfficientNetImageProcessor:()=>C.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>N.GLPNFeatureExtractor,Idefics3ImageProcessor:()=>X.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>re.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>V.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>H.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>te.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>te.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>G.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>G.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>D.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>D.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>E.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>E.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>L.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>L.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>S.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>S.MobileViTImageProcessor,NougatImageProcessor:()=>se.NougatImageProcessor,OwlViTFeatureExtractor:()=>pe.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>pe.OwlViTImageProcessor,Owlv2ImageProcessor:()=>ee.Owlv2ImageProcessor,PvtImageProcessor:()=>he.PvtImageProcessor,Qwen2VLImageProcessor:()=>be.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>Ce.RTDetrImageProcessor,SamImageProcessor:()=>ke.SamImageProcessor,SegformerFeatureExtractor:()=>je.SegformerFeatureExtractor,SegformerImageProcessor:()=>je.SegformerImageProcessor,SiglipImageProcessor:()=>fe.SiglipImageProcessor,Swin2SRImageProcessor:()=>K.Swin2SRImageProcessor,VLMImageProcessor:()=>oe.VLMImageProcessor,ViTFeatureExtractor:()=>me.ViTFeatureExtractor,ViTImageProcessor:()=>me.ViTImageProcessor,VitMatteImageProcessor:()=>ge.VitMatteImageProcessor,VitPoseImageProcessor:()=>$e.VitPoseImageProcessor,YolosFeatureExtractor:()=>We.YolosFeatureExtractor,YolosImageProcessor:()=>We.YolosImageProcessor});var o=n("./src/models/beit/image_processing_beit.js"),u=n("./src/models/bit/image_processing_bit.js"),h=n("./src/models/chinese_clip/image_processing_chinese_clip.js"),v=n("./src/models/clip/image_processing_clip.js"),P=n("./src/models/convnext/image_processing_convnext.js"),f=n("./src/models/deit/image_processing_deit.js"),b=n("./src/models/detr/image_processing_detr.js"),x=n("./src/models/donut/image_processing_donut.js"),k=n("./src/models/dpt/image_processing_dpt.js"),C=n("./src/models/efficientnet/image_processing_efficientnet.js"),N=n("./src/models/glpn/image_processing_glpn.js"),X=n("./src/models/idefics3/image_processing_idefics3.js"),oe=n("./src/models/janus/image_processing_janus.js"),re=n("./src/models/jina_clip/image_processing_jina_clip.js"),V=n("./src/models/llava_onevision/image_processing_llava_onevision.js"),H=n("./src/models/mask2former/image_processing_mask2former.js"),te=n("./src/models/maskformer/image_processing_maskformer.js"),G=n("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),D=n("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),E=n("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),L=n("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),S=n("./src/models/mobilevit/image_processing_mobilevit.js"),se=n("./src/models/nougat/image_processing_nougat.js"),ee=n("./src/models/owlv2/image_processing_owlv2.js"),pe=n("./src/models/owlvit/image_processing_owlvit.js"),he=n("./src/models/pvt/image_processing_pvt.js"),be=n("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),Ce=n("./src/models/rt_detr/image_processing_rt_detr.js"),ke=n("./src/models/sam/image_processing_sam.js"),je=n("./src/models/segformer/image_processing_segformer.js"),fe=n("./src/models/siglip/image_processing_siglip.js"),K=n("./src/models/swin2sr/image_processing_swin2sr.js"),me=n("./src/models/vit/image_processing_vit.js"),ge=n("./src/models/vitmatte/image_processing_vitmatte.js"),$e=n("./src/models/vitpose/image_processing_vitpose.js"),We=n("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(t,s,n)=>{n.r(s),n.d(s,{VLMImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{constructor(v){super({do_pad:!0,pad_size:{width:v.image_size,height:v.image_size},...v}),this.constant_values=this.config.background_color.map(P=>P*this.rescale_factor)}pad_image(v,P,f,b){return super.pad_image(v,P,f,{constant_values:this.constant_values,center:!0,...b})}}},"./src/models/janus/processing_janus.js":(t,s,n)=>{n.r(s),n.d(s,{VLChatProcessor:()=>b});var o=n("./src/base/processing_utils.js"),u=n("./src/models/auto/image_processing_auto.js"),h=n("./src/tokenizers.js"),v=n("./src/utils/core.js"),P=n("./src/utils/tensor.js"),f=n("./src/utils/image.js");class b extends o.Processor{constructor(k,C){super(k,C),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(k,{images:C=null,chat_template:N="default"}={}){C?Array.isArray(C)||(C=[C]):C=await Promise.all(k.filter(ee=>ee.images).flatMap(ee=>ee.images).map(ee=>f.RawImage.read(ee)));const X=this.tokenizer,oe=X.apply_chat_template(k,{tokenize:!1,add_generation_prompt:!0,chat_template:N}),re=ee=>X.encode(ee,{add_special_tokens:!1}),V=oe.split(this.image_tag),H=V.length-1;if(C.length!==H)throw new Error(`Number of images provided (${C.length}) does not match number of "${this.image_tag}" image tags (${H})`);const[te,G,D]=X.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let E=re(V[0]),L=new Array(E.length).fill(!1);for(let ee=1;ee<V.length;++ee){const pe=new Array(this.num_image_tokens).fill(te),he=re(V[ee]);E=(0,v.mergeArrays)(E,[G],pe,[D],he);const be=new Array(this.num_image_tokens).fill(!0);L=(0,v.mergeArrays)(L,[!1],be,[!1],new Array(he.length).fill(!1))}const S=[1,E.length],se={input_ids:new P.Tensor("int64",E,S),attention_mask:new P.Tensor("int64",new Array(E.length).fill(1),S),images_seq_mask:new P.Tensor("bool",L,S),images_emb_mask:new P.Tensor("bool",new Array(H*this.num_image_tokens).fill(!0),[1,H,this.num_image_tokens])};if(C&&C.length>0){const ee=await this.image_processor(C);return ee.pixel_values.unsqueeze_(0),{...se,...ee}}return se}}Te(b,"image_processor_class",u.AutoImageProcessor),Te(b,"tokenizer_class",h.AutoTokenizer),Te(b,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(t,s,n)=>{n.r(s),n.d(s,{JinaCLIPImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{constructor(v){const{resize_mode:P,fill_color:f,interpolation:b,size:x,...k}=v,C=P==="squash"?{width:x,height:x}:P==="shortest"?{shortest_edge:x}:{longest_edge:x},N=b==="bicubic"?3:2;super({...k,size:C,resample:N,do_center_crop:!0,crop_size:x,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(t,s,n)=>{n.r(s),n.d(s,{JinaCLIPProcessor:()=>v});var o=n("./src/base/processing_utils.js"),u=n("./src/models/auto/image_processing_auto.js"),h=n("./src/tokenizers.js");class v extends o.Processor{async _call(f=null,b=null,x={}){if(!f&&!b)throw new Error("Either text or images must be provided");const k=f?this.tokenizer(f,x):{},C=b?await this.image_processor(b,x):{};return{...k,...C}}}Te(v,"tokenizer_class",h.AutoTokenizer),Te(v,"image_processor_class",u.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(t,s,n)=>{n.r(s),n.d(s,{LlavaOnevisionImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(t,s,n)=>{n.r(s),n.d(s,{Mask2FormerImageProcessor:()=>u});var o=n("./src/models/maskformer/image_processing_maskformer.js");class u extends o.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(t,s,n)=>{n.r(s),n.d(s,{MaskFormerFeatureExtractor:()=>h,MaskFormerImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{post_process_panoptic_segmentation(...P){return(0,o.post_process_panoptic_segmentation)(...P)}post_process_instance_segmentation(...P){return(0,o.post_process_instance_segmentation)(...P)}}class h extends u{}},"./src/models/mgp_str/processing_mgp_str.js":(t,s,n)=>{n.r(s),n.d(s,{MgpstrProcessor:()=>f});var o=n("./src/base/processing_utils.js"),u=n("./src/models/auto/image_processing_auto.js"),h=n("./src/tokenizers.js"),v=n("./src/utils/maths.js");const P={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class f extends o.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(x,k){if(!P.hasOwnProperty(k))throw new Error(`Format ${k} is not supported.`);const[C,N]=P[k],X=this[C].bind(this),[oe,re]=x.dims,V=[],H=[],te=x.tolist();for(let D=0;D<oe;++D){const E=te[D],L=[],S=[];for(let ee=1;ee<re;++ee){const[pe,he]=(0,v.max)((0,v.softmax)(E[ee]));if(S.push(pe),he==N)break;L.push(he)}const se=S.length>0?S.reduce((ee,pe)=>ee*pe,1):0;H.push(L),V.push(se)}return[X(H),V]}char_decode(x){return this.char_tokenizer.batch_decode(x).map(k=>k.replaceAll(" ",""))}bpe_decode(x){return this.bpe_tokenizer.batch_decode(x)}wp_decode(x){return this.wp_tokenizer.batch_decode(x).map(k=>k.replaceAll(" ",""))}batch_decode([x,k,C]){const[N,X]=this._decode_helper(x,"char"),[oe,re]=this._decode_helper(k,"bpe"),[V,H]=this._decode_helper(C,"wp"),te=[],G=[];for(let D=0;D<N.length;++D){const[E,L]=(0,v.max)([X[D],re[D],H[D]]);te.push([N[D],oe[D],V[D]][L]),G.push(E)}return{generated_text:te,scores:G,char_preds:N,bpe_preds:oe,wp_preds:V}}static async from_pretrained(...x){const k=await super.from_pretrained(...x),C=await h.AutoTokenizer.from_pretrained("Xenova/gpt2"),N=await h.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return k.components={image_processor:k.image_processor,char_tokenizer:k.tokenizer,bpe_tokenizer:C,wp_tokenizer:N},k}async _call(x,k=null){const C=await this.image_processor(x);return k&&(C.labels=this.tokenizer(k).input_ids),C}}Te(f,"tokenizer_class",h.AutoTokenizer),Te(f,"image_processor_class",u.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(t,s,n)=>{n.r(s),n.d(s,{MobileNetV1FeatureExtractor:()=>h,MobileNetV1ImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}class h extends u{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(t,s,n)=>{n.r(s),n.d(s,{MobileNetV2FeatureExtractor:()=>h,MobileNetV2ImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}class h extends u{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(t,s,n)=>{n.r(s),n.d(s,{MobileNetV3FeatureExtractor:()=>h,MobileNetV3ImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}class h extends u{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(t,s,n)=>{n.r(s),n.d(s,{MobileNetV4FeatureExtractor:()=>h,MobileNetV4ImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}class h extends u{}},"./src/models/mobilevit/image_processing_mobilevit.js":(t,s,n)=>{n.r(s),n.d(s,{MobileViTFeatureExtractor:()=>h,MobileViTImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}class h extends u{}},"./src/models/nougat/image_processing_nougat.js":(t,s,n)=>{n.r(s),n.d(s,{NougatImageProcessor:()=>u});var o=n("./src/models/donut/image_processing_donut.js");class u extends o.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(t,s,n)=>{n.r(s),n.d(s,{Owlv2ImageProcessor:()=>u});var o=n("./src/models/owlvit/image_processing_owlvit.js");class u extends o.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(t,s,n)=>{n.r(s),n.d(s,{OwlViTFeatureExtractor:()=>h,OwlViTImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{post_process_object_detection(...P){return(0,o.post_process_object_detection)(...P)}}class h extends u{}},"./src/models/owlvit/processing_owlvit.js":(t,s,n)=>{n.r(s),n.d(s,{OwlViTProcessor:()=>v});var o=n("./src/base/processing_utils.js"),u=n("./src/models/auto/image_processing_auto.js"),h=n("./src/tokenizers.js");class v extends o.Processor{}Te(v,"tokenizer_class",h.AutoTokenizer),Te(v,"image_processor_class",u.AutoImageProcessor)},"./src/models/processors.js":(t,s,n)=>{n.r(s),n.d(s,{Florence2Processor:()=>o.Florence2Processor,Idefics3Processor:()=>h.Idefics3Processor,JinaCLIPProcessor:()=>P.JinaCLIPProcessor,MgpstrProcessor:()=>u.MgpstrProcessor,OwlViTProcessor:()=>f.OwlViTProcessor,PyAnnoteProcessor:()=>b.PyAnnoteProcessor,Qwen2VLProcessor:()=>x.Qwen2VLProcessor,SamProcessor:()=>k.SamProcessor,SpeechT5Processor:()=>C.SpeechT5Processor,VLChatProcessor:()=>v.VLChatProcessor,Wav2Vec2ProcessorWithLM:()=>N.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>X.WhisperProcessor});var o=n("./src/models/florence2/processing_florence2.js"),u=n("./src/models/mgp_str/processing_mgp_str.js"),h=n("./src/models/idefics3/processing_idefics3.js"),v=n("./src/models/janus/processing_janus.js"),P=n("./src/models/jina_clip/processing_jina_clip.js"),f=n("./src/models/owlvit/processing_owlvit.js"),b=n("./src/models/pyannote/processing_pyannote.js"),x=n("./src/models/qwen2_vl/processing_qwen2_vl.js"),k=n("./src/models/sam/processing_sam.js"),C=n("./src/models/speecht5/processing_speecht5.js"),N=n("./src/models/wav2vec2/processing_wav2vec2.js"),X=n("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(t,s,n)=>{n.r(s),n.d(s,{PvtImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(t,s,n)=>{n.r(s),n.d(s,{PyAnnoteFeatureExtractor:()=>h});var o=n("./src/base/feature_extraction_utils.js"),u=n("./src/utils/tensor.js");class h extends o.FeatureExtractor{async _call(P){(0,o.validate_audio_inputs)(P,"PyAnnoteFeatureExtractor"),P instanceof Float64Array&&(P=new Float32Array(P));const f=[1,1,P.length];return{input_values:new u.Tensor("float32",P,f)}}}},"./src/models/pyannote/processing_pyannote.js":(t,s,n)=>{n.r(s),n.d(s,{PyAnnoteProcessor:()=>v});var o=n("./src/base/processing_utils.js"),u=n("./src/models/auto/feature_extraction_auto.js"),h=n("./src/utils/maths.js");class v extends o.Processor{async _call(f){return await this.feature_extractor(f)}samples_to_frames(f){return(f-this.config.offset)/this.config.step}post_process_speaker_diarization(f,b){const x=b/this.samples_to_frames(b)/this.config.sampling_rate,k=[];for(const C of f.tolist()){const N=[];let X=-1;for(let oe=0;oe<C.length;++oe){const re=(0,h.softmax)(C[oe]),[V,H]=(0,h.max)(re),[te,G]=[oe,oe+1];H!==X?(X=H,N.push({id:H,start:te,end:G,score:V})):(N.at(-1).end=G,N.at(-1).score+=V)}k.push(N.map(({id:oe,start:re,end:V,score:H})=>({id:oe,start:re*x,end:V*x,confidence:H/(V-re)})))}return k}}Te(v,"feature_extractor_class",u.AutoFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(t,s,n)=>{n.r(s),n.d(s,{Qwen2VLImageProcessor:()=>h});var o=n("./src/base/image_processors_utils.js"),u=n("./src/utils/tensor.js");class h extends o.ImageProcessor{async _call(P,...f){const{pixel_values:b,original_sizes:x,reshaped_input_sizes:k}=await super._call(P,...f);let C=b;const{temporal_patch_size:N,merge_size:X,patch_size:oe}=this.config;C.dims[0]===1&&(C=(0,u.cat)(Array.from({length:N},()=>C),0));const re=C.dims[0]/N,V=C.dims[1],H=Math.floor(C.dims[2]/oe),te=Math.floor(C.dims[3]/oe),G=C.view(re,N,V,Math.floor(H/X),X,oe,Math.floor(te/X),X,oe).permute(0,3,6,4,7,2,1,5,8).view(re*H*te,V*N*oe*oe),D=new u.Tensor("int64",[re,H,te],[1,3]);return{pixel_values:G,image_grid_thw:D,original_sizes:x,reshaped_input_sizes:k}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(t,s,n)=>{n.r(s),n.d(s,{Qwen2VLProcessor:()=>v});var o=n("./src/base/processing_utils.js"),u=n("./src/models/auto/image_processing_auto.js"),h=n("./src/tokenizers.js");n("./src/utils/image.js");class v extends o.Processor{async _call(f,b=null,...x){Array.isArray(f)||(f=[f]);let k,C;if(b&&(k=await this.image_processor(b),C=k.image_grid_thw),C){let X=this.image_processor.config.merge_size**2,oe=0;const re=C.tolist();f=f.map(V=>{for(;V.includes("<|image_pad|>");){const H=Number(re[oe++].reduce((te,G)=>te*G,1n));V=V.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(H/X)))}return V.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(f),...k}}}Te(v,"image_processor_class",u.AutoImageProcessor),Te(v,"tokenizer_class",h.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(t,s,n)=>{n.r(s),n.d(s,{RTDetrImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{post_process_object_detection(...v){return(0,o.post_process_object_detection)(...v)}}},"./src/models/sam/image_processing_sam.js":(t,s,n)=>{n.r(s),n.d(s,{SamImageProcessor:()=>v});var o=n("./src/base/image_processors_utils.js"),u=n("./src/utils/core.js"),h=n("./src/utils/tensor.js");class v extends o.ImageProcessor{reshape_input_points(f,b,x,k=!1){f=structuredClone(f);let C=(0,u.calculateDimensions)(f);if(C.length===3)k||(C=[1,...C]),f=[f];else if(C.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let N=0;N<f.length;++N){let X=b[N],oe=x[N],re=[oe[0]/X[0],oe[1]/X[1]];for(let V=0;V<f[N].length;++V)for(let H=0;H<f[N][V].length;++H)for(let te=0;te<f[N][V][H].length;++te)f[N][V][H][te]*=re[te%2]}return new h.Tensor("float32",Float32Array.from(f.flat(1/0)),C)}add_input_labels(f,b){let x=(0,u.calculateDimensions)(f);if(x.length===2)x=[1,...x],f=[f];else if(x.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(x.some((k,C)=>k!==b.dims[C]))throw Error(`The first ${x.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new h.Tensor("int64",f.flat(1/0).map(BigInt),x)}async _call(f,{input_points:b=null,input_labels:x=null,input_boxes:k=null}={}){const C=await super._call(f);if(b&&(C.input_points=this.reshape_input_points(b,C.original_sizes,C.reshaped_input_sizes)),x){if(!C.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");C.input_labels=this.add_input_labels(x,C.input_points)}return k&&(C.input_boxes=this.reshape_input_points(k,C.original_sizes,C.reshaped_input_sizes,!0)),C}async post_process_masks(f,b,x,{mask_threshold:k=0,binarize:C=!0,pad_size:N=null}={}){const X=[];N=N??this.pad_size;const oe=[N.height,N.width];for(let re=0;re<b.length;++re){const V=b[re],H=x[re];let te=await(0,h.interpolate_4d)(f[re],{mode:"bilinear",size:oe});if(te=te.slice(null,null,[0,H[0]],[0,H[1]]),te=await(0,h.interpolate_4d)(te,{mode:"bilinear",size:V}),C){const G=te.data,D=new Uint8Array(G.length);for(let E=0;E<G.length;++E)G[E]>k&&(D[E]=1);te=new h.Tensor("bool",D,te.dims)}X.push(te)}return X}generate_crop_boxes(f,b,{crop_n_layers:x=0,overlap_ratio:k=512/1500,points_per_crop:C=32,crop_n_points_downscale_factor:N=1}={}){}}},"./src/models/sam/processing_sam.js":(t,s,n)=>{n.r(s),n.d(s,{SamProcessor:()=>h});var o=n("./src/base/processing_utils.js"),u=n("./src/models/auto/image_processing_auto.js");class h extends o.Processor{async _call(...P){return await this.image_processor(...P)}post_process_masks(...P){return this.image_processor.post_process_masks(...P)}reshape_input_points(...P){return this.image_processor.reshape_input_points(...P)}}Te(h,"image_processor_class",u.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(t,s,n)=>{n.r(s),n.d(s,{SeamlessM4TFeatureExtractor:()=>v});var o=n("./src/base/feature_extraction_utils.js"),u=n("./src/utils/tensor.js"),h=n("./src/utils/audio.js");class v extends o.FeatureExtractor{constructor(f){super(f);const b=this.config.sampling_rate,x=(0,h.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(b/2),b,null,"kaldi",!0);for(let k=0;k<x.length;++k)x[k].push(0);this.mel_filters=x,this.window=(0,h.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(f,b){return f=f.map(x=>x*32768),(0,h.spectrogram)(f,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:b,transpose:!0})}async _call(f,{padding:b=!0,pad_to_multiple_of:x=2,do_normalize_per_mel_bins:k=!0,return_attention_mask:C=!0}={}){(0,o.validate_audio_inputs)(f,"SeamlessM4TFeatureExtractor");let N=await this._extract_fbank_features(f,this.config.max_length);if(k){const[D,E]=N.dims,L=N.data;for(let S=0;S<E;++S){let se=0;for(let be=0;be<D;++be)se+=L[be*E+S];const ee=se/D;let pe=0;for(let be=0;be<D;++be)pe+=(L[be*E+S]-ee)**2;pe/=D-1;const he=Math.sqrt(pe+1e-7);for(let be=0;be<D;++be){const Ce=be*E+S;L[Ce]=(L[Ce]-ee)/he}}}let X;if(b){const[D,E]=N.dims,L=N.data,S=D%x;if(S>0){const se=new Float32Array(E*(D+S));se.set(L),se.fill(this.config.padding_value,L.length);const ee=D+S;N=new u.Tensor(N.type,se,[ee,E]),C&&(X=new u.Tensor("int64",new BigInt64Array(ee),[1,ee]),X.data.fill(1n,0,D))}}const[oe,re]=N.dims,V=this.config.stride;if(oe%V!==0)throw new Error(`The number of frames (${oe}) must be a multiple of the stride (${V}).`);const te=N.view(1,Math.floor(oe/V),re*V),G={input_features:te};if(C){const D=te.dims[1],E=new BigInt64Array(D);if(X){const L=X.data;for(let S=1,se=0;S<oe;S+=V,++se)E[se]=L[S]}else E.fill(1n);G.attention_mask=new u.Tensor("int64",E,[1,D])}return G}}},"./src/models/segformer/image_processing_segformer.js":(t,s,n)=>{n.r(s),n.d(s,{SegformerFeatureExtractor:()=>h,SegformerImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{post_process_semantic_segmentation(...P){return(0,o.post_process_semantic_segmentation)(...P)}}class h extends u{}},"./src/models/siglip/image_processing_siglip.js":(t,s,n)=>{n.r(s),n.d(s,{SiglipImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(t,s,n)=>{n.r(s),n.d(s,{SpeechT5FeatureExtractor:()=>u});var o=n("./src/base/feature_extraction_utils.js");class u extends o.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(t,s,n)=>{n.r(s),n.d(s,{SpeechT5Processor:()=>v});var o=n("./src/base/processing_utils.js"),u=n("./src/tokenizers.js"),h=n("./src/models/auto/feature_extraction_auto.js");class v extends o.Processor{async _call(f){return await this.feature_extractor(f)}}Te(v,"tokenizer_class",u.AutoTokenizer),Te(v,"feature_extractor_class",h.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(t,s,n)=>{n.r(s),n.d(s,{Swin2SRImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{pad_image(v,P,f,b={}){const[x,k,C]=P;return super.pad_image(v,P,{width:k+(f-k%f)%f,height:x+(f-x%f)%f},{mode:"symmetric",center:!1,constant_values:-1,...b})}}},"./src/models/vit/image_processing_vit.js":(t,s,n)=>{n.r(s),n.d(s,{ViTFeatureExtractor:()=>h,ViTImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{}class h extends u{}},"./src/models/vitmatte/image_processing_vitmatte.js":(t,s,n)=>{n.r(s),n.d(s,{VitMatteImageProcessor:()=>h});var o=n("./src/base/image_processors_utils.js"),u=n("./src/utils/tensor.js");class h extends o.ImageProcessor{async _call(P,f){Array.isArray(P)||(P=[P]),Array.isArray(f)||(f=[f]);const b=await Promise.all(P.map(C=>this.preprocess(C))),x=await Promise.all(f.map(C=>this.preprocess(C,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,u.stack)(b.map((C,N)=>(0,u.cat)([C.pixel_values,x[N].pixel_values],0)),0),original_sizes:b.map(C=>C.original_size),reshaped_input_sizes:b.map(C=>C.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(t,s,n)=>{n.r(s),n.d(s,{VitPoseImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{post_process_pose_estimation(v,P,{threshold:f=null}={}){const b=v.tolist(),[x,k,C,N]=v.dims,X=[];for(let oe=0;oe<x;++oe){const re=b[oe],V=P[oe],H=[];for(let te=0;te<V.length;++te){const G=V[te],D=[],E=[],L=[],S=G.at(-2)/N,se=G.at(-1)/C;for(let ee=0;ee<re.length;++ee){let[pe,he]=[0,0],be=0,Ce=-1/0;const ke=re[ee];for(let fe=0;fe<ke.length;++fe){const K=ke[fe];for(let me=0;me<K.length;++me){const ge=K[me];be+=ge,Ce=Math.max(Ce,ge),pe+=(me+.5)*ge,he+=fe*ge}}if(f!=null&&Ce<f)continue;const je=[S*pe/be,se*he/be];D.push(je),L.push(ee),E.push(Ce)}H.push({bbox:G,scores:E,labels:L,keypoints:D})}X.push(H)}return X}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(t,s,n)=>{n.r(s),n.d(s,{Wav2Vec2FeatureExtractor:()=>h});var o=n("./src/base/feature_extraction_utils.js"),u=n("./src/utils/tensor.js");class h extends o.FeatureExtractor{_zero_mean_unit_var_norm(P){const b=P.reduce((k,C)=>k+C,0)/P.length,x=P.reduce((k,C)=>k+(C-b)**2,0)/P.length;return P.map(k=>(k-b)/Math.sqrt(x+1e-7))}async _call(P){(0,o.validate_audio_inputs)(P,"Wav2Vec2FeatureExtractor"),P instanceof Float64Array&&(P=new Float32Array(P));let f=P;this.config.do_normalize&&(f=this._zero_mean_unit_var_norm(f));const b=[1,f.length];return{input_values:new u.Tensor("float32",f,b),attention_mask:new u.Tensor("int64",new BigInt64Array(f.length).fill(1n),b)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(t,s,n)=>{n.r(s),n.d(s,{Wav2Vec2ProcessorWithLM:()=>h});var o=n("./src/base/processing_utils.js"),u=n("./src/models/auto/feature_extraction_auto.js");class h extends o.Processor{async _call(P){return await this.feature_extractor(P)}}Te(h,"feature_extractor_class",u.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(t,s,n)=>{n.r(s),n.d(s,{WeSpeakerFeatureExtractor:()=>h});var o=n("./src/base/feature_extraction_utils.js");n("./src/utils/tensor.js");var u=n("./src/utils/audio.js");class h extends o.FeatureExtractor{constructor(P){super(P);const f=this.config.sampling_rate,b=(0,u.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(f/2),f,null,"kaldi",!0);for(let x=0;x<b.length;++x)b[x].push(0);this.mel_filters=b,this.window=(0,u.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(P){return P=P.map(f=>f*32768),(0,u.spectrogram)(P,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(P){(0,o.validate_audio_inputs)(P,"WeSpeakerFeatureExtractor");const f=(await this._extract_fbank_features(P)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const b=f.mean(1).data,x=f.data,[k,C,N]=f.dims;for(let X=0;X<k;++X){const oe=X*C*N,re=X*N;for(let V=0;V<C;++V){const H=oe+V*N;for(let te=0;te<N;++te)x[H+te]-=b[re+te]}}}return{input_features:f}}}},"./src/models/whisper/common_whisper.js":(t,s,n)=>{n.r(s),n.d(s,{WHISPER_LANGUAGE_MAPPING:()=>u,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>h,whisper_language_to_code:()=>v});const o=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],u=new Map(o),h=new Map([...o.map(([P,f])=>[f,P]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function v(P){P=P.toLowerCase();let f=h.get(P);if(f===void 0)if(u.has(P))f=P;else{const x=P.length===2?u.keys():u.values();throw new Error(`Language "${P}" is not supported. Must be one of: ${JSON.stringify(x)}`)}return f}},"./src/models/whisper/feature_extraction_whisper.js":(t,s,n)=>{n.r(s),n.d(s,{WhisperFeatureExtractor:()=>v});var o=n("./src/base/feature_extraction_utils.js");n("./src/utils/tensor.js");var u=n("./src/utils/audio.js"),h=n("./src/utils/maths.js");class v extends o.FeatureExtractor{constructor(f){var b;super(f),(b=this.config).mel_filters??(b.mel_filters=(0,u.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,u.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(f){const b=await(0,u.spectrogram)(f,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),x=b.data,k=(0,h.max)(x)[0];for(let C=0;C<x.length;++C)x[C]=(Math.max(x[C],k-8)+4)/4;return b}async _call(f){(0,o.validate_audio_inputs)(f,"WhisperFeatureExtractor");let b;return f.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),b=f.slice(0,this.config.n_samples)):(b=new Float32Array(this.config.n_samples),b.set(f)),{input_features:(await this._extract_fbank_features(b)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(t,s,n)=>{n.r(s),n.d(s,{WhisperGenerationConfig:()=>u});var o=n("./src/generation/configuration_utils.js");class u extends o.GenerationConfig{constructor(){super(...arguments);Te(this,"return_timestamps",null);Te(this,"return_token_timestamps",null);Te(this,"num_frames",null);Te(this,"alignment_heads",null);Te(this,"task",null);Te(this,"language",null);Te(this,"no_timestamps_token_id",null);Te(this,"prompt_ids",null);Te(this,"is_multilingual",null);Te(this,"lang_to_id",null);Te(this,"task_to_id",null);Te(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(t,s,n)=>{n.r(s),n.d(s,{WhisperProcessor:()=>v});var o=n("./src/models/auto/feature_extraction_auto.js"),u=n("./src/tokenizers.js"),h=n("./src/base/processing_utils.js");class v extends h.Processor{async _call(f){return await this.feature_extractor(f)}}Te(v,"tokenizer_class",u.AutoTokenizer),Te(v,"feature_extractor_class",o.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(t,s,n)=>{n.r(s),n.d(s,{YolosFeatureExtractor:()=>h,YolosImageProcessor:()=>u});var o=n("./src/base/image_processors_utils.js");class u extends o.ImageProcessor{post_process_object_detection(...P){return(0,o.post_process_object_detection)(...P)}}class h extends u{}},"./src/ops/registry.js":(t,s,n)=>{n.r(s),n.d(s,{TensorOpRegistry:()=>v});var o=n("./src/backends/onnx.js"),u=n("./src/utils/tensor.js");const h=async(P,f,b)=>{const x=await(0,o.createInferenceSession)(new Uint8Array(P),f);return async k=>{const C=Object.fromEntries(Object.entries(k).map(([X,oe])=>[X,oe.ort_tensor])),N=await x.run(C);return Array.isArray(b)?b.map(X=>new u.Tensor(N[X])):new u.Tensor(N[b])}};class v{static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=h([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=h([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=h([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=h([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=h([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=h([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}Te(v,"session_options",{})},"./src/pipelines.js":(t,s,n)=>{n.r(s),n.d(s,{AudioClassificationPipeline:()=>he,AutomaticSpeechRecognitionPipeline:()=>Ce,DepthEstimationPipeline:()=>Ne,DocumentQuestionAnsweringPipeline:()=>$e,FeatureExtractionPipeline:()=>ee,FillMaskPipeline:()=>te,ImageClassificationPipeline:()=>je,ImageFeatureExtractionPipeline:()=>pe,ImageSegmentationPipeline:()=>fe,ImageToImagePipeline:()=>Se,ImageToTextPipeline:()=>ke,ObjectDetectionPipeline:()=>me,Pipeline:()=>oe,QuestionAnsweringPipeline:()=>H,SummarizationPipeline:()=>D,Text2TextGenerationPipeline:()=>G,TextClassificationPipeline:()=>re,TextGenerationPipeline:()=>S,TextToAudioPipeline:()=>We,TokenClassificationPipeline:()=>V,TranslationPipeline:()=>E,ZeroShotAudioClassificationPipeline:()=>be,ZeroShotClassificationPipeline:()=>se,ZeroShotImageClassificationPipeline:()=>K,ZeroShotObjectDetectionPipeline:()=>ge,pipeline:()=>le});var o=n("./src/tokenizers.js"),u=n("./src/models.js"),h=n("./src/models/auto/processing_auto.js");n("./src/base/processing_utils.js");var v=n("./src/utils/generic.js"),P=n("./src/utils/core.js"),f=n("./src/utils/maths.js"),b=n("./src/utils/audio.js"),x=n("./src/utils/tensor.js"),k=n("./src/utils/image.js");async function C(Re){return Array.isArray(Re)||(Re=[Re]),await Promise.all(Re.map(ye=>k.RawImage.read(ye)))}async function N(Re,ye){return Array.isArray(Re)||(Re=[Re]),await Promise.all(Re.map(Ae=>typeof Ae=="string"||Ae instanceof URL?(0,b.read_audio)(Ae,ye):Ae instanceof Float64Array?new Float32Array(Ae):Ae))}function X(Re,ye){ye&&(Re=Re.map(Ue=>Ue|0));const[Ae,Ze,Ye,Qe]=Re;return{xmin:Ae,ymin:Ze,xmax:Ye,ymax:Qe}}class oe extends v.Callable{constructor({task:ye,model:Ae,tokenizer:Ze=null,processor:Ye=null}){super(),this.task=ye,this.model=Ae,this.tokenizer=Ze,this.processor=Ye}async dispose(){await this.model.dispose()}}class re extends oe{constructor(ye){super(ye)}async _call(ye,{top_k:Ae=1}={}){const Ze=this.tokenizer(ye,{padding:!0,truncation:!0}),Ye=await this.model(Ze),Qe=this.model.config.problem_type==="multi_label_classification"?ut=>ut.sigmoid():ut=>new x.Tensor("float32",(0,f.softmax)(ut.data),ut.dims),Ue=this.model.config.id2label,it=[];for(const ut of Ye.logits){const _t=Qe(ut),ht=await(0,x.topk)(_t,Ae),gt=ht[0].tolist(),ae=ht[1].tolist().map((Q,de)=>({label:Ue?Ue[Q]:`LABEL_${Q}`,score:gt[de]}));Ae===1?it.push(...ae):it.push(ae)}return Array.isArray(ye)||Ae===1?it:it[0]}}class V extends oe{constructor(ye){super(ye)}async _call(ye,{ignore_labels:Ae=["O"]}={}){const Ze=Array.isArray(ye),Ye=this.tokenizer(Ze?ye:[ye],{padding:!0,truncation:!0}),Ue=(await this.model(Ye)).logits,it=this.model.config.id2label,ut=[];for(let _t=0;_t<Ue.dims[0];++_t){const ht=Ye.input_ids[_t],gt=Ue[_t],j=[];for(let ae=0;ae<gt.dims[0];++ae){const Q=gt[ae],de=(0,f.max)(Q.data)[1],Oe=it?it[de]:`LABEL_${de}`;if(Ae.includes(Oe))continue;const et=this.tokenizer.decode([ht[ae].item()],{skip_special_tokens:!0});if(et==="")continue;const ot=(0,f.softmax)(Q.data);j.push({entity:Oe,score:ot[de],index:ae,word:et})}ut.push(j)}return Ze?ut:ut[0]}}class H extends oe{constructor(ye){super(ye)}async _call(ye,Ae,{top_k:Ze=1}={}){const Ye=this.tokenizer(ye,{text_pair:Ae,padding:!0,truncation:!0}),{start_logits:Qe,end_logits:Ue}=await this.model(Ye),it=Ye.input_ids.tolist(),ut=Ye.attention_mask.tolist(),_t=this.tokenizer.all_special_ids,ht=[];for(let gt=0;gt<Qe.dims[0];++gt){const j=it[gt],ae=j.findIndex(ct=>ct==this.tokenizer.sep_token_id);ut[gt].map((ct,Ft)=>ct==1&&(Ft===0||Ft>ae&&_t.findIndex(Tt=>Tt==j[Ft])===-1));const Q=Qe[gt].tolist(),de=Ue[gt].tolist();for(let ct=1;ct<Q.length;++ct)(ut[gt]==0||ct<=ae||_t.findIndex(Ft=>Ft==j[ct])!==-1)&&(Q[ct]=-1/0,de[ct]=-1/0);const Oe=(0,f.softmax)(Q).map((ct,Ft)=>[ct,Ft]),et=(0,f.softmax)(de).map((ct,Ft)=>[ct,Ft]);Oe[0][0]=0,et[0][0]=0;const ot=(0,P.product)(Oe,et).filter(ct=>ct[0][1]<=ct[1][1]).map(ct=>[ct[0][1],ct[1][1],ct[0][0]*ct[1][0]]).sort((ct,Ft)=>Ft[2]-ct[2]);for(let ct=0;ct<Math.min(ot.length,Ze);++ct){const[Ft,Tt,kt]=ot[ct],Ct=j.slice(Ft,Tt+1),hr=this.tokenizer.decode(Ct,{skip_special_tokens:!0});ht.push({answer:hr,score:kt})}}return Ze===1?ht[0]:ht}}class te extends oe{constructor(ye){super(ye)}async _call(ye,{top_k:Ae=5}={}){const Ze=this.tokenizer(ye,{padding:!0,truncation:!0}),{logits:Ye}=await this.model(Ze),Qe=[],Ue=Ze.input_ids.tolist();for(let it=0;it<Ue.length;++it){const ut=Ue[it],_t=ut.findIndex(Q=>Q==this.tokenizer.mask_token_id);if(_t===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const ht=Ye[it][_t],gt=await(0,x.topk)(new x.Tensor("float32",(0,f.softmax)(ht.data),ht.dims),Ae),j=gt[0].tolist(),ae=gt[1].tolist();Qe.push(ae.map((Q,de)=>{const Oe=ut.slice();return Oe[_t]=Q,{score:j[de],token:Number(Q),token_str:this.tokenizer.model.vocab[Q],sequence:this.tokenizer.decode(Oe,{skip_special_tokens:!0})}}))}return Array.isArray(ye)?Qe:Qe[0]}}class G extends oe{constructor(Ae){super(Ae);Te(this,"_key","generated_text")}async _call(Ae,Ze={}){Array.isArray(Ae)||(Ae=[Ae]),this.model.config.prefix&&(Ae=Ae.map(_t=>this.model.config.prefix+_t));const Ye=this.model.config.task_specific_params;Ye&&Ye[this.task]&&Ye[this.task].prefix&&(Ae=Ae.map(_t=>Ye[this.task].prefix+_t));const Qe=this.tokenizer,Ue={padding:!0,truncation:!0};let it;this instanceof E&&"_build_translation_inputs"in Qe?it=Qe._build_translation_inputs(Ae,Ue,Ze):it=Qe(Ae,Ue);const ut=await this.model.generate({...it,...Ze});return Qe.batch_decode(ut,{skip_special_tokens:!0}).map(_t=>({[this._key]:_t}))}}class D extends G{constructor(Ae){super(Ae);Te(this,"_key","summary_text")}}class E extends G{constructor(Ae){super(Ae);Te(this,"_key","translation_text")}}function L(Re){return Array.isArray(Re)&&Re.every(ye=>"role"in ye&&"content"in ye)}class S extends oe{constructor(ye){super(ye)}async _call(ye,Ae={}){let Ze=!1,Ye=!1,Qe;if(typeof ye=="string")Qe=ye=[ye];else if(Array.isArray(ye)&&ye.every(ae=>typeof ae=="string"))Ze=!0,Qe=ye;else{if(L(ye))ye=[ye];else if(Array.isArray(ye)&&ye.every(L))Ze=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");Ye=!0,Qe=ye.map(ae=>this.tokenizer.apply_chat_template(ae,{tokenize:!1,add_generation_prompt:!0}))}const Ue=Ae.add_special_tokens??!1,it=Ye?!1:Ae.return_full_text??!0;this.tokenizer.padding_side="left";const ut=this.tokenizer(Qe,{add_special_tokens:Ue,padding:!0,truncation:!0}),_t=await this.model.generate({...ut,...Ae}),ht=this.tokenizer.batch_decode(_t,{skip_special_tokens:!0});let gt;!it&&ut.input_ids.dims.at(-1)>0&&(gt=this.tokenizer.batch_decode(ut.input_ids,{skip_special_tokens:!0}).map(ae=>ae.length));const j=Array.from({length:ye.length},ae=>[]);for(let ae=0;ae<ht.length;++ae){const Q=Math.floor(ae/_t.dims[0]*ye.length);gt&&(ht[ae]=ht[ae].slice(gt[Q])),j[Q].push({generated_text:Ye?[...ye[Q],{role:"assistant",content:ht[ae]}]:ht[ae]})}return!Ze&&j.length===1?j[0]:j}}class se extends oe{constructor(ye){super(ye),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Ae,Ze])=>[Ae.toLowerCase(),Ze])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(ye,Ae,{hypothesis_template:Ze="This example is {}.",multi_label:Ye=!1}={}){const Qe=Array.isArray(ye);Qe||(ye=[ye]),Array.isArray(Ae)||(Ae=[Ae]);const Ue=Ae.map(_t=>Ze.replace("{}",_t)),it=Ye||Ae.length===1,ut=[];for(const _t of ye){const ht=[];for(const ae of Ue){const Q=this.tokenizer(_t,{text_pair:ae,padding:!0,truncation:!0}),de=await this.model(Q);it?ht.push([de.logits.data[this.contradiction_id],de.logits.data[this.entailment_id]]):ht.push(de.logits.data[this.entailment_id])}const j=(it?ht.map(ae=>(0,f.softmax)(ae)[1]):(0,f.softmax)(ht)).map((ae,Q)=>[ae,Q]).sort((ae,Q)=>Q[0]-ae[0]);ut.push({sequence:_t,labels:j.map(ae=>Ae[ae[1]]),scores:j.map(ae=>ae[0])})}return Qe?ut:ut[0]}}class ee extends oe{constructor(ye){super(ye)}async _call(ye,{pooling:Ae="none",normalize:Ze=!1,quantize:Ye=!1,precision:Qe="binary"}={}){const Ue=this.tokenizer(ye,{padding:!0,truncation:!0}),it=await this.model(Ue);let ut=it.last_hidden_state??it.logits??it.token_embeddings;if(Ae!=="none")if(Ae==="mean")ut=(0,x.mean_pooling)(ut,Ue.attention_mask);else if(Ae==="cls")ut=ut.slice(null,0);else throw Error(`Pooling method '${Ae}' not supported.`);return Ze&&(ut=ut.normalize(2,-1)),Ye&&(ut=(0,x.quantize_embeddings)(ut,Qe)),ut}}class pe extends oe{constructor(ye){super(ye)}async _call(ye,{pool:Ae=null}={}){const Ze=await C(ye),{pixel_values:Ye}=await this.processor(Ze),Qe=await this.model({pixel_values:Ye});let Ue;if(Ae){if(!("pooler_output"in Qe))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Ue=Qe.pooler_output}else Ue=Qe.last_hidden_state??Qe.logits??Qe.image_embeds;return Ue}}class he extends oe{constructor(ye){super(ye)}async _call(ye,{top_k:Ae=5}={}){const Ze=this.processor.feature_extractor.config.sampling_rate,Ye=await N(ye,Ze),Qe=this.model.config.id2label,Ue=[];for(const it of Ye){const ut=await this.processor(it),ht=(await this.model(ut)).logits[0],gt=await(0,x.topk)(new x.Tensor("float32",(0,f.softmax)(ht.data),ht.dims),Ae),j=gt[0].tolist(),Q=gt[1].tolist().map((de,Oe)=>({label:Qe?Qe[de]:`LABEL_${de}`,score:j[Oe]}));Ue.push(Q)}return Array.isArray(ye)?Ue:Ue[0]}}class be extends oe{constructor(ye){super(ye)}async _call(ye,Ae,{hypothesis_template:Ze="This is a sound of {}."}={}){const Ye=!Array.isArray(ye);Ye&&(ye=[ye]);const Qe=Ae.map(ht=>Ze.replace("{}",ht)),Ue=this.tokenizer(Qe,{padding:!0,truncation:!0}),it=this.processor.feature_extractor.config.sampling_rate,ut=await N(ye,it),_t=[];for(const ht of ut){const gt=await this.processor(ht),j=await this.model({...Ue,...gt}),ae=(0,f.softmax)(j.logits_per_audio.data);_t.push([...ae].map((Q,de)=>({score:Q,label:Ae[de]})))}return Ye?_t[0]:_t}}class Ce extends oe{constructor(ye){super(ye)}async _call(ye,Ae={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(ye,Ae);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(ye,Ae);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(ye,Ae){Ae.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),Ae.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const Ze=!Array.isArray(ye);Ze&&(ye=[ye]);const Ye=this.processor.feature_extractor.config.sampling_rate,Qe=await N(ye,Ye),Ue=[];for(const it of Qe){const ut=await this.processor(it),ht=(await this.model(ut)).logits[0],gt=[];for(const ae of ht)gt.push((0,f.max)(ae.data)[1]);const j=this.tokenizer.decode(gt);Ue.push({text:j})}return Ze?Ue[0]:Ue}async _call_whisper(ye,Ae){const Ze=Ae.return_timestamps??!1,Ye=Ae.chunk_length_s??0,Qe=Ae.force_full_sequences??!1;let Ue=Ae.stride_length_s??null;const it={...Ae};Ze==="word"&&(it.return_token_timestamps=!0,it.return_timestamps=!1);const ut=!Array.isArray(ye);ut&&(ye=[ye]);const _t=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,ht=this.processor.feature_extractor.config.hop_length,gt=this.processor.feature_extractor.config.sampling_rate,j=await N(ye,gt),ae=[];for(const Q of j){let de=[];if(Ye>0){if(Ue===null)Ue=Ye/6;else if(Ye<=Ue)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const ot=gt*Ye,ct=gt*Ue,Ft=ot-2*ct;let Tt=0;for(;;){const kt=Tt+ot,Ct=Q.subarray(Tt,kt),hr=await this.processor(Ct),Cr=Tt===0,as=kt>=Q.length;if(de.push({stride:[Ct.length,Cr?0:ct,as?0:ct],input_features:hr.input_features,is_last:as}),as)break;Tt+=Ft}}else de=[{stride:[Q.length,0,0],input_features:(await this.processor(Q)).input_features,is_last:!0}];for(const ot of de){it.num_frames=Math.floor(ot.stride[0]/ht);const ct=await this.model.generate({inputs:ot.input_features,...it});Ze==="word"?(ot.tokens=ct.sequences.tolist()[0],ot.token_timestamps=ct.token_timestamps.tolist()[0].map(Ft=>(0,f.round)(Ft,2))):ot.tokens=ct[0].tolist(),ot.stride=ot.stride.map(Ft=>Ft/gt)}const[Oe,et]=this.tokenizer._decode_asr(de,{time_precision:_t,return_timestamps:Ze,force_full_sequences:Qe});ae.push({text:Oe,...et})}return ut?ae[0]:ae}}class ke extends oe{constructor(ye){super(ye)}async _call(ye,Ae={}){const Ze=Array.isArray(ye),Ye=await C(ye),{pixel_values:Qe}=await this.processor(Ye),Ue=[];for(const it of Qe){it.dims=[1,...it.dims];const ut=await this.model.generate({inputs:it,...Ae}),_t=this.tokenizer.batch_decode(ut,{skip_special_tokens:!0}).map(ht=>({generated_text:ht.trim()}));Ue.push(_t)}return Ze?Ue:Ue[0]}}class je extends oe{constructor(ye){super(ye)}async _call(ye,{top_k:Ae=5}={}){const Ze=await C(ye),{pixel_values:Ye}=await this.processor(Ze),Qe=await this.model({pixel_values:Ye}),Ue=this.model.config.id2label,it=[];for(const ut of Qe.logits){const _t=await(0,x.topk)(new x.Tensor("float32",(0,f.softmax)(ut.data),ut.dims),Ae),ht=_t[0].tolist(),j=_t[1].tolist().map((ae,Q)=>({label:Ue?Ue[ae]:`LABEL_${ae}`,score:ht[Q]}));it.push(j)}return Array.isArray(ye)?it:it[0]}}class fe extends oe{constructor(ye){super(ye),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(ye,{threshold:Ae=.5,mask_threshold:Ze=.5,overlap_mask_area_threshold:Ye=.8,label_ids_to_fuse:Qe=null,target_sizes:Ue=null,subtask:it=null}={}){if(Array.isArray(ye)&&ye.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const _t=await C(ye),ht=_t.map(et=>[et.height,et.width]),{pixel_values:gt,pixel_mask:j}=await this.processor(_t),ae=await this.model({pixel_values:gt,pixel_mask:j});let Q=null;if(it!==null)Q=this.subtasks_mapping[it];else for(let[et,ot]of Object.entries(this.subtasks_mapping))if(ot in this.processor.image_processor){Q=this.processor.image_processor[ot].bind(this.processor.image_processor),it=et;break}const de=this.model.config.id2label,Oe=[];if(it==="panoptic"||it==="instance"){const et=Q(ae,Ae,Ze,Ye,Qe,Ue??ht)[0],ot=et.segmentation;for(const ct of et.segments_info){const Ft=new Uint8ClampedArray(ot.data.length);for(let kt=0;kt<ot.data.length;++kt)ot.data[kt]===ct.id&&(Ft[kt]=255);const Tt=new k.RawImage(Ft,ot.dims[1],ot.dims[0],1);Oe.push({score:ct.score,label:de[ct.label_id],mask:Tt})}}else if(it==="semantic"){const{segmentation:et,labels:ot}=Q(ae,Ue??ht)[0];for(const ct of ot){const Ft=new Uint8ClampedArray(et.data.length);for(let kt=0;kt<et.data.length;++kt)et.data[kt]===ct&&(Ft[kt]=255);const Tt=new k.RawImage(Ft,et.dims[1],et.dims[0],1);Oe.push({score:null,label:de[ct],mask:Tt})}}else throw Error(`Subtask ${it} not supported.`);return Oe}}class K extends oe{constructor(ye){super(ye)}async _call(ye,Ae,{hypothesis_template:Ze="This is a photo of {}"}={}){const Ye=Array.isArray(ye),Qe=await C(ye),Ue=Ae.map(j=>Ze.replace("{}",j)),it=this.tokenizer(Ue,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:ut}=await this.processor(Qe),_t=await this.model({...it,pixel_values:ut}),ht=this.model.config.model_type==="siglip"?j=>j.sigmoid().data:j=>(0,f.softmax)(j.data),gt=[];for(const j of _t.logits_per_image){const Q=[...ht(j)].map((de,Oe)=>({score:de,label:Ae[Oe]}));Q.sort((de,Oe)=>Oe.score-de.score),gt.push(Q)}return Ye?gt:gt[0]}}class me extends oe{constructor(ye){super(ye)}async _call(ye,{threshold:Ae=.9,percentage:Ze=!1}={}){const Ye=Array.isArray(ye);if(Ye&&ye.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Qe=await C(ye),Ue=Ze?null:Qe.map(ae=>[ae.height,ae.width]),{pixel_values:it,pixel_mask:ut}=await this.processor(Qe),_t=await this.model({pixel_values:it,pixel_mask:ut}),ht=this.processor.image_processor.post_process_object_detection(_t,Ae,Ue),gt=this.model.config.id2label,j=ht.map(ae=>ae.boxes.map((Q,de)=>({score:ae.scores[de],label:gt[ae.classes[de]],box:X(Q,!Ze)})));return Ye?j:j[0]}}class ge extends oe{constructor(ye){super(ye)}async _call(ye,Ae,{threshold:Ze=.1,top_k:Ye=null,percentage:Qe=!1}={}){const Ue=Array.isArray(ye),it=await C(ye),ut=this.tokenizer(Ae,{padding:!0,truncation:!0}),_t=await this.processor(it),ht=[];for(let gt=0;gt<it.length;++gt){const j=it[gt],ae=Qe?null:[[j.height,j.width]],Q=_t.pixel_values[gt].unsqueeze_(0),de=await this.model({...ut,pixel_values:Q}),Oe=this.processor.image_processor.post_process_object_detection(de,Ze,ae,!0)[0];let et=Oe.boxes.map((ot,ct)=>({score:Oe.scores[ct],label:Ae[Oe.classes[ct]],box:X(ot,!Qe)})).sort((ot,ct)=>ct.score-ot.score);Ye!==null&&(et=et.slice(0,Ye)),ht.push(et)}return Ue?ht:ht[0]}}class $e extends oe{constructor(ye){super(ye)}async _call(ye,Ae,Ze={}){const Ye=(await C(ye))[0],{pixel_values:Qe}=await this.processor(Ye),Ue=`<s_docvqa><s_question>${Ae}</s_question><s_answer>`,it=this.tokenizer(Ue,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,ut=await this.model.generate({inputs:Qe,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:it,...Ze}),ht=this.tokenizer.batch_decode(ut)[0].match(/<s_answer>(.*?)<\/s_answer>/);let gt=null;return ht&&ht.length>=2&&(gt=ht[1].trim()),[{answer:gt}]}}class We extends oe{constructor(Ae){super(Ae);Te(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=Ae.vocoder??null}async _call(Ae,{speaker_embeddings:Ze=null}={}){return this.processor?this._call_text_to_spectrogram(Ae,{speaker_embeddings:Ze}):this._call_text_to_waveform(Ae)}async _call_text_to_waveform(Ae){const Ze=this.tokenizer(Ae,{padding:!0,truncation:!0}),{waveform:Ye}=await this.model(Ze),Qe=this.model.config.sampling_rate;return{audio:Ye.data,sampling_rate:Qe}}async _call_text_to_spectrogram(Ae,{speaker_embeddings:Ze}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await u.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Ze=="string"||Ze instanceof URL)&&(Ze=new Float32Array(await(await fetch(Ze)).arrayBuffer())),Ze instanceof Float32Array)Ze=new x.Tensor("float32",Ze,[1,Ze.length]);else if(!(Ze instanceof x.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:Ye}=this.tokenizer(Ae,{padding:!0,truncation:!0}),{waveform:Qe}=await this.model.generate_speech(Ye,Ze,{vocoder:this.vocoder}),Ue=this.processor.feature_extractor.config.sampling_rate;return{audio:Qe.data,sampling_rate:Ue}}}class Se extends oe{constructor(ye){super(ye)}async _call(ye){const Ae=await C(ye),Ze=await this.processor(Ae),Ye=await this.model(Ze),Qe=[];for(const Ue of Ye.reconstruction){const it=Ue.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Qe.push(k.RawImage.fromTensor(it))}return Qe.length>1?Qe:Qe[0]}}class Ne extends oe{constructor(ye){super(ye)}async _call(ye){const Ae=await C(ye),Ze=await this.processor(Ae),{predicted_depth:Ye}=await this.model(Ze),Qe=[];for(let Ue=0;Ue<Ae.length;++Ue){const it=(0,x.interpolate)(Ye[Ue],Ae[Ue].size.reverse(),"bilinear",!1),ut=it.mul_(255/(0,f.max)(it.data)[0]).to("uint8");Qe.push({predicted_depth:Ye[Ue],depth:k.RawImage.fromTensor(ut)})}return Qe.length>1?Qe:Qe[0]}}const He=Object.freeze({"text-classification":{tokenizer:o.AutoTokenizer,pipeline:re,model:u.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:o.AutoTokenizer,pipeline:V,model:u.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:o.AutoTokenizer,pipeline:H,model:u.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:o.AutoTokenizer,pipeline:te,model:u.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:o.AutoTokenizer,pipeline:D,model:u.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:o.AutoTokenizer,pipeline:E,model:u.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:o.AutoTokenizer,pipeline:G,model:u.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:o.AutoTokenizer,pipeline:S,model:u.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:o.AutoTokenizer,pipeline:se,model:u.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:he,model:u.AutoModelForAudioClassification,processor:h.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:o.AutoTokenizer,pipeline:be,model:u.AutoModel,processor:h.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:o.AutoTokenizer,pipeline:Ce,model:[u.AutoModelForSpeechSeq2Seq,u.AutoModelForCTC],processor:h.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:o.AutoTokenizer,pipeline:We,model:[u.AutoModelForTextToWaveform,u.AutoModelForTextToSpectrogram],processor:[h.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:o.AutoTokenizer,pipeline:ke,model:u.AutoModelForVision2Seq,processor:h.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:je,model:u.AutoModelForImageClassification,processor:h.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:fe,model:[u.AutoModelForImageSegmentation,u.AutoModelForSemanticSegmentation,u.AutoModelForUniversalSegmentation],processor:h.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:o.AutoTokenizer,pipeline:K,model:u.AutoModel,processor:h.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:me,model:u.AutoModelForObjectDetection,processor:h.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:o.AutoTokenizer,pipeline:ge,model:u.AutoModelForZeroShotObjectDetection,processor:h.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:o.AutoTokenizer,pipeline:$e,model:u.AutoModelForDocumentQuestionAnswering,processor:h.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:Se,model:u.AutoModelForImageToImage,processor:h.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Ne,model:u.AutoModelForDepthEstimation,processor:h.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:o.AutoTokenizer,pipeline:ee,model:u.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:h.AutoProcessor,pipeline:pe,model:[u.AutoModelForImageFeatureExtraction,u.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Be=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function le(Re,ye=null,{progress_callback:Ae=null,config:Ze=null,cache_dir:Ye=null,local_files_only:Qe=!1,revision:Ue="main",device:it=null,dtype:ut=null,model_file_name:_t=null,session_options:ht={}}={}){Re=Be[Re]??Re;const gt=He[Re.split("_",1)[0]];if(!gt)throw Error(`Unsupported pipeline: ${Re}. Must be one of [${Object.keys(He)}]`);ye||(ye=gt.default.model,console.log(`No model specified. Using default model: "${ye}".`));const j={progress_callback:Ae,config:Ze,cache_dir:Ye,local_files_only:Qe,revision:Ue,device:it,dtype:ut,model_file_name:_t,session_options:ht},ae=new Map([["tokenizer",gt.tokenizer],["model",gt.model],["processor",gt.processor]]),Q=await Fe(ae,ye,j);Q.task=Re,(0,P.dispatchCallback)(Ae,{status:"ready",task:Re,model:ye});const de=gt.pipeline;return new de(Q)}async function Fe(Re,ye,Ae){const Ze=Object.create(null),Ye=[];for(const[Qe,Ue]of Re.entries()){if(!Ue)continue;let it;Array.isArray(Ue)?it=new Promise(async(ut,_t)=>{var gt,j;let ht;for(const ae of Ue){if(ae===null){ut(null);return}try{ut(await ae.from_pretrained(ye,Ae));return}catch(Q){if((gt=Q.message)!=null&&gt.includes("Unsupported model type"))ht=Q;else if((j=Q.message)!=null&&j.includes("Could not locate file"))ht=Q;else{_t(Q);return}}}_t(ht)}):it=Ue.from_pretrained(ye,Ae),Ze[Qe]=it,Ye.push(it)}await Promise.all(Ye);for(const[Qe,Ue]of Object.entries(Ze))Ze[Qe]=await Ue;return Ze}},"./src/tokenizers.js":(t,s,n)=>{n.r(s),n.d(s,{AlbertTokenizer:()=>zn,AutoTokenizer:()=>Mr,BartTokenizer:()=>Dn,BertTokenizer:()=>an,BlenderbotSmallTokenizer:()=>_o,BlenderbotTokenizer:()=>go,BloomTokenizer:()=>Mn,CLIPTokenizer:()=>qi,CamembertTokenizer:()=>at,CodeGenTokenizer:()=>Gi,CodeLlamaTokenizer:()=>ui,CohereTokenizer:()=>Qi,ConvBertTokenizer:()=>li,DebertaTokenizer:()=>oi,DebertaV2Tokenizer:()=>ln,DistilBertTokenizer:()=>Ks,ElectraTokenizer:()=>Ot,EsmTokenizer:()=>jn,FalconTokenizer:()=>ho,GPT2Tokenizer:()=>ci,GPTNeoXTokenizer:()=>mo,GemmaTokenizer:()=>Zo,Grok1Tokenizer:()=>di,HerbertTokenizer:()=>ai,LlamaTokenizer:()=>Wi,M2M100Tokenizer:()=>Rn,MBart50Tokenizer:()=>Is,MBartTokenizer:()=>Br,MPNetTokenizer:()=>po,MarianTokenizer:()=>Dt,MgpstrTokenizer:()=>Yi,MobileBertTokenizer:()=>ii,NllbTokenizer:()=>Bn,NougatTokenizer:()=>Xi,PreTrainedTokenizer:()=>jt,Qwen2Tokenizer:()=>fo,RoFormerTokenizer:()=>Ln,RobertaTokenizer:()=>Yr,SiglipTokenizer:()=>Ki,SpeechT5Tokenizer:()=>yo,SqueezeBertTokenizer:()=>Mi,T5Tokenizer:()=>fs,TokenizerModel:()=>pe,VitsTokenizer:()=>wo,Wav2Vec2CTCTokenizer:()=>Hi,WhisperTokenizer:()=>xi,XLMRobertaTokenizer:()=>Jo,XLMTokenizer:()=>bt,is_chinese_char:()=>te});var o=n("./src/utils/generic.js"),u=n("./src/utils/core.js"),h=n("./src/utils/hub.js"),v=n("./src/utils/maths.js"),P=n("./src/utils/tensor.js"),f=n("./src/utils/data-structures.js"),b=n("./node_modules/@huggingface/jinja/dist/index.js"),x=n("./src/models/whisper/common_whisper.js");n("./src/utils/constants.js");async function k(Ee,I){const J=await Promise.all([(0,h.getModelJSON)(Ee,"tokenizer.json",!0,I),(0,h.getModelJSON)(Ee,"tokenizer_config.json",!0,I)]);return I.legacy!==null&&(J[1].legacy=I.legacy),J}function C(Ee,I){const J=[];let ce=0;for(const ve of Ee.matchAll(I)){const Pe=ve[0];ce<ve.index&&J.push(Ee.slice(ce,ve.index)),Pe.length>0&&J.push(Pe),ce=ve.index+Pe.length}return ce<Ee.length&&J.push(Ee.slice(ce)),J}function N(Ee,I=!0){if(Ee.Regex!==void 0){let J=Ee.Regex.replace(/\\([#&~])/g,"$1");for(const[ce,ve]of se)J=J.replaceAll(ce,ve);return new RegExp(J,"gu")}else if(Ee.String!==void 0){const J=(0,u.escapeRegExp)(Ee.String);return new RegExp(I?J:`(${J})`,"gu")}else return console.warn("Unknown pattern type:",Ee),null}function X(Ee){return new Map(Object.entries(Ee))}function oe(Ee){const I=Ee.dims;switch(I.length){case 1:return Ee.tolist();case 2:if(I[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return Ee.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${I.length}.`)}}function re(Ee){return Ee.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function V(Ee){return Ee.replace(new RegExp("\\p{M}","gu"),"")}function H(Ee){return V(Ee.toLowerCase())}function te(Ee){return Ee>=19968&&Ee<=40959||Ee>=13312&&Ee<=19903||Ee>=131072&&Ee<=173791||Ee>=173824&&Ee<=177983||Ee>=177984&&Ee<=178207||Ee>=178208&&Ee<=183983||Ee>=63744&&Ee<=64255||Ee>=194560&&Ee<=195103}function G(Ee,I,J){const ce=[];let ve=0;for(;ve<Ee.length;){if(ce.push(Ee[ve]),(I.get(Ee[ve])??J)!==J){++ve;continue}for(;++ve<Ee.length&&(I.get(Ee[ve])??J)===J;)I.get(ce.at(-1))!==J&&(ce[ce.length-1]+=Ee[ve])}return ce}function D(Ee){return Ee.match(/\S+/g)||[]}const E="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",L=new RegExp(`^[${E}]+$`,"gu"),S=".,!?…。，、।۔،",se=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${S}])]+`,` ?[^\\s${S}]+`]]);class ee{constructor(I){this.content=I.content,this.id=I.id,this.single_word=I.single_word??!1,this.lstrip=I.lstrip??!1,this.rstrip=I.rstrip??!1,this.special=I.special??!1,this.normalized=I.normalized??null}}class pe extends o.Callable{constructor(I){super(),this.config=I,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(I,...J){switch(I.type){case"WordPiece":return new he(I);case"Unigram":return new be(I,...J);case"BPE":return new je(I);default:if(I.vocab)return Array.isArray(I.vocab)?new be(I,...J):new fe(I,...J);throw new Error(`Unknown TokenizerModel type: ${I.type}`)}}_call(I){return I=this.encode(I),this.fuse_unk&&(I=G(I,this.tokens_to_ids,this.unk_token_id)),I}encode(I){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(I){return I.map(J=>this.tokens_to_ids.get(J)??this.unk_token_id)}convert_ids_to_tokens(I){return I.map(J=>this.vocab[J]??this.unk_token)}}class he extends pe{constructor(I){super(I),this.tokens_to_ids=X(I.vocab),this.unk_token_id=this.tokens_to_ids.get(I.unk_token),this.unk_token=I.unk_token,this.max_input_chars_per_word=I.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[J,ce]of this.tokens_to_ids)this.vocab[ce]=J}encode(I){const J=[];for(const ce of I){const ve=[...ce];if(ve.length>this.max_input_chars_per_word){J.push(this.unk_token);continue}let Pe=!1,qe=0;const lt=[];for(;qe<ve.length;){let mt=ve.length,pt=null;for(;qe<mt;){let xt=ve.slice(qe,mt).join("");if(qe>0&&(xt=this.config.continuing_subword_prefix+xt),this.tokens_to_ids.has(xt)){pt=xt;break}--mt}if(pt===null){Pe=!0;break}lt.push(pt),qe=mt}Pe?J.push(this.unk_token):J.push(...lt)}return J}}class be extends pe{constructor(I,J){super(I);const ce=I.vocab.length;this.vocab=new Array(ce),this.scores=new Array(ce);for(let ve=0;ve<ce;++ve){const Pe=I.vocab[ve];this.vocab[ve]=Pe[0],this.scores[ve]=Pe[1]}this.unk_token_id=I.unk_id,this.unk_token=this.vocab[I.unk_id],this.tokens_to_ids=new Map(this.vocab.map((ve,Pe)=>[ve,Pe])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=J.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,v.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new f.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(I){const J=I.chars,ce=1;let ve=0;for(;ve<J.length;){let Pe=!1;const qe=J.slice(ve).join(""),lt=this.trie.commonPrefixSearch(qe);for(const mt of lt){const pt=this.tokens_to_ids.get(mt),xt=this.scores[pt],Qt=(0,u.len)(mt);I.insert(ve,Qt,xt,pt),!Pe&&Qt===ce&&(Pe=!0)}Pe||I.insert(ve,ce,this.unk_score,this.unk_token_id),ve+=ce}}tokenize(I){const J=new f.TokenLattice(I,this.bos_token_id,this.eos_token_id);return this.populateNodes(J),J.tokens()}encode(I){const J=[];for(const ce of I){const ve=this.tokenize(ce);J.push(...ve)}return J}}const Ce=(()=>{const Ee=[...Array.from({length:94},(ve,Pe)=>Pe+33),...Array.from({length:12},(ve,Pe)=>Pe+161),...Array.from({length:82},(ve,Pe)=>Pe+174)],I=Ee.slice();let J=0;for(let ve=0;ve<256;++ve)Ee.includes(ve)||(Ee.push(ve),I.push(256+J),J+=1);const ce=I.map(ve=>String.fromCharCode(ve));return Object.fromEntries(Ee.map((ve,Pe)=>[ve,ce[Pe]]))})(),ke=(0,u.reverseDictionary)(Ce);class je extends pe{constructor(I){super(I),this.tokens_to_ids=X(I.vocab),this.unk_token_id=this.tokens_to_ids.get(I.unk_token),this.unk_token=I.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ce,ve]of this.tokens_to_ids)this.vocab[ve]=ce;const J=Array.isArray(I.merges[0]);this.merges=J?I.merges:I.merges.map(ce=>ce.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ce,ve)=>[JSON.stringify(ce),ve])),this.end_of_word_suffix=I.end_of_word_suffix,this.continuing_subword_suffix=I.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(I){if(I.length===0)return[];const J=this.cache.get(I);if(J!==void 0)return J;const ce=Array.from(I);this.end_of_word_suffix&&(ce[ce.length-1]+=this.end_of_word_suffix);let ve=[];if(ce.length>1){const Pe=new f.PriorityQueue((mt,pt)=>mt.score<pt.score);let qe={token:ce[0],bias:0,prev:null,next:null},lt=qe;for(let mt=1;mt<ce.length;++mt){const pt={bias:mt/ce.length,token:ce[mt],prev:lt,next:null};lt.next=pt,this._add_node(Pe,lt),lt=pt}for(;!Pe.isEmpty();){const mt=Pe.pop();if(mt.deleted||!mt.next||mt.next.deleted)continue;if(mt.deleted=!0,mt.next.deleted=!0,mt.prev){const xt={...mt.prev};mt.prev.deleted=!0,mt.prev=xt,xt.prev?xt.prev.next=xt:qe=xt}const pt={token:mt.token+mt.next.token,bias:mt.bias,prev:mt.prev,next:mt.next.next};pt.prev?(pt.prev.next=pt,this._add_node(Pe,pt.prev)):qe=pt,pt.next&&(pt.next.prev=pt,this._add_node(Pe,pt))}for(let mt=qe;mt!==null;mt=mt.next)ve.push(mt.token)}else ve=ce;if(this.continuing_subword_suffix)for(let Pe=0;Pe<ve.length-1;++Pe)ve[Pe]+=this.continuing_subword_suffix;return this.cache.set(I,ve),ve}_add_node(I,J){const ce=this.bpe_ranks.get(JSON.stringify([J.token,J.next.token]));ce!==void 0&&(J.score=ce+J.bias,I.push(J))}encode(I){const J=[];for(const ce of I){if(this.ignore_merges&&this.tokens_to_ids.has(ce)){J.push(ce);continue}const ve=this.bpe(ce);for(const Pe of ve)if(this.tokens_to_ids.has(Pe))J.push(Pe);else if(this.byte_fallback){const qe=Array.from(this.text_encoder.encode(Pe)).map(lt=>`<0x${lt.toString(16).toUpperCase().padStart(2,"0")}>`);qe.every(lt=>this.tokens_to_ids.has(lt))?J.push(...qe):J.push(this.unk_token)}else J.push(this.unk_token)}return J}}class fe extends pe{constructor(I,J){super(I),this.tokens_to_ids=X(J.target_lang?I.vocab[J.target_lang]:I.vocab),this.bos_token=J.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=J.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=J.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=J.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ce,ve]of this.tokens_to_ids)this.vocab[ve]=ce}encode(I){return I}}class K extends o.Callable{constructor(I){super(),this.config=I}static fromConfig(I){if(I===null)return null;switch(I.type){case"BertNormalizer":return new Fe(I);case"Precompiled":return new Cr(I);case"Sequence":return new le(I);case"Replace":return new me(I);case"NFC":return new ge(I);case"NFKC":return new $e(I);case"NFKD":return new We(I);case"Strip":return new Se(I);case"StripAccents":return new Ne(I);case"Lowercase":return new He(I);case"Prepend":return new Be(I);default:throw new Error(`Unknown Normalizer type: ${I.type}`)}}normalize(I){throw Error("normalize should be implemented in subclass.")}_call(I){return this.normalize(I)}}class me extends K{normalize(I){const J=N(this.config.pattern);return J===null?I:I.replaceAll(J,this.config.content)}}class ge extends K{normalize(I){return I=I.normalize("NFC"),I}}class $e extends K{normalize(I){return I=I.normalize("NFKC"),I}}class We extends K{normalize(I){return I=I.normalize("NFKD"),I}}class Se extends K{normalize(I){return this.config.strip_left&&this.config.strip_right?I=I.trim():(this.config.strip_left&&(I=I.trimStart()),this.config.strip_right&&(I=I.trimEnd())),I}}class Ne extends K{normalize(I){return I=V(I),I}}class He extends K{normalize(I){return I=I.toLowerCase(),I}}class Be extends K{normalize(I){return I=this.config.prepend+I,I}}class le extends K{constructor(I){super(I),this.normalizers=I.normalizers.map(J=>K.fromConfig(J))}normalize(I){return this.normalizers.reduce((J,ce)=>ce.normalize(J),I)}}class Fe extends K{_tokenize_chinese_chars(I){const J=[];for(let ce=0;ce<I.length;++ce){const ve=I[ce],Pe=ve.charCodeAt(0);te(Pe)?(J.push(" "),J.push(ve),J.push(" ")):J.push(ve)}return J.join("")}stripAccents(I){return I.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(I){switch(I){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(I)}}_clean_text(I){const J=[];for(const ce of I){const ve=ce.charCodeAt(0);ve===0||ve===65533||this._is_control(ce)||(/^\s$/.test(ce)?J.push(" "):J.push(ce))}return J.join("")}normalize(I){return this.config.clean_text&&(I=this._clean_text(I)),this.config.handle_chinese_chars&&(I=this._tokenize_chinese_chars(I)),this.config.lowercase?(I=I.toLowerCase(),this.config.strip_accents!==!1&&(I=this.stripAccents(I))):this.config.strip_accents&&(I=this.stripAccents(I)),I}}class Re extends o.Callable{static fromConfig(I){if(I===null)return null;switch(I.type){case"BertPreTokenizer":return new ye(I);case"Sequence":return new as(I);case"Whitespace":return new Gr(I);case"WhitespaceSplit":return new Bs(I);case"Metaspace":return new Ct(I);case"ByteLevel":return new Ae(I);case"Split":return new Ze(I);case"Punctuation":return new Ye(I);case"Digits":return new Qe(I);case"Replace":return new si(I);default:throw new Error(`Unknown PreTokenizer type: ${I.type}`)}}pre_tokenize_text(I,J){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(I,J){return(Array.isArray(I)?I.map(ce=>this.pre_tokenize_text(ce,J)):this.pre_tokenize_text(I,J)).flat()}_call(I,J){return this.pre_tokenize(I,J)}}class ye extends Re{constructor(I){super(),this.pattern=new RegExp(`[^\\s${E}]+|[${E}]`,"gu")}pre_tokenize_text(I,J){return I.trim().match(this.pattern)||[]}}class Ae extends Re{constructor(I){super(),this.config=I,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Ce,this.text_encoder=new TextEncoder}pre_tokenize_text(I,J){return this.add_prefix_space&&!I.startsWith(" ")&&(I=" "+I),(this.use_regex?I.match(this.pattern)||[]:[I]).map(ve=>Array.from(this.text_encoder.encode(ve),Pe=>this.byte_encoder[Pe]).join(""))}}class Ze extends Re{constructor(I){super(),this.config=I,this.pattern=N(this.config.pattern,this.config.invert)}pre_tokenize_text(I,J){var ce;return this.pattern===null?[]:this.config.invert?I.match(this.pattern)||[]:((ce=this.config.behavior)==null?void 0:ce.toLowerCase())==="removed"?I.split(this.pattern).filter(ve=>ve):C(I,this.pattern)}}class Ye extends Re{constructor(I){super(),this.config=I,this.pattern=new RegExp(`[^${E}]+|[${E}]+`,"gu")}pre_tokenize_text(I,J){return I.match(this.pattern)||[]}}class Qe extends Re{constructor(I){super(),this.config=I;const J=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(J,"gu")}pre_tokenize_text(I,J){return I.match(this.pattern)||[]}}class Ue extends o.Callable{constructor(I){super(),this.config=I}static fromConfig(I){if(I===null)return null;switch(I.type){case"TemplateProcessing":return new _t(I);case"ByteLevel":return new ht(I);case"RobertaProcessing":return new ut(I);case"BertProcessing":return new it(I);case"Sequence":return new gt(I);default:throw new Error(`Unknown PostProcessor type: ${I.type}`)}}post_process(I,...J){throw Error("post_process should be implemented in subclass.")}_call(I,...J){return this.post_process(I,...J)}}class it extends Ue{constructor(I){super(I),this.cls=I.cls[0],this.sep=I.sep[0]}post_process(I,J=null,{add_special_tokens:ce=!0}={}){ce&&(I=(0,u.mergeArrays)([this.cls],I,[this.sep]));let ve=new Array(I.length).fill(0);if(J!==null){const Pe=ce&&this instanceof ut?[this.sep]:[],qe=ce?[this.sep]:[];I=(0,u.mergeArrays)(I,Pe,J,qe),ve=(0,u.mergeArrays)(ve,new Array(J.length+Pe.length+qe.length).fill(1))}return{tokens:I,token_type_ids:ve}}}class ut extends it{}class _t extends Ue{constructor(I){super(I),this.single=I.single,this.pair=I.pair}post_process(I,J=null,{add_special_tokens:ce=!0}={}){const ve=J===null?this.single:this.pair;let Pe=[],qe=[];for(const lt of ve)"SpecialToken"in lt?ce&&(Pe.push(lt.SpecialToken.id),qe.push(lt.SpecialToken.type_id)):"Sequence"in lt&&(lt.Sequence.id==="A"?(Pe=(0,u.mergeArrays)(Pe,I),qe=(0,u.mergeArrays)(qe,new Array(I.length).fill(lt.Sequence.type_id))):lt.Sequence.id==="B"&&(Pe=(0,u.mergeArrays)(Pe,J),qe=(0,u.mergeArrays)(qe,new Array(J.length).fill(lt.Sequence.type_id))));return{tokens:Pe,token_type_ids:qe}}}class ht extends Ue{post_process(I,J=null){return J&&(I=(0,u.mergeArrays)(I,J)),{tokens:I}}}class gt extends Ue{constructor(I){super(I),this.processors=I.processors.map(J=>Ue.fromConfig(J))}post_process(I,J=null,ce={}){let ve;for(const Pe of this.processors)if(Pe instanceof ht)I=Pe.post_process(I).tokens,J&&(J=Pe.post_process(J).tokens);else{const qe=Pe.post_process(I,J,ce);I=qe.tokens,ve=qe.token_type_ids}return{tokens:I,token_type_ids:ve}}}class j extends o.Callable{constructor(I){super(),this.config=I,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=I.trim_offsets}static fromConfig(I){if(I===null)return null;switch(I.type){case"WordPiece":return new et(I);case"Metaspace":return new hr(I);case"ByteLevel":return new ot(I);case"Replace":return new ae(I);case"ByteFallback":return new Q(I);case"Fuse":return new de(I);case"Strip":return new Oe(I);case"Sequence":return new Ft(I);case"CTC":return new ct(I);case"BPEDecoder":return new Tt(I);default:throw new Error(`Unknown Decoder type: ${I.type}`)}}_call(I){return this.decode(I)}decode(I){return this.decode_chain(I).join("")}decode_chain(I){throw Error("`decode_chain` should be implemented in subclass.")}}class ae extends j{decode_chain(I){const J=N(this.config.pattern);return J===null?I:I.map(ce=>ce.replaceAll(J,this.config.content))}}class Q extends j{constructor(I){super(I),this.text_decoder=new TextDecoder}decode_chain(I){const J=[];let ce=[];for(const ve of I){let Pe=null;if(ve.length===6&&ve.startsWith("<0x")&&ve.endsWith(">")){const qe=parseInt(ve.slice(3,5),16);isNaN(qe)||(Pe=qe)}if(Pe!==null)ce.push(Pe);else{if(ce.length>0){const qe=this.text_decoder.decode(Uint8Array.from(ce));J.push(qe),ce=[]}J.push(ve)}}if(ce.length>0){const ve=this.text_decoder.decode(Uint8Array.from(ce));J.push(ve),ce=[]}return J}}class de extends j{decode_chain(I){return[I.join("")]}}class Oe extends j{constructor(I){super(I),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(I){return I.map(J=>{let ce=0;for(let Pe=0;Pe<this.start&&J[Pe]===this.content;++Pe){ce=Pe+1;continue}let ve=J.length;for(let Pe=0;Pe<this.stop;++Pe){const qe=J.length-Pe-1;if(J[qe]===this.content){ve=qe;continue}else break}return J.slice(ce,ve)})}}class et extends j{constructor(I){super(I),this.cleanup=I.cleanup}decode_chain(I){return I.map((J,ce)=>(ce!==0&&(J.startsWith(this.config.prefix)?J=J.replace(this.config.prefix,""):J=" "+J),this.cleanup&&(J=re(J)),J))}}class ot extends j{constructor(I){super(I),this.byte_decoder=ke,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(I){const J=I.join(""),ce=new Uint8Array([...J].map(Pe=>this.byte_decoder[Pe]));return this.text_decoder.decode(ce)}decode_chain(I){const J=[];let ce=[];for(const ve of I)this.added_tokens.find(Pe=>Pe.content===ve)!==void 0?(ce.length>0&&(J.push(this.convert_tokens_to_string(ce)),ce=[]),J.push(ve)):ce.push(ve);return ce.length>0&&J.push(this.convert_tokens_to_string(ce)),J}}class ct extends j{constructor(I){super(I),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(I){if(I.length===0)return"";const J=[I[0]];for(let Pe=1;Pe<I.length;++Pe)I[Pe]!==J.at(-1)&&J.push(I[Pe]);let ve=J.filter(Pe=>Pe!==this.pad_token).join("");return this.cleanup&&(ve=re(ve).replaceAll(this.word_delimiter_token," ").trim()),ve}decode_chain(I){return[this.convert_tokens_to_string(I)]}}class Ft extends j{constructor(I){super(I),this.decoders=I.decoders.map(J=>j.fromConfig(J))}decode_chain(I){return this.decoders.reduce((J,ce)=>ce.decode_chain(J),I)}}class Tt extends j{constructor(I){super(I),this.suffix=this.config.suffix}decode_chain(I){return I.map((J,ce)=>J.replaceAll(this.suffix,ce===I.length-1?"":" "))}}class kt extends j{decode_chain(I){let J="";for(let ce=1;ce<I.length;ce+=2)J+=I[ce];return[J]}}class Ct extends Re{constructor(I){super(),this.addPrefixSpace=I.add_prefix_space,this.replacement=I.replacement,this.strRep=I.str_rep||this.replacement,this.prepend_scheme=I.prepend_scheme??"always"}pre_tokenize_text(I,{section_index:J=void 0}={}){let ce=I.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ce.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&J===0)&&(ce=this.strRep+ce),[ce]}}class hr extends j{constructor(I){super(I),this.addPrefixSpace=I.add_prefix_space,this.replacement=I.replacement}decode_chain(I){const J=[];for(let ce=0;ce<I.length;++ce){let ve=I[ce].replaceAll(this.replacement," ");this.addPrefixSpace&&ce==0&&ve.startsWith(" ")&&(ve=ve.substring(1)),J.push(ve)}return J}}class Cr extends K{constructor(I){super(I),this.charsmap=I.precompiled_charsmap}normalize(I){return I=I.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),I=I.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),I.includes("～")?I=I.split("～").map(ce=>ce.normalize("NFKC")).join("～"):I=I.normalize("NFKC"),I}}class as extends Re{constructor(I){super(),this.tokenizers=I.pretokenizers.map(J=>Re.fromConfig(J))}pre_tokenize_text(I,J){return this.tokenizers.reduce((ce,ve)=>ve.pre_tokenize(ce,J),[I])}}class Gr extends Re{constructor(I){super()}pre_tokenize_text(I,J){return I.match(/\w+|[^\w\s]+/g)||[]}}class Bs extends Re{constructor(I){super()}pre_tokenize_text(I,J){return D(I)}}class si extends Re{constructor(I){super(),this.config=I,this.pattern=N(this.config.pattern),this.content=this.config.content}pre_tokenize_text(I,J){return this.pattern===null?[I]:[I.replaceAll(this.pattern,this.config.content)]}}const ni=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function On(Ee,I,J,ce){for(const ve of Object.keys(Ee)){const Pe=I-Ee[ve].length,qe=J(ve),lt=new Array(Pe).fill(qe);Ee[ve]=ce==="right"?(0,u.mergeArrays)(Ee[ve],lt):(0,u.mergeArrays)(lt,Ee[ve])}}function Vi(Ee,I){for(const J of Object.keys(Ee))Ee[J].length=I}class jt extends o.Callable{constructor(J,ce){super();Te(this,"return_token_type_ids",!1);Te(this,"padding_side","right");this._tokenizer_config=ce,this.normalizer=K.fromConfig(J.normalizer),this.pre_tokenizer=Re.fromConfig(J.pre_tokenizer),this.model=pe.fromConfig(J.model,ce),this.post_processor=Ue.fromConfig(J.post_processor),this.decoder=j.fromConfig(J.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ve of J.added_tokens){const Pe=new ee(ve);this.added_tokens.push(Pe),this.model.tokens_to_ids.set(Pe.content,Pe.id),this.model.vocab[Pe.id]=Pe.content,Pe.special&&(this.special_tokens.push(Pe.content),this.all_special_ids.push(Pe.id))}if(this.additional_special_tokens=ce.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((ve,Pe)=>Pe.content.length-ve.content.length).map(ve=>`${ve.lstrip?"\\s*":""}(${(0,u.escapeRegExp)(ve.content)})${ve.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=ce.model_max_length,this.remove_space=ce.remove_space,this.clean_up_tokenization_spaces=ce.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=ce.do_lowercase_and_remove_accent??!1,ce.padding_side&&(this.padding_side=ce.padding_side),this.legacy=!1,this.chat_template=ce.chat_template??null,Array.isArray(this.chat_template)){const ve=Object.create(null);for(const{name:Pe,template:qe}of this.chat_template){if(typeof Pe!="string"||typeof qe!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ve[Pe]=qe}this.chat_template=ve}this._compiled_template_cache=new Map}getToken(...J){for(const ce of J){const ve=this._tokenizer_config[ce];if(ve)if(typeof ve=="object"){if(ve.__type==="AddedToken")return ve.content;throw Error(`Unknown token: ${ve}`)}else return ve}return null}static async from_pretrained(J,{progress_callback:ce=null,config:ve=null,cache_dir:Pe=null,local_files_only:qe=!1,revision:lt="main",legacy:mt=null}={}){const pt=await k(J,{progress_callback:ce,config:ve,cache_dir:Pe,local_files_only:qe,revision:lt,legacy:mt});return new this(...pt)}_call(J,{text_pair:ce=null,add_special_tokens:ve=!0,padding:Pe=!1,truncation:qe=null,max_length:lt=null,return_tensor:mt=!0,return_token_type_ids:pt=null}={}){const xt=Array.isArray(J);let Qt;if(xt){if(J.length===0)throw Error("text array must be non-empty");if(ce!==null){if(Array.isArray(ce)){if(J.length!==ce.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Qt=J.map((nr,Dr)=>this._encode_plus(nr,{text_pair:ce[Dr],add_special_tokens:ve,return_token_type_ids:pt}))}else Qt=J.map(nr=>this._encode_plus(nr,{add_special_tokens:ve,return_token_type_ids:pt}))}else{if(J==null)throw Error("text may not be null or undefined");if(Array.isArray(ce))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Qt=[this._encode_plus(J,{text_pair:ce,add_special_tokens:ve,return_token_type_ids:pt})]}if(lt===null?Pe==="max_length"?lt=this.model_max_length:lt=(0,v.max)(Qt.map(nr=>nr.input_ids.length))[0]:qe||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),lt=Math.min(lt,this.model_max_length??1/0),Pe||qe)for(let nr=0;nr<Qt.length;++nr)Qt[nr].input_ids.length!==lt&&(Qt[nr].input_ids.length>lt?qe&&Vi(Qt[nr],lt):Pe&&On(Qt[nr],lt,Dr=>Dr==="input_ids"?this.pad_token_id:0,this.padding_side));const xr={};if(mt){if(!(Pe&&qe)&&Qt.some(Dr=>{var er;for(const mr of Object.keys(Dr))if(Dr[mr].length!==((er=Qt[0][mr])==null?void 0:er.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const nr=[Qt.length,Qt[0].input_ids.length];for(const Dr of Object.keys(Qt[0]))xr[Dr]=new P.Tensor("int64",BigInt64Array.from(Qt.flatMap(er=>er[Dr]).map(BigInt)),nr)}else{for(const nr of Object.keys(Qt[0]))xr[nr]=Qt.map(Dr=>Dr[nr]);if(!xt)for(const nr of Object.keys(xr))xr[nr]=xr[nr][0]}return xr}_encode_text(J){return J===null?null:(this.added_tokens_regex?J.split(this.added_tokens_regex).filter(Pe=>Pe):[J]).map((Pe,qe)=>{if(this.added_tokens.find(mt=>mt.content===Pe)!==void 0)return Pe;{if(this.remove_space===!0&&(Pe=Pe.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Pe=H(Pe)),this.normalizer!==null&&(Pe=this.normalizer(Pe)),Pe.length===0)return[];const mt=this.pre_tokenizer!==null?this.pre_tokenizer(Pe,{section_index:qe}):[Pe];return this.model(mt)}}).flat()}_encode_plus(J,{text_pair:ce=null,add_special_tokens:ve=!0,return_token_type_ids:Pe=null}={}){const{tokens:qe,token_type_ids:lt}=this._tokenize_helper(J,{pair:ce,add_special_tokens:ve}),mt=this.model.convert_tokens_to_ids(qe),pt={input_ids:mt,attention_mask:new Array(mt.length).fill(1)};return(Pe??this.return_token_type_ids)&&lt&&(pt.token_type_ids=lt),pt}_tokenize_helper(J,{pair:ce=null,add_special_tokens:ve=!1}={}){const Pe=this._encode_text(J),qe=this._encode_text(ce);return this.post_processor?this.post_processor(Pe,qe,{add_special_tokens:ve}):{tokens:(0,u.mergeArrays)(Pe??[],qe??[])}}tokenize(J,{pair:ce=null,add_special_tokens:ve=!1}={}){return this._tokenize_helper(J,{pair:ce,add_special_tokens:ve}).tokens}encode(J,{text_pair:ce=null,add_special_tokens:ve=!0,return_token_type_ids:Pe=null}={}){return this._encode_plus(J,{text_pair:ce,add_special_tokens:ve,return_token_type_ids:Pe}).input_ids}batch_decode(J,ce={}){return J instanceof P.Tensor&&(J=J.tolist()),J.map(ve=>this.decode(ve,ce))}decode(J,ce={}){if(J instanceof P.Tensor&&(J=oe(J)),!Array.isArray(J)||J.length===0||!(0,u.isIntegralNumber)(J[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(J,ce)}decode_single(J,{skip_special_tokens:ce=!1,clean_up_tokenization_spaces:ve=null}){let Pe=this.model.convert_ids_to_tokens(J);ce&&(Pe=Pe.filter(lt=>!this.special_tokens.includes(lt)));let qe=this.decoder?this.decoder(Pe):Pe.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(qe=qe.replaceAll(this.decoder.end_of_word_suffix," "),ce&&(qe=qe.trim())),(ve??this.clean_up_tokenization_spaces)&&(qe=re(qe)),qe}get_chat_template({chat_template:J=null,tools:ce=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ve=this.chat_template;if(J!==null&&Object.hasOwn(ve,J))J=ve[J];else if(J===null)if(ce!==null&&"tool_use"in ve)J=ve.tool_use;else if("default"in ve)J=ve.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ve).sort()}.`)}else if(J===null)if(this.chat_template)J=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return J}apply_chat_template(J,{tools:ce=null,documents:ve=null,chat_template:Pe=null,add_generation_prompt:qe=!1,tokenize:lt=!0,padding:mt=!1,truncation:pt=!1,max_length:xt=null,return_tensor:Qt=!0,return_dict:xr=!1,tokenizer_kwargs:nr={},...Dr}={}){if(Pe=this.get_chat_template({chat_template:Pe,tools:ce}),typeof Pe!="string")throw Error(`chat_template must be a string, but got ${typeof Pe}`);let er=this._compiled_template_cache.get(Pe);er===void 0&&(er=new b.Template(Pe),this._compiled_template_cache.set(Pe,er));const mr=Object.create(null);for(const gs of ni){const De=this.getToken(gs);De&&(mr[gs]=De)}const Hs=er.render({messages:J,add_generation_prompt:qe,tools:ce,documents:ve,...mr,...Dr});if(lt){const gs=this._call(Hs,{add_special_tokens:!1,padding:mt,truncation:pt,max_length:xt,return_tensor:Qt,...nr});return xr?gs:gs.input_ids}return Hs}}class an extends jt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class zn extends jt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class ii extends jt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Mi extends jt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class oi extends jt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class ln extends jt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class ai extends jt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class li extends jt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Ln extends jt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Ks extends jt{}class at extends jt{}class bt extends jt{constructor(J,ce){super(J,ce);Te(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Ot extends jt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class fs extends jt{}class ci extends jt{}class Dn extends jt{}class Br extends jt{constructor(I,J){super(I,J),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ce=>this.languageRegex.test(ce)),this.lang_to_token=ce=>ce}_build_translation_inputs(I,J,ce){return cn(this,I,J,ce)}}class Is extends Br{}class Yr extends jt{}class Mn extends jt{}const Sr="▁";class Wi extends jt{constructor(J,ce){super(J,ce);Te(this,"padding_side","left");this.legacy=ce.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Ct({replacement:Sr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(J){if(J===null)return null;if(this.legacy||J.length===0)return super._encode_text(J);let ce=super._encode_text(Sr+J.replaceAll(Sr," "));return ce.length>1&&ce[0]===Sr&&this.special_tokens.includes(ce[1])&&(ce=ce.slice(1)),ce}}class ui extends jt{}class Jo extends jt{}class po extends jt{}class ho extends jt{}class mo extends jt{}class jn extends jt{}class fo extends jt{}class Zo extends jt{}class di extends jt{}function cn(Ee,I,J,ce){if(!("language_codes"in Ee)||!Array.isArray(Ee.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in Ee)||!(Ee.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in Ee)||typeof Ee.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const ve=ce.src_lang,Pe=ce.tgt_lang;if(!Ee.language_codes.includes(Pe))throw new Error(`Target language code "${Pe}" is not valid. Must be one of: {${Ee.language_codes.join(", ")}}`);if(ve!==void 0){if(!Ee.language_codes.includes(ve))throw new Error(`Source language code "${ve}" is not valid. Must be one of: {${Ee.language_codes.join(", ")}}`);for(const qe of Ee.post_processor.config.single)if("SpecialToken"in qe&&Ee.languageRegex.test(qe.SpecialToken.id)){qe.SpecialToken.id=Ee.lang_to_token(ve);break}}return ce.forced_bos_token_id=Ee.model.convert_tokens_to_ids([Ee.lang_to_token(Pe)])[0],Ee._call(I,J)}class Bn extends jt{constructor(I,J){super(I,J),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ce=>this.languageRegex.test(ce)),this.lang_to_token=ce=>ce}_build_translation_inputs(I,J,ce){return cn(this,I,J,ce)}}class Rn extends jt{constructor(I,J){super(I,J),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ce=>this.languageRegex.test(ce)).map(ce=>ce.slice(2,-2)),this.lang_to_token=ce=>`__${ce}__`}_build_translation_inputs(I,J,ce){return cn(this,I,J,ce)}}class xi extends jt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(I,{return_timestamps:J=!1,return_language:ce=!1,time_precision:ve=null,force_full_sequences:Pe=!0}={}){if(ve===null)throw Error("Must specify time_precision");let qe=null;const lt=J==="word";function mt(){return{language:qe,timestamp:[null,null],text:""}}const pt=[];let xt=mt(),Qt=0;const xr=this.timestamp_begin;let nr=[],Dr=[],er=!1,mr=null;const Hs=new Set(this.all_special_ids);for(const Tr of I){const vs=Tr.tokens,Xs=lt?Tr.token_timestamps:null;let un=null,Kt=xr;if("stride"in Tr){const[dr,kr,yt]=Tr.stride;if(Qt-=kr,mr=dr-yt,kr&&(Kt=kr/ve+xr),yt)for(let ir=vs.length-1;ir>=0;--ir){const Hr=Number(vs[ir]);if(Hr>=xr){if(un!==null&&(Hr-xr)*ve<mr)break;un=Hr}}}let ts=[],Gs=[];for(let dr=0;dr<vs.length;++dr){const kr=Number(vs[dr]);if(Hs.has(kr)){const yt=this.decode([kr]),ir=x.WHISPER_LANGUAGE_MAPPING.get(yt.slice(2,-2));if(ir!==void 0){if(qe!==null&&ir!==qe&&!J){nr.push(ts);const Hr=this.findLongestCommonSequence(nr)[0],xn=this.decode(Hr);xt.text=xn,pt.push(xt),nr=[],ts=[],xt=mt()}qe=xt.language=ir}}else if(kr>=xr){const yt=(kr-xr)*ve+Qt,ir=(0,v.round)(yt,2);if(un!==null&&kr>=un)er=!0;else if(er||nr.length>0&&kr<Kt)er=!1;else if(xt.timestamp[0]===null)xt.timestamp[0]=ir;else if(ir!==xt.timestamp[0]){xt.timestamp[1]=ir,nr.push(ts),lt&&Dr.push(Gs);const[Hr,xn]=this.findLongestCommonSequence(nr,Dr),Tn=this.decode(Hr);xt.text=Tn,lt&&(xt.words=this.collateWordTimestamps(Hr,xn,qe)),pt.push(xt),nr=[],ts=[],Dr=[],Gs=[],xt=mt()}}else if(ts.push(kr),lt){let yt=(0,v.round)(Xs[dr]+Qt,2),ir;if(dr+1<Xs.length){ir=(0,v.round)(Xs[dr+1]+Qt,2);const Hr=this.decode([kr]);L.test(Hr)&&(ir=(0,v.round)(Math.min(yt+ve,ir),2))}else ir=null;Gs.push([yt,ir])}}if("stride"in Tr){const[dr,kr,yt]=Tr.stride;Qt+=dr-yt}ts.length>0?(nr.push(ts),lt&&Dr.push(Gs)):nr.every(dr=>dr.length===0)&&(xt=mt(),nr=[],ts=[],Dr=[],Gs=[])}if(nr.length>0){if(Pe&&J)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Tr,vs]=this.findLongestCommonSequence(nr,Dr),Xs=this.decode(Tr);xt.text=Xs,lt&&(xt.words=this.collateWordTimestamps(Tr,vs,qe)),pt.push(xt)}let gs=Object.create(null);const De=pt.map(Tr=>Tr.text).join("");if(J||ce){for(let Tr=0;Tr<pt.length;++Tr){const vs=pt[Tr];J||delete vs.timestamp,ce||delete vs.language}if(lt){const Tr=[];for(const vs of pt)for(const Xs of vs.words)Tr.push(Xs);gs={chunks:Tr}}else gs={chunks:pt}}return[De,gs]}findLongestCommonSequence(I,J=null){let ce=I[0],ve=ce.length,Pe=[];const qe=Array.isArray(J)&&J.length>0;let lt=qe?[]:null,mt=qe?J[0]:null;for(let pt=1;pt<I.length;++pt){const xt=I[pt];let Qt=0,xr=[ve,ve,0,0];const nr=xt.length;for(let Tr=1;Tr<ve+nr;++Tr){const vs=Math.max(0,ve-Tr),Xs=Math.min(ve,ve+nr-Tr),un=ce.slice(vs,Xs),Kt=Math.max(0,Tr-ve),ts=Math.min(nr,Tr),Gs=xt.slice(Kt,ts);if(un.length!==Gs.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let dr;qe?dr=un.filter((ir,Hr)=>ir===Gs[Hr]&&mt[vs+Hr]<=J[pt][Kt+Hr]).length:dr=un.filter((ir,Hr)=>ir===Gs[Hr]).length;const kr=Tr/1e4,yt=dr/Tr+kr;dr>1&&yt>Qt&&(Qt=yt,xr=[vs,Xs,Kt,ts])}const[Dr,er,mr,Hs]=xr,gs=Math.floor((er+Dr)/2),De=Math.floor((Hs+mr)/2);Pe.push(...ce.slice(0,gs)),ce=xt.slice(De),ve=ce.length,qe&&(lt.push(...mt.slice(0,gs)),mt=J[pt].slice(De))}return Pe.push(...ce),qe?(lt.push(...mt),[Pe,lt]):[Pe,[]]}collateWordTimestamps(I,J,ce){const[ve,Pe,qe]=this.combineTokensIntoWords(I,ce),lt=[];for(let mt=0;mt<ve.length;++mt){const pt=qe[mt];lt.push({text:ve[mt],timestamp:[J[pt.at(0)][0],J[pt.at(-1)][1]]})}return lt}combineTokensIntoWords(I,J,ce=`"'“¡¿([{-`,ve=`"'.。,，!！?？:：”)]}、`){J=J??"english";let Pe,qe,lt;return["chinese","japanese","thai","lao","myanmar"].includes(J)?[Pe,qe,lt]=this.splitTokensOnUnicode(I):[Pe,qe,lt]=this.splitTokensOnSpaces(I),this.mergePunctuations(Pe,qe,lt,ce,ve)}decode(I,J){let ce;return J!=null&&J.decode_with_timestamps?(I instanceof P.Tensor&&(I=oe(I)),ce=this.decodeWithTimestamps(I,J)):ce=super.decode(I,J),ce}decodeWithTimestamps(I,J){const ce=(J==null?void 0:J.time_precision)??.02,ve=Array.from(this.all_special_ids).at(-1)+1;let Pe=[[]];for(let qe of I)if(qe=Number(qe),qe>=ve){const lt=((qe-ve)*ce).toFixed(2);Pe.push(`<|${lt}|>`),Pe.push([])}else Pe[Pe.length-1].push(qe);return Pe=Pe.map(qe=>typeof qe=="string"?qe:super.decode(qe,J)),Pe.join("")}splitTokensOnUnicode(I){const J=this.decode(I,{decode_with_timestamps:!0}),ce="�",ve=[],Pe=[],qe=[];let lt=[],mt=[],pt=0;for(let xt=0;xt<I.length;++xt){const Qt=I[xt];lt.push(Qt),mt.push(xt);const xr=this.decode(lt,{decode_with_timestamps:!0});(!xr.includes(ce)||J[pt+xr.indexOf(ce)]===ce)&&(ve.push(xr),Pe.push(lt),qe.push(mt),lt=[],mt=[],pt+=xr.length)}return[ve,Pe,qe]}splitTokensOnSpaces(I){const[J,ce,ve]=this.splitTokensOnUnicode(I),Pe=[],qe=[],lt=[],mt=new RegExp(`^[${E}]$`,"gu");for(let pt=0;pt<J.length;++pt){const xt=J[pt],Qt=ce[pt],xr=ve[pt],nr=Qt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Dr=xt.startsWith(" "),er=xt.trim(),mr=mt.test(er);if(nr||Dr||mr||Pe.length===0)Pe.push(xt),qe.push(Qt),lt.push(xr);else{const Hs=Pe.length-1;Pe[Hs]+=xt,qe[Hs].push(...Qt),lt[Hs].push(...xr)}}return[Pe,qe,lt]}mergePunctuations(I,J,ce,ve,Pe){const qe=structuredClone(I),lt=structuredClone(J),mt=structuredClone(ce);let pt=qe.length-2,xt=qe.length-1;for(;pt>=0;)qe[pt].startsWith(" ")&&ve.includes(qe[pt].trim())?(qe[xt]=qe[pt]+qe[xt],lt[xt]=(0,u.mergeArrays)(lt[pt],lt[xt]),mt[xt]=(0,u.mergeArrays)(mt[pt],mt[xt]),qe[pt]="",lt[pt]=[],mt[pt]=[]):xt=pt,--pt;for(pt=0,xt=1;xt<qe.length;)!qe[pt].endsWith(" ")&&Pe.includes(qe[xt])?(qe[pt]+=qe[xt],lt[pt]=(0,u.mergeArrays)(lt[pt],lt[xt]),mt[pt]=(0,u.mergeArrays)(mt[pt],mt[xt]),qe[xt]="",lt[xt]=[],mt[xt]=[]):pt=xt,++xt;return[qe.filter(Qt=>Qt),lt.filter(Qt=>Qt.length>0),mt.filter(Qt=>Qt.length>0)]}}class Gi extends jt{}class qi extends jt{}class Ki extends jt{}class Dt extends jt{constructor(I,J){super(I,J),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ce=>this.languageRegex.test(ce)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(I){if(I===null)return null;const[J,...ce]=I.trim().split(this.languageRegex);if(ce.length===0)return super._encode_text(J);if(ce.length===2){const[ve,Pe]=ce;return this.supported_language_codes.includes(ve)||console.warn(`Unsupported language code "${ve}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,u.mergeArrays)([ve],super._encode_text(Pe))}}}class Hi extends jt{}class go extends jt{}class _o extends jt{}class yo extends jt{}class Xi extends jt{}class wo extends jt{constructor(I,J){super(I,J),this.decoder=new kt({})}}class Qi extends jt{}class Yi extends jt{}class Mr{static async from_pretrained(I,{progress_callback:J=null,config:ce=null,cache_dir:ve=null,local_files_only:Pe=!1,revision:qe="main",legacy:lt=null}={}){var xr;const[mt,pt]=await k(I,{progress_callback:J,config:ce,cache_dir:ve,local_files_only:Pe,revision:qe,legacy:lt}),xt=((xr=pt.tokenizer_class)==null?void 0:xr.replace(/Fast$/,""))??"PreTrainedTokenizer";let Qt=this.TOKENIZER_CLASS_MAPPING[xt];return Qt||(console.warn(`Unknown tokenizer class "${xt}", attempting to construct from base class.`),Qt=jt),new Qt(mt,pt)}}Te(Mr,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:fs,DistilBertTokenizer:Ks,CamembertTokenizer:at,DebertaTokenizer:oi,DebertaV2Tokenizer:ln,BertTokenizer:an,HerbertTokenizer:ai,ConvBertTokenizer:li,RoFormerTokenizer:Ln,XLMTokenizer:bt,ElectraTokenizer:Ot,MobileBertTokenizer:ii,SqueezeBertTokenizer:Mi,AlbertTokenizer:zn,GPT2Tokenizer:ci,BartTokenizer:Dn,MBartTokenizer:Br,MBart50Tokenizer:Is,RobertaTokenizer:Yr,WhisperTokenizer:xi,CodeGenTokenizer:Gi,CLIPTokenizer:qi,SiglipTokenizer:Ki,MarianTokenizer:Dt,BloomTokenizer:Mn,NllbTokenizer:Bn,M2M100Tokenizer:Rn,LlamaTokenizer:Wi,CodeLlamaTokenizer:ui,XLMRobertaTokenizer:Jo,MPNetTokenizer:po,FalconTokenizer:ho,GPTNeoXTokenizer:mo,EsmTokenizer:jn,Wav2Vec2CTCTokenizer:Hi,BlenderbotTokenizer:go,BlenderbotSmallTokenizer:_o,SpeechT5Tokenizer:yo,NougatTokenizer:Xi,VitsTokenizer:wo,Qwen2Tokenizer:fo,GemmaTokenizer:Zo,Grok1Tokenizer:di,CohereTokenizer:Qi,MgpstrTokenizer:Yi,PreTrainedTokenizer:jt})},"./src/utils/audio.js":(t,s,n)=>{n.r(s),n.d(s,{hamming:()=>x,hanning:()=>b,mel_filter_bank:()=>V,read_audio:()=>P,spectrogram:()=>E,window_function:()=>L});var o=n("./src/utils/hub.js"),u=n("./src/utils/maths.js"),h=n("./src/utils/core.js"),v=n("./src/utils/tensor.js");async function P(S,se){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const ee=await(await(0,o.getFile)(S)).arrayBuffer(),pe=new AudioContext({sampleRate:se});typeof se>"u"&&console.warn(`No sampling rate provided, using default of ${pe.sampleRate}Hz.`);const he=await pe.decodeAudioData(ee);let be;if(he.numberOfChannels===2){const Ce=Math.sqrt(2),ke=he.getChannelData(0),je=he.getChannelData(1);be=new Float32Array(ke.length);for(let fe=0;fe<he.length;++fe)be[fe]=Ce*(ke[fe]+je[fe])/2}else be=he.getChannelData(0);return be}function f(S,se){if(S<1)return new Float64Array;if(S===1)return new Float64Array([1]);const ee=1-se,pe=2*Math.PI/(S-1),he=new Float64Array(S);for(let be=0;be<S;++be)he[be]=se-ee*Math.cos(be*pe);return he}function b(S){return f(S,.5)}function x(S){return f(S,.54)}const k={htk:S=>2595*Math.log10(1+S/700),kaldi:S=>1127*Math.log(1+S/700),slaney:(S,se=1e3,ee=15,pe=27/Math.log(6.4))=>S>=se?ee+Math.log(S/se)*pe:3*S/200};function C(S,se="htk"){const ee=k[se];if(!ee)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof S=="number"?ee(S):S.map(pe=>ee(pe))}const N={htk:S=>700*(10**(S/2595)-1),kaldi:S=>700*(Math.exp(S/1127)-1),slaney:(S,se=1e3,ee=15,pe=Math.log(6.4)/27)=>S>=ee?se*Math.exp(pe*(S-ee)):200*S/3};function X(S,se="htk"){const ee=N[se];if(!ee)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof S=="number"?ee(S):S.map(pe=>ee(pe))}function oe(S,se){const ee=Float64Array.from({length:se.length-1},(Ce,ke)=>se[ke+1]-se[ke]),pe=Array.from({length:S.length},()=>new Array(se.length));for(let Ce=0;Ce<S.length;++Ce){const ke=pe[Ce];for(let je=0;je<se.length;++je)ke[je]=se[je]-S[Ce]}const he=se.length-2,be=Array.from({length:he},()=>new Array(S.length));for(let Ce=0;Ce<S.length;++Ce){const ke=pe[Ce];for(let je=0;je<he;++je){const fe=-ke[je]/ee[je],K=ke[je+2]/ee[je+1];be[je][Ce]=Math.max(0,Math.min(fe,K))}}return be}function re(S,se,ee){const pe=(se-S)/(ee-1);return Float64Array.from({length:ee},(he,be)=>S+pe*be)}function V(S,se,ee,pe,he,be=null,Ce="htk",ke=!1){if(be!==null&&be!=="slaney")throw new Error('norm must be one of null or "slaney"');const je=C(ee,Ce),fe=C(pe,Ce),K=re(je,fe,se+2);let me=X(K,Ce),ge;if(ke){const We=he/(S*2);ge=C(Float64Array.from({length:S},(Se,Ne)=>Ne*We),Ce),me=K}else ge=re(0,Math.floor(he/2),S);const $e=oe(ge,me);if(be!==null&&be==="slaney")for(let We=0;We<se;++We){const Se=$e[We],Ne=2/(me[We+2]-me[We]);for(let He=0;He<S;++He)Se[He]*=Ne}return $e}function H(S,se,ee){const pe=new S.constructor(S.length+se+ee),he=S.length-1;for(let be=0;be<S.length;++be)pe[se+be]=S[be];for(let be=1;be<=se;++be)pe[se-be]=S[(0,h.calculateReflectOffset)(be,he)];for(let be=1;be<=ee;++be)pe[he+se+be]=S[(0,h.calculateReflectOffset)(he-be,he)];return pe}function te(S,se,ee,pe,he){if(ee<=0)throw new Error("reference must be greater than zero");if(pe<=0)throw new Error("min_value must be greater than zero");ee=Math.max(pe,ee);const be=Math.log10(ee);for(let Ce=0;Ce<S.length;++Ce)S[Ce]=se*Math.log10(Math.max(pe,S[Ce])-be);if(he!==null){if(he<=0)throw new Error("db_range must be greater than zero");const Ce=(0,u.max)(S)[0]-he;for(let ke=0;ke<S.length;++ke)S[ke]=Math.max(S[ke],Ce)}return S}function G(S,se=1,ee=1e-5,pe=null){return te(S,20,se,ee,pe)}function D(S,se=1,ee=1e-10,pe=null){return te(S,10,se,ee,pe)}async function E(S,se,ee,pe,{fft_length:he=null,power:be=1,center:Ce=!0,pad_mode:ke="reflect",onesided:je=!0,preemphasis:fe=null,mel_filters:K=null,mel_floor:me=1e-10,log_mel:ge=null,reference:$e=1,min_value:We=1e-10,db_range:Se=null,remove_dc_offset:Ne=null,min_num_frames:He=null,max_num_frames:Be=null,do_pad:le=!0,transpose:Fe=!1}={}){const Re=se.length;if(he===null&&(he=ee),ee>he)throw Error(`frame_length (${ee}) may not be larger than fft_length (${he})`);if(Re!==ee)throw new Error(`Length of the window (${Re}) must equal frame_length (${ee})`);if(pe<=0)throw new Error("hop_length must be greater than zero");if(be===null&&K!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(Ce){if(ke!=="reflect")throw new Error(`pad_mode="${ke}" not implemented yet.`);const j=Math.floor((he-1)/2)+1;S=H(S,j,j)}let ye=Math.floor(1+Math.floor((S.length-ee)/pe));He!==null&&ye<He&&(ye=He);const Ae=je?Math.floor(he/2)+1:he;let Ze=ye,Ye=ye;Be!==null&&(Be>ye?le&&(Ye=Be):Ye=Ze=Be);const Qe=new u.FFT(he),Ue=new Float64Array(he),it=new Float64Array(Qe.outputBufferSize),ut=new Float32Array(Ae*Ye);for(let j=0;j<Ze;++j){const ae=j*pe,Q=Math.min(S.length-ae,ee);Q!==ee&&Ue.fill(0,0,ee);for(let de=0;de<Q;++de)Ue[de]=S[ae+de];if(Ne){let de=0;for(let et=0;et<Q;++et)de+=Ue[et];const Oe=de/Q;for(let et=0;et<Q;++et)Ue[et]-=Oe}if(fe!==null){for(let de=Q-1;de>=1;--de)Ue[de]-=fe*Ue[de-1];Ue[0]*=1-fe}for(let de=0;de<se.length;++de)Ue[de]*=se[de];Qe.realTransform(it,Ue);for(let de=0;de<Ae;++de){const Oe=de<<1;ut[de*Ye+j]=it[Oe]**2+it[Oe+1]**2}}if(be!==null&&be!==2){const j=2/be;for(let ae=0;ae<ut.length;++ae)ut[ae]**=j}const _t=K.length;let ht=await(0,v.matmul)(new v.Tensor("float32",K.flat(),[_t,Ae]),new v.Tensor("float32",ut,[Ae,Ye]));Fe&&(ht=ht.transpose(1,0));const gt=ht.data;for(let j=0;j<gt.length;++j)gt[j]=Math.max(me,gt[j]);if(be!==null&&ge!==null){const j=Math.min(gt.length,Ze*_t);switch(ge){case"log":for(let ae=0;ae<j;++ae)gt[ae]=Math.log(gt[ae]);break;case"log10":for(let ae=0;ae<j;++ae)gt[ae]=Math.log10(gt[ae]);break;case"dB":if(be===1)G(gt,$e,We,Se);else if(be===2)D(gt,$e,We,Se);else throw new Error(`Cannot use log_mel option '${ge}' with power ${be}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${ge}'`)}}return ht}function L(S,se,{periodic:ee=!0,frame_length:pe=null,center:he=!0}={}){const be=ee?S+1:S;let Ce;switch(se){case"boxcar":Ce=new Float64Array(be).fill(1);break;case"hann":case"hann_window":Ce=b(be);break;case"hamming":Ce=x(be);break;case"povey":Ce=b(be).map(ke=>Math.pow(ke,.85));break;default:throw new Error(`Unknown window type ${se}.`)}if(ee&&(Ce=Ce.subarray(0,S)),pe===null)return Ce;if(S>pe)throw new Error(`Length of the window (${S}) may not be larger than frame_length (${pe})`);return Ce}},"./src/utils/constants.js":(t,s,n)=>{n.r(s),n.d(s,{CHAT_TEMPLATE_NAME:()=>f,CONFIG_NAME:()=>u,FEATURE_EXTRACTOR_NAME:()=>h,GENERATION_CONFIG_NAME:()=>b,GITHUB_ISSUE_URL:()=>o,IMAGE_PROCESSOR_NAME:()=>v,PROCESSOR_NAME:()=>P});const o="https://github.com/huggingface/transformers.js/issues/new/choose",u="config.json",h="preprocessor_config.json",v=h,P="processor_config.json",f="chat_template.json",b="generation_config.json"},"./src/utils/core.js":(t,s,n)=>{n.r(s),n.d(s,{calculateDimensions:()=>b,calculateReflectOffset:()=>N,count:()=>re,dispatchCallback:()=>o,escapeRegExp:()=>h,isIntegralNumber:()=>P,isNullishDimension:()=>f,isTypedArray:()=>v,len:()=>oe,mergeArrays:()=>k,pick:()=>X,pop:()=>x,product:()=>C,reverseDictionary:()=>u});function o(V,H){V&&V(H)}function u(V){return Object.fromEntries(Object.entries(V).map(([H,te])=>[te,H]))}function h(V){return V.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function v(V){var H,te,G;return((G=(te=(H=V==null?void 0:V.prototype)==null?void 0:H.__proto__)==null?void 0:te.constructor)==null?void 0:G.name)==="TypedArray"}function P(V){return Number.isInteger(V)||typeof V=="bigint"}function f(V){return V==null||V===-1}function b(V){const H=[];let te=V;for(;Array.isArray(te);)H.push(te.length),te=te[0];return H}function x(V,H,te=void 0){const G=V[H];if(G!==void 0)return delete V[H],G;if(te===void 0)throw Error(`Key ${H} does not exist in object.`);return te}function k(...V){return Array.prototype.concat.apply([],V)}function C(...V){return V.reduce((H,te)=>H.flatMap(G=>te.map(D=>[G,D])))}function N(V,H){return Math.abs((V+H)%(2*H)-H)}function X(V,H){return Object.assign({},...H.map(te=>{if(V[te]!==void 0)return{[te]:V[te]}}))}function oe(V){let H=0;for(const te of V)++H;return H}function re(V,H){let te=0;for(const G of V)G===H&&++te;return te}},"./src/utils/data-structures.js":(t,s,n)=>{n.r(s),n.d(s,{CharTrie:()=>u,PriorityQueue:()=>o,TokenLattice:()=>v});class o{constructor(b=(k,C)=>k>C,x=1/0){this._heap=[],this._comparator=b,this._maxSize=x}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...b){return this.extend(b)}extend(b){for(const x of b)if(this.size<this._maxSize)this._heap.push(x),this._siftUp();else{const k=this._smallest();this._comparator(x,this._heap[k])&&(this._heap[k]=x,this._siftUpFrom(k))}return this.size}pop(){const b=this.peek(),x=this.size-1;return x>0&&this._swap(0,x),this._heap.pop(),this._siftDown(),b}replace(b){const x=this.peek();return this._heap[0]=b,this._siftDown(),x}_parent(b){return(b+1>>>1)-1}_left(b){return(b<<1)+1}_right(b){return b+1<<1}_greater(b,x){return this._comparator(this._heap[b],this._heap[x])}_swap(b,x){const k=this._heap[b];this._heap[b]=this._heap[x],this._heap[x]=k}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(b){for(;b>0&&this._greater(b,this._parent(b));)this._swap(b,this._parent(b)),b=this._parent(b)}_siftDown(){let b=0;for(;this._left(b)<this.size&&this._greater(this._left(b),b)||this._right(b)<this.size&&this._greater(this._right(b),b);){const x=this._right(b)<this.size&&this._greater(this._right(b),this._left(b))?this._right(b):this._left(b);this._swap(b,x),b=x}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class u{constructor(){this.root=h.default()}extend(b){for(const x of b)this.push(x)}push(b){let x=this.root;for(const k of b){let C=x.children.get(k);C===void 0&&(C=h.default(),x.children.set(k,C)),x=C}x.isLeaf=!0}*commonPrefixSearch(b){let x=this.root;if(x===void 0)return;let k="";for(const C of b){if(k+=C,x=x.children.get(C),x===void 0)return;x.isLeaf&&(yield k)}}}class h{constructor(b,x){this.isLeaf=b,this.children=x}static default(){return new h(!1,new Map)}}class v{constructor(b,x,k){this.chars=Array.from(b),this.len=this.chars.length,this.bosTokenId=x,this.eosTokenId=k,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const C=new P(this.bosTokenId,0,0,0,0),N=new P(this.eosTokenId,1,this.len,0,0);this.nodes.push(C.clone()),this.nodes.push(N.clone()),this.beginNodes[this.len].push(N),this.endNodes[0].push(C)}insert(b,x,k,C){const N=this.nodes.length,X=new P(C,N,b,x,k);this.beginNodes[b].push(X),this.endNodes[b+x].push(X),this.nodes.push(X)}viterbi(){const b=this.len;let x=0;for(;x<=b;){if(this.beginNodes[x].length==0)return[];for(let oe of this.beginNodes[x]){oe.prev=null;let re=0,V=null;for(let H of this.endNodes[x]){const te=H.backtraceScore+oe.score;(V===null||te>re)&&(V=H.clone(),re=te)}if(V!==null)oe.prev=V,oe.backtraceScore=re;else return[]}++x}const k=[],N=this.beginNodes[b][0].prev;if(N===null)return[];let X=N.clone();for(;X.prev!==null;)k.push(X.clone()),X=X.clone().prev.clone();return k.reverse(),k}piece(b){return this.chars.slice(b.pos,b.pos+b.length).join("")}tokens(){return this.viterbi().map(x=>this.piece(x))}tokenIds(){return this.viterbi().map(x=>x.tokenId)}}class P{constructor(b,x,k,C,N){this.tokenId=b,this.nodeId=x,this.pos=k,this.length=C,this.score=N,this.prev=null,this.backtraceScore=0}clone(){const b=new P(this.tokenId,this.nodeId,this.pos,this.length,this.score);return b.prev=this.prev,b.backtraceScore=this.backtraceScore,b}}},"./src/utils/devices.js":(t,s,n)=>{n.r(s),n.d(s,{DEVICE_TYPES:()=>o});const o=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(t,s,n)=>{n.r(s),n.d(s,{DATA_TYPES:()=>v,DEFAULT_DEVICE_DTYPE_MAPPING:()=>P,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>f,isWebGpuFp16Supported:()=>h});var o=n("./src/env.js"),u=n("./src/utils/devices.js");const h=function(){let b;return async function(){if(b===void 0)if(!o.apis.IS_WEBGPU_AVAILABLE)b=!1;else try{b=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{b=!1}return b}}(),v=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),P=Object.freeze({[u.DEVICE_TYPES.wasm]:v.q8}),f=Object.freeze({[v.fp32]:"",[v.fp16]:"_fp16",[v.int8]:"_int8",[v.uint8]:"_uint8",[v.q8]:"_quantized",[v.q4]:"_q4",[v.q4f16]:"_q4f16",[v.bnb4]:"_bnb4"})},"./src/utils/generic.js":(t,s,n)=>{n.r(s),n.d(s,{Callable:()=>o});const o=class{constructor(){let u=function(...h){return u._call(...h)};return Object.setPrototypeOf(u,new.target.prototype)}_call(...u){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(t,s,n)=>{n.r(s),n.d(s,{getFile:()=>x,getModelFile:()=>oe,getModelJSON:()=>re});var o=n("?7a2c"),u=n("?a42a"),h=n("./src/env.js"),v=n("./src/utils/core.js");const P={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class f{constructor(G){if(this.filePath=G,this.headers=new Headers,this.exists=o.existsSync(G),this.exists){this.status=200,this.statusText="OK";let D=o.statSync(G);this.headers.set("content-length",D.size.toString()),this.updateContentType();let E=this;this.body=new ReadableStream({start(L){E.arrayBuffer().then(S=>{L.enqueue(new Uint8Array(S)),L.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const G=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",P[G]??"application/octet-stream")}clone(){let G=new f(this.filePath);return G.exists=this.exists,G.status=this.status,G.statusText=this.statusText,G.headers=new Headers(this.headers),G}async arrayBuffer(){return(await o.promises.readFile(this.filePath)).buffer}async blob(){const G=await o.promises.readFile(this.filePath);return new Blob([G],{type:this.headers.get("content-type")})}async text(){return await o.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function b(te,G=null,D=null){let E;try{E=new URL(te)}catch{return!1}return!(G&&!G.includes(E.protocol)||D&&!D.includes(E.hostname))}async function x(te){var G;if(h.env.useFS&&!b(te,["http:","https:","blob:"]))return new f(te);if(typeof process<"u"&&((G=process==null?void 0:process.release)==null?void 0:G.name)==="node"){const D=!!(ro!=null&&ro.TESTING_REMOTELY),E=h.env.version,L=new Headers;if(L.set("User-Agent",`transformers.js/${E}; is_ci/${D};`),b(te,["http:","https:"],["huggingface.co","hf.co"])){const se=(ro==null?void 0:ro.HF_TOKEN)??(ro==null?void 0:ro.HF_ACCESS_TOKEN);se&&L.set("Authorization",`Bearer ${se}`)}return fetch(te,{headers:L})}else return fetch(te)}const k={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function C(te,G,D){if(!D)return null;const E=k[te]??`Error (${te}) occurred while trying to load file`;throw Error(`${E}: "${G}".`)}class N{constructor(G){this.path=G}async match(G){let D=u.join(this.path,G),E=new f(D);if(E.exists)return E}async put(G,D){const E=Buffer.from(await D.arrayBuffer());let L=u.join(this.path,G);try{await o.promises.mkdir(u.dirname(L),{recursive:!0}),await o.promises.writeFile(L,E)}catch(S){console.warn("An error occurred while writing the file to cache:",S)}}}async function X(te,...G){for(let D of G)try{let E=await te.match(D);if(E)return E}catch{continue}}async function oe(te,G,D=!0,E={}){if(!h.env.allowLocalModels){if(E.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!h.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,v.dispatchCallback)(E.progress_callback,{status:"initiate",name:te,file:G});let L;if(!L&&h.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{L=await caches.open("transformers-cache")}catch(ge){console.warn("An error occurred while opening the browser cache:",ge)}}if(!L&&h.env.useFSCache&&(L=new N(E.cache_dir??h.env.cacheDir)),!L&&h.env.useCustomCache){if(!h.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!h.env.customCache.match||!h.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");L=h.env.customCache}const S=E.revision??"main";let se=H(te,G),ee=H(h.env.localModelPath,se),pe=H(h.env.remoteHost,h.env.remotePathTemplate.replaceAll("{model}",te).replaceAll("{revision}",encodeURIComponent(S)),G),he=S==="main"?se:H(te,S,G),be,Ce=L instanceof N?he:pe,ke=!1,je;L&&(je=await X(L,ee,Ce));const fe=je!==void 0;if(je===void 0){if(h.env.allowLocalModels)if(b(se,["http:","https:"])){if(E.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${se}.`);if(!h.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${se}.`)}else try{je=await x(ee),be=ee}catch($e){console.warn(`Unable to load from local path "${ee}": "${$e}"`)}if(je===void 0||je.status===404){if(E.local_files_only||!h.env.allowRemoteModels){if(D)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${ee}".`);return null}if(je=await x(pe),je.status!==200)return C(je.status,pe,D);be=Ce}ke=L&&typeof Response<"u"&&je instanceof Response&&je.status===200}(0,v.dispatchCallback)(E.progress_callback,{status:"download",name:te,file:G});const K={status:"progress",name:te,file:G};let me;return E.progress_callback?fe&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(me=new Uint8Array(await je.arrayBuffer()),(0,v.dispatchCallback)(E.progress_callback,{...K,progress:100,loaded:me.length,total:me.length})):me=await V(je,ge=>{(0,v.dispatchCallback)(E.progress_callback,{...K,...ge})}):me=new Uint8Array(await je.arrayBuffer()),ke&&be&&await L.match(be)===void 0&&await L.put(be,new Response(me,{headers:je.headers})).catch(ge=>{console.warn(`Unable to add response to browser cache: ${ge}.`)}),(0,v.dispatchCallback)(E.progress_callback,{status:"done",name:te,file:G}),me}async function re(te,G,D=!0,E={}){let L=await oe(te,G,D,E);if(L===null)return{};let se=new TextDecoder("utf-8").decode(L);return JSON.parse(se)}async function V(te,G){const D=te.headers.get("Content-Length");D===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let E=parseInt(D??"0"),L=new Uint8Array(E),S=0;const se=te.body.getReader();async function ee(){const{done:pe,value:he}=await se.read();if(pe)return;let be=S+he.length;if(be>E){E=be;let ke=new Uint8Array(E);ke.set(L),L=ke}L.set(he,S),S=be;const Ce=S/E*100;return G({progress:Ce,loaded:S,total:E}),ee()}return await ee(),L}function H(...te){return te=te.map((G,D)=>(D&&(G=G.replace(new RegExp("^/"),"")),D!==te.length-1&&(G=G.replace(new RegExp("/$"),"")),G)),te.join("/")}},"./src/utils/image.js":(t,s,n)=>{n.r(s),n.d(s,{RawImage:()=>X,load_image:()=>oe});var o=n("./src/utils/core.js"),u=n("./src/utils/hub.js"),h=n("./src/env.js"),v=n("./src/utils/tensor.js"),P=n("?2b25");let f,b,x;const k=h.apis.IS_BROWSER_ENV||h.apis.IS_WEBWORKER_ENV;if(k)f=(re,V)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(re,V)},x=self.createImageBitmap,b=self.ImageData;else if(P)x=async re=>{const H=(await re.metadata()).channels,{data:te,info:G}=await re.rotate().raw().toBuffer({resolveWithObject:!0}),D=new X(new Uint8ClampedArray(te),G.width,G.height,G.channels);return H!==void 0&&H!==G.channels&&D.convert(H),D};else throw new Error("Unable to load image processing library.");const C={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},N=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class X{constructor(V,H,te,G){this.data=V,this.width=H,this.height=te,this.channels=G}get size(){return[this.width,this.height]}static async read(V){if(V instanceof X)return V;if(typeof V=="string"||V instanceof URL)return await this.fromURL(V);throw new Error(`Unsupported input type: ${typeof V}`)}static fromCanvas(V){if(!k)throw new Error("fromCanvas() is only supported in browser environments.");const te=V.getContext("2d").getImageData(0,0,V.width,V.height).data;return new X(te,V.width,V.height,4)}static async fromURL(V){const H=await(0,u.getFile)(V);if(H.status!==200)throw new Error(`Unable to read image from "${V}" (${H.status} ${H.statusText})`);const te=await H.blob();return this.fromBlob(te)}static async fromBlob(V){if(k){const H=await x(V),te=f(H.width,H.height).getContext("2d");return te.drawImage(H,0,0),new this(te.getImageData(0,0,H.width,H.height).data,H.width,H.height,4)}else{const H=P(await V.arrayBuffer());return await x(H)}}static fromTensor(V,H="CHW"){if(V.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${V.dims.length} dimensions.`);if(H==="CHW")V=V.transpose(1,2,0);else if(H!=="HWC")throw new Error(`Unsupported channel format: ${H}`);if(!(V.data instanceof Uint8ClampedArray||V.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${V.type}`);switch(V.dims[2]){case 1:case 2:case 3:case 4:return new X(V.data,V.dims[1],V.dims[0],V.dims[2]);default:throw new Error(`Unsupported number of channels: ${V.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const V=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let H=0,te=0;H<this.data.length;H+=this.channels){const G=this.data[H],D=this.data[H+1],E=this.data[H+2];V[te++]=Math.round(.2989*G+.587*D+.114*E)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(V,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const V=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let H=0,te=0;H<this.data.length;++H)V[te++]=this.data[H],V[te++]=this.data[H],V[te++]=this.data[H];break;case 4:for(let H=0,te=0;H<this.data.length;H+=4)V[te++]=this.data[H],V[te++]=this.data[H+1],V[te++]=this.data[H+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(V,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const V=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let H=0,te=0;H<this.data.length;++H)V[te++]=this.data[H],V[te++]=this.data[H],V[te++]=this.data[H],V[te++]=255;break;case 3:for(let H=0,te=0;H<this.data.length;H+=3)V[te++]=this.data[H],V[te++]=this.data[H+1],V[te++]=this.data[H+2],V[te++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(V,this.width,this.height,4)}async resize(V,H,{resample:te=2}={}){if(this.width===V&&this.height===H)return this;let G=C[te]??te;const D=(0,o.isNullishDimension)(V),E=(0,o.isNullishDimension)(H);if(D&&E)return this;if(D?V=H/this.height*this.width:E&&(H=V/this.width*this.height),k){const L=this.channels,S=this.toCanvas(),se=f(V,H).getContext("2d");return se.drawImage(S,0,0,V,H),new X(se.getImageData(0,0,V,H).data,V,H,4).convert(L)}else{let L=this.toSharp();switch(G){case"box":case"hamming":(G==="box"||G==="hamming")&&(console.warn(`Resampling method ${G} is not yet supported. Using bilinear instead.`),G="bilinear");case"nearest":case"bilinear":case"bicubic":L=L.affine([V/this.width,0,0,H/this.height],{interpolator:G});break;case"lanczos":L=L.resize({width:V,height:H,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${G} is not supported.`)}return await x(L)}}async pad([V,H,te,G]){if(V=Math.max(V,0),H=Math.max(H,0),te=Math.max(te,0),G=Math.max(G,0),V===0&&H===0&&te===0&&G===0)return this;if(k){const D=this.channels,E=this.toCanvas(),L=this.width+V+H,S=this.height+te+G,se=f(L,S).getContext("2d");return se.drawImage(E,0,0,this.width,this.height,V,te,this.width,this.height),new X(se.getImageData(0,0,L,S).data,L,S,4).convert(D)}else{const D=this.toSharp().extend({left:V,right:H,top:te,bottom:G});return await x(D)}}async crop([V,H,te,G]){if(V=Math.max(V,0),H=Math.max(H,0),te=Math.min(te,this.width-1),G=Math.min(G,this.height-1),V===0&&H===0&&te===this.width-1&&G===this.height-1)return this;const D=te-V+1,E=G-H+1;if(k){const L=this.channels,S=this.toCanvas(),se=f(D,E).getContext("2d");return se.drawImage(S,V,H,D,E,0,0,D,E),new X(se.getImageData(0,0,D,E).data,D,E,4).convert(L)}else{const L=this.toSharp().extract({left:V,top:H,width:D,height:E});return await x(L)}}async center_crop(V,H){if(this.width===V&&this.height===H)return this;const te=(this.width-V)/2,G=(this.height-H)/2;if(k){const D=this.channels,E=this.toCanvas(),L=f(V,H).getContext("2d");let S=0,se=0,ee=0,pe=0;return te>=0?S=te:ee=-te,G>=0?se=G:pe=-G,L.drawImage(E,S,se,V,H,ee,pe,V,H),new X(L.getImageData(0,0,V,H).data,V,H,4).convert(D)}else{let D=this.toSharp();if(te>=0&&G>=0)D=D.extract({left:Math.floor(te),top:Math.floor(G),width:V,height:H});else if(te<=0&&G<=0){const E=Math.floor(-G),L=Math.floor(-te);D=D.extend({top:E,left:L,right:V-this.width-L,bottom:H-this.height-E})}else{let E=[0,0],L=0;G<0?(E[0]=Math.floor(-G),E[1]=H-this.height-E[0]):L=Math.floor(G);let S=[0,0],se=0;te<0?(S[0]=Math.floor(-te),S[1]=V-this.width-S[0]):se=Math.floor(te),D=D.extend({top:E[0],bottom:E[1],left:S[0],right:S[1]}).extract({left:se,top:L,width:V,height:H})}return await x(D)}}async toBlob(V="image/png",H=1){if(!k)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:V,quality:H})}toTensor(V="CHW"){let H=new v.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(V!=="HWC")if(V==="CHW")H=H.permute(2,0,1);else throw new Error(`Unsupported channel format: ${V}`);return H}toCanvas(){if(!k)throw new Error("toCanvas() is only supported in browser environments.");const V=this.clone().rgba(),H=f(V.width,V.height),te=new b(V.data,V.width,V.height);return H.getContext("2d").putImageData(te,0,0),H}split(){const{data:V,width:H,height:te,channels:G}=this,D=V.constructor,E=V.length/G,L=Array.from({length:G},()=>new D(E));for(let S=0;S<E;++S){const se=G*S;for(let ee=0;ee<G;++ee)L[ee][S]=V[se+ee]}return L.map(S=>new X(S,H,te,1))}_update(V,H,te,G=null){return this.data=V,this.width=H,this.height=te,G!==null&&(this.channels=G),this}clone(){return new X(this.data.slice(),this.width,this.height,this.channels)}convert(V){if(this.channels===V)return this;switch(V){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(V){if(k){if(h.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const H=V.split(".").pop().toLowerCase(),te=N.get(H)??"image/png",G=await this.toBlob(te),D=URL.createObjectURL(G),E=document.createElement("a");E.href=D,E.download=V,E.click(),E.remove()}else{if(h.env.useFS)return await this.toSharp().toFile(V);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(k)throw new Error("toSharp() is only supported in server-side environments.");return P(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const oe=X.read.bind(X)},"./src/utils/maths.js":(t,s,n)=>{n.r(s),n.d(s,{FFT:()=>oe,bankers_round:()=>H,cos_sim:()=>f,dot:()=>P,dynamic_time_warping:()=>te,interpolate_data:()=>o,log_softmax:()=>v,magnitude:()=>b,max:()=>k,medianFilter:()=>re,min:()=>x,permute_data:()=>u,round:()=>V,softmax:()=>h});function o(G,[D,E,L],[S,se],ee="bilinear",pe=!1){const he=se/L,be=S/E,Ce=new G.constructor(S*se*D),ke=E*L,je=S*se;for(let fe=0;fe<S;++fe)for(let K=0;K<se;++K){const me=fe*se+K,ge=(K+.5)/he-.5,$e=(fe+.5)/be-.5;let We=Math.floor(ge),Se=Math.floor($e);const Ne=Math.min(We+1,L-1),He=Math.min(Se+1,E-1);We=Math.max(We,0),Se=Math.max(Se,0);const Be=ge-We,le=$e-Se,Fe=(1-Be)*(1-le),Re=Be*(1-le),ye=(1-Be)*le,Ae=Be*le,Ze=Se*L,Ye=He*L,Qe=Ze+We,Ue=Ze+Ne,it=Ye+We,ut=Ye+Ne;for(let _t=0;_t<D;++_t){const ht=_t*ke;Ce[_t*je+me]=Fe*G[ht+Qe]+Re*G[ht+Ue]+ye*G[ht+it]+Ae*G[ht+ut]}}return Ce}function u(G,D,E){const L=new Array(E.length),S=new Array(E.length);for(let pe=E.length-1,he=1;pe>=0;--pe)S[pe]=he,L[pe]=D[E[pe]],he*=L[pe];const se=E.map((pe,he)=>S[E.indexOf(he)]),ee=new G.constructor(G.length);for(let pe=0;pe<G.length;++pe){let he=0;for(let be=D.length-1,Ce=pe;be>=0;--be)he+=Ce%D[be]*se[be],Ce=Math.floor(Ce/D[be]);ee[he]=G[pe]}return[ee,L]}function h(G){const D=k(G)[0],E=G.map(se=>Math.exp(se-D)),L=E.reduce((se,ee)=>se+ee,0);return E.map(se=>se/L)}function v(G){const D=k(G)[0];let E=0;for(let se=0;se<G.length;++se)E+=Math.exp(G[se]-D);const L=Math.log(E);return G.map(se=>se-D-L)}function P(G,D){let E=0;for(let L=0;L<G.length;++L)E+=G[L]*D[L];return E}function f(G,D){const E=P(G,D),L=b(G),S=b(D);return E/(L*S)}function b(G){return Math.sqrt(G.reduce((D,E)=>D+E*E,0))}function x(G){if(G.length===0)throw Error("Array must not be empty");let D=G[0],E=0;for(let L=1;L<G.length;++L)G[L]<D&&(D=G[L],E=L);return[D,E]}function k(G){if(G.length===0)throw Error("Array must not be empty");let D=G[0],E=0;for(let L=1;L<G.length;++L)G[L]>D&&(D=G[L],E=L);return[Number(D),E]}function C(G){return G>0&&(G&G-1)===0}class N{constructor(D){if(this.size=D|0,this.size<=1||!C(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=D<<1,this.table=new Float64Array(this.size*2);for(let L=0;L<this.table.length;L+=2){const S=Math.PI*L/this.size;this.table[L]=Math.cos(S),this.table[L+1]=-Math.sin(S)}let E=0;for(let L=1;this.size>L;L<<=1)++E;this._width=E%2===0?E-1:E,this._bitrev=new Int32Array(1<<this._width);for(let L=0;L<this._bitrev.length;++L){this._bitrev[L]=0;for(let S=0;S<this._width;S+=2){const se=this._width-S-2;this._bitrev[L]|=(L>>>S&3)<<se}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(D,E){const L=E||new Array(D.length>>>1);for(let S=0;S<D.length;S+=2)L[S>>>1]=D[S];return L}toComplexArray(D,E){const L=E||this.createComplexArray();for(let S=0;S<L.length;S+=2)L[S]=D[S>>>1],L[S+1]=0;return L}transform(D,E){if(D===E)throw new Error("Input and output buffers must be different");this._transform4(D,E,1)}realTransform(D,E){if(D===E)throw new Error("Input and output buffers must be different");this._realTransform4(D,E,1)}inverseTransform(D,E){if(D===E)throw new Error("Input and output buffers must be different");this._transform4(D,E,-1);for(let L=0;L<D.length;++L)D[L]/=this.size}_transform4(D,E,L){const S=this._csize;let ee=1<<this._width,pe=S/ee<<1,he,be;const Ce=this._bitrev;if(pe===4)for(he=0,be=0;he<S;he+=pe,++be){const je=Ce[be];this._singleTransform2(E,D,he,je,ee)}else for(he=0,be=0;he<S;he+=pe,++be){const je=Ce[be];this._singleTransform4(E,D,he,je,ee,L)}const ke=this.table;for(ee>>=2;ee>=2;ee>>=2){pe=S/ee<<1;const je=pe>>>2;for(he=0;he<S;he+=pe){const fe=he+je-1;for(let K=he,me=0;K<fe;K+=2,me+=ee){const ge=K,$e=ge+je,We=$e+je,Se=We+je,Ne=D[ge],He=D[ge+1],Be=D[$e],le=D[$e+1],Fe=D[We],Re=D[We+1],ye=D[Se],Ae=D[Se+1],Ze=ke[me],Ye=L*ke[me+1],Qe=Be*Ze-le*Ye,Ue=Be*Ye+le*Ze,it=ke[2*me],ut=L*ke[2*me+1],_t=Fe*it-Re*ut,ht=Fe*ut+Re*it,gt=ke[3*me],j=L*ke[3*me+1],ae=ye*gt-Ae*j,Q=ye*j+Ae*gt,de=Ne+_t,Oe=He+ht,et=Ne-_t,ot=He-ht,ct=Qe+ae,Ft=Ue+Q,Tt=L*(Qe-ae),kt=L*(Ue-Q);D[ge]=de+ct,D[ge+1]=Oe+Ft,D[$e]=et+kt,D[$e+1]=ot-Tt,D[We]=de-ct,D[We+1]=Oe-Ft,D[Se]=et-kt,D[Se+1]=ot+Tt}}}}_singleTransform2(D,E,L,S,se){const ee=D[S],pe=D[S+1],he=D[S+se],be=D[S+se+1];E[L]=ee+he,E[L+1]=pe+be,E[L+2]=ee-he,E[L+3]=pe-be}_singleTransform4(D,E,L,S,se,ee){const pe=se*2,he=se*3,be=D[S],Ce=D[S+1],ke=D[S+se],je=D[S+se+1],fe=D[S+pe],K=D[S+pe+1],me=D[S+he],ge=D[S+he+1],$e=be+fe,We=Ce+K,Se=be-fe,Ne=Ce-K,He=ke+me,Be=je+ge,le=ee*(ke-me),Fe=ee*(je-ge);E[L]=$e+He,E[L+1]=We+Be,E[L+2]=Se+Fe,E[L+3]=Ne-le,E[L+4]=$e-He,E[L+5]=We-Be,E[L+6]=Se-Fe,E[L+7]=Ne+le}_realTransform4(D,E,L){const S=this._csize;let ee=1<<this._width,pe=S/ee<<1,he,be;const Ce=this._bitrev;if(pe===4)for(he=0,be=0;he<S;he+=pe,++be){const fe=Ce[be];this._singleRealTransform2(E,D,he,fe>>>1,ee>>>1)}else for(he=0,be=0;he<S;he+=pe,++be){const fe=Ce[be];this._singleRealTransform4(E,D,he,fe>>>1,ee>>>1,L)}const ke=this.table;for(ee>>=2;ee>=2;ee>>=2){pe=S/ee<<1;const fe=pe>>>1,K=fe>>>1,me=K>>>1;for(he=0;he<S;he+=pe)for(let ge=0,$e=0;ge<=me;ge+=2,$e+=ee){const We=he+ge,Se=We+K,Ne=Se+K,He=Ne+K,Be=D[We],le=D[We+1],Fe=D[Se],Re=D[Se+1],ye=D[Ne],Ae=D[Ne+1],Ze=D[He],Ye=D[He+1],Qe=Be,Ue=le,it=ke[$e],ut=L*ke[$e+1],_t=Fe*it-Re*ut,ht=Fe*ut+Re*it,gt=ke[2*$e],j=L*ke[2*$e+1],ae=ye*gt-Ae*j,Q=ye*j+Ae*gt,de=ke[3*$e],Oe=L*ke[3*$e+1],et=Ze*de-Ye*Oe,ot=Ze*Oe+Ye*de,ct=Qe+ae,Ft=Ue+Q,Tt=Qe-ae,kt=Ue-Q,Ct=_t+et,hr=ht+ot,Cr=L*(_t-et),as=L*(ht-ot);if(D[We]=ct+Ct,D[We+1]=Ft+hr,D[Se]=Tt+as,D[Se+1]=kt-Cr,ge===0){D[Ne]=ct-Ct,D[Ne+1]=Ft-hr;continue}if(ge===me)continue;const Gr=he+K-ge,Bs=he+fe-ge;D[Gr]=Tt-L*as,D[Gr+1]=-kt-L*Cr,D[Bs]=ct-L*Ct,D[Bs+1]=-Ft+L*hr}}const je=S>>>1;for(let fe=2;fe<je;fe+=2)D[S-fe]=D[fe],D[S-fe+1]=-D[fe+1]}_singleRealTransform2(D,E,L,S,se){const ee=D[S],pe=D[S+se];E[L]=ee+pe,E[L+1]=0,E[L+2]=ee-pe,E[L+3]=0}_singleRealTransform4(D,E,L,S,se,ee){const pe=se*2,he=se*3,be=D[S],Ce=D[S+se],ke=D[S+pe],je=D[S+he],fe=be+ke,K=be-ke,me=Ce+je,ge=ee*(Ce-je);E[L]=fe+me,E[L+1]=0,E[L+2]=K,E[L+3]=-ge,E[L+4]=fe-me,E[L+5]=0,E[L+6]=K,E[L+7]=ge}}class X{constructor(D){const E=2*(D-1),L=2*(2*D-1),S=2**Math.ceil(Math.log2(L));this.bufferSize=S,this._a=E;const se=new Float64Array(L),ee=new Float64Array(S);this._chirpBuffer=new Float64Array(S),this._buffer1=new Float64Array(S),this._buffer2=new Float64Array(S),this._outBuffer1=new Float64Array(S),this._outBuffer2=new Float64Array(S);const pe=-2*Math.PI/D,he=Math.cos(pe),be=Math.sin(pe);for(let Ce=0;Ce<L>>1;++Ce){const ke=(Ce+1-D)**2/2,je=Math.sqrt(he**2+be**2)**ke,fe=ke*Math.atan2(be,he),K=2*Ce;se[K]=je*Math.cos(fe),se[K+1]=je*Math.sin(fe),ee[K]=se[K],ee[K+1]=-se[K+1]}this._slicedChirpBuffer=se.subarray(E,L),this._f=new N(S>>1),this._f.transform(this._chirpBuffer,ee)}_transform(D,E,L){const S=this._buffer1,se=this._buffer2,ee=this._outBuffer1,pe=this._outBuffer2,he=this._chirpBuffer,be=this._slicedChirpBuffer,Ce=this._a;if(L)for(let ke=0;ke<be.length;ke+=2){const je=ke+1,fe=ke>>1,K=E[fe];S[ke]=K*be[ke],S[je]=K*be[je]}else for(let ke=0;ke<be.length;ke+=2){const je=ke+1;S[ke]=E[ke]*be[ke]-E[je]*be[je],S[je]=E[ke]*be[je]+E[je]*be[ke]}this._f.transform(ee,S);for(let ke=0;ke<he.length;ke+=2){const je=ke+1;se[ke]=ee[ke]*he[ke]-ee[je]*he[je],se[je]=ee[ke]*he[je]+ee[je]*he[ke]}this._f.inverseTransform(pe,se);for(let ke=0;ke<pe.length;ke+=2){const je=pe[ke+Ce],fe=pe[ke+Ce+1],K=be[ke],me=be[ke+1];D[ke]=je*K-fe*me,D[ke+1]=je*me+fe*K}}transform(D,E){this._transform(D,E,!1)}realTransform(D,E){this._transform(D,E,!0)}}class oe{constructor(D){this.fft_length=D,this.isPowerOfTwo=C(D),this.isPowerOfTwo?(this.fft=new N(D),this.outputBufferSize=2*D):(this.fft=new X(D),this.outputBufferSize=this.fft.bufferSize)}realTransform(D,E){this.fft.realTransform(D,E)}transform(D,E){this.fft.transform(D,E)}}function re(G,D){if(D%2===0||D<=0)throw new Error("Window size must be a positive odd number");const E=new G.constructor(G.length),L=new G.constructor(D),S=Math.floor(D/2);for(let se=0;se<G.length;++se){let ee=0;for(let pe=-S;pe<=S;++pe){let he=se+pe;he<0?he=Math.abs(he):he>=G.length&&(he=2*(G.length-1)-he),L[ee++]=G[he]}L.sort(),E[se]=L[S]}return E}function V(G,D){const E=Math.pow(10,D);return Math.round(G*E)/E}function H(G){const D=Math.round(G);return Math.abs(G)%1===.5?D%2===0?D:D-1:D}function te(G){const D=G.length,E=G[0].length,L=[D+1,E+1],S=Array.from({length:L[0]},()=>Array(L[1]).fill(1/0));S[0][0]=0;const se=Array.from({length:L[0]},()=>Array(L[1]).fill(-1));for(let Ce=1;Ce<L[1];++Ce)for(let ke=1;ke<L[0];++ke){const je=S[ke-1][Ce-1],fe=S[ke-1][Ce],K=S[ke][Ce-1];let me,ge;je<fe&&je<K?(me=je,ge=0):fe<je&&fe<K?(me=fe,ge=1):(me=K,ge=2),S[ke][Ce]=G[ke-1][Ce-1]+me,se[ke][Ce]=ge}for(let Ce=0;Ce<L[1];++Ce)se[0][Ce]=2;for(let Ce=0;Ce<L[0];++Ce)se[Ce][0]=1;let ee=D,pe=E,he=[],be=[];for(;ee>0||pe>0;)switch(he.push(ee-1),be.push(pe-1),se[ee][pe]){case 0:--ee,--pe;break;case 1:--ee;break;case 2:--pe;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${ee}, ${pe}]. Please file a bug report.`)}return he.reverse(),be.reverse(),[he,be]}},"./src/utils/tensor.js":(t,s,n)=>{n.r(s),n.d(s,{Tensor:()=>P,cat:()=>G,full:()=>ee,full_like:()=>pe,interpolate:()=>x,interpolate_4d:()=>k,layer_norm:()=>re,matmul:()=>C,mean:()=>L,mean_pooling:()=>oe,ones:()=>he,ones_like:()=>be,permute:()=>b,quantize_embeddings:()=>je,rfft:()=>N,stack:()=>D,std_mean:()=>E,topk:()=>X,zeros:()=>Ce,zeros_like:()=>ke});var o=n("./src/utils/maths.js"),u=n("./src/backends/onnx.js"),h=n("./src/ops/registry.js");const v=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class P{constructor(...K){Te(this,"ort_tensor");return(0,u.isONNXTensor)(K[0])?this.ort_tensor=K[0]:this.ort_tensor=new u.Tensor(K[0],K[1],K[2]),new Proxy(this,{get:(me,ge)=>{if(typeof ge=="string"){let $e=Number(ge);if(Number.isInteger($e))return me._getitem($e)}return me[ge]},set:(me,ge,$e)=>me[ge]=$e})}get dims(){return this.ort_tensor.dims}set dims(K){this.ort_tensor.dims=K}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[K,...me]=this.dims;if(me.length>0){const ge=me.reduce(($e,We)=>$e*We);for(let $e=0;$e<K;++$e)yield this._subarray($e,ge,me)}else yield*this.data}_getitem(K){const[me,...ge]=this.dims;if(K=te(K,me),ge.length>0){const $e=ge.reduce((We,Se)=>We*Se);return this._subarray(K,$e,ge)}else return new P(this.type,[this.data[K]],ge)}indexOf(K){const me=this.data;for(let ge=0;ge<me.length;++ge)if(me[ge]==K)return ge;return-1}_subarray(K,me,ge){const $e=K*me,We=(K+1)*me,Se="subarray"in this.data?this.data.subarray($e,We):this.data.slice($e,We);return new P(this.type,Se,ge)}item(){const K=this.data;if(K.length!==1)throw new Error(`a Tensor with ${K.length} elements cannot be converted to Scalar`);return K[0]}tolist(){return f(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const K=this.data;for(let me=0;me<K.length;++me)K[me]=1/(1+Math.exp(-K[me]));return this}map(K){return this.clone().map_(K)}map_(K){const me=this.data;for(let ge=0;ge<me.length;++ge)me[ge]=K(me[ge],ge,me);return this}mul(K){return this.clone().mul_(K)}mul_(K){const me=this.data;for(let ge=0;ge<me.length;++ge)me[ge]*=K;return this}div(K){return this.clone().div_(K)}div_(K){const me=this.data;for(let ge=0;ge<me.length;++ge)me[ge]/=K;return this}add(K){return this.clone().add_(K)}add_(K){const me=this.data;for(let ge=0;ge<me.length;++ge)me[ge]+=K;return this}sub(K){return this.clone().sub_(K)}sub_(K){const me=this.data;for(let ge=0;ge<me.length;++ge)me[ge]-=K;return this}clone(){return new P(this.type,this.data.slice(),this.dims.slice())}slice(...K){const me=[],ge=[];for(let Be=0;Be<this.dims.length;++Be){let le=K[Be];if(le==null)ge.push([0,this.dims[Be]]),me.push(this.dims[Be]);else if(typeof le=="number")le=te(le,this.dims[Be],Be),ge.push([le,le+1]);else if(Array.isArray(le)&&le.length===2){let[Fe,Re]=le;if(Fe=Fe===null?0:te(Fe,this.dims[Be],Be,!1),Re=Re===null?this.dims[Be]:te(Re,this.dims[Be],Be,!1),Fe>Re)throw new Error(`Invalid slice: ${le}`);const ye=[Math.max(Fe,0),Math.min(Re,this.dims[Be])];ge.push(ye),me.push(ye[1]-ye[0])}else throw new Error(`Invalid slice: ${le}`)}const $e=ge.map(([Be,le])=>le-Be),We=$e.reduce((Be,le)=>Be*le),Se=this.data,Ne=new Se.constructor(We),He=this.stride();for(let Be=0;Be<We;++Be){let le=0;for(let Fe=$e.length-1,Re=Be;Fe>=0;--Fe){const ye=$e[Fe];le+=(Re%ye+ge[Fe][0])*He[Fe],Re=Math.floor(Re/ye)}Ne[Be]=Se[le]}return new P(this.type,Ne,me)}permute(...K){return b(this,K)}transpose(...K){return this.permute(...K)}sum(K=null,me=!1){return this.norm(1,K,me)}norm(K="fro",me=null,ge=!1){if(K==="fro")K=2;else if(typeof K=="string")throw Error(`Unsupported norm: ${K}`);const $e=this.data;if(me===null){let Ne=$e.reduce((He,Be)=>He+Be**K,0)**(1/K);return new P(this.type,[Ne],[])}me=te(me,this.dims.length);const We=this.dims.slice();We[me]=1;const Se=new $e.constructor($e.length/this.dims[me]);for(let Ne=0;Ne<$e.length;++Ne){let He=0;for(let Be=this.dims.length-1,le=Ne,Fe=1;Be>=0;--Be){const Re=this.dims[Be];if(Be!==me){const ye=le%Re;He+=ye*Fe,Fe*=We[Be]}le=Math.floor(le/Re)}Se[He]+=$e[Ne]**K}if(K!==1)for(let Ne=0;Ne<Se.length;++Ne)Se[Ne]=Se[Ne]**(1/K);return ge||We.splice(me,1),new P(this.type,Se,We)}normalize_(K=2,me=1){me=te(me,this.dims.length);const ge=this.norm(K,me,!0),$e=this.data,We=ge.data;for(let Se=0;Se<$e.length;++Se){let Ne=0;for(let He=this.dims.length-1,Be=Se,le=1;He>=0;--He){const Fe=this.dims[He];if(He!==me){const Re=Be%Fe;Ne+=Re*le,le*=this.dims[He]}Be=Math.floor(Be/Fe)}$e[Se]/=We[Ne]}return this}normalize(K=2,me=1){return this.clone().normalize_(K,me)}stride(){return S(this.dims)}squeeze(K=null){return new P(this.type,this.data,V(this.dims,K))}squeeze_(K=null){return this.dims=V(this.dims,K),this}unsqueeze(K=null){return new P(this.type,this.data,H(this.dims,K))}unsqueeze_(K=null){return this.dims=H(this.dims,K),this}flatten_(K=0,me=-1){me=(me+this.dims.length)%this.dims.length;let ge=this.dims.slice(0,K),$e=this.dims.slice(K,me+1),We=this.dims.slice(me+1);return this.dims=[...ge,$e.reduce((Se,Ne)=>Se*Ne,1),...We],this}flatten(K=0,me=-1){return this.clone().flatten_(K,me)}view(...K){let me=-1;for(let $e=0;$e<K.length;++$e)if(K[$e]===-1){if(me!==-1)throw new Error("Only one dimension can be inferred");me=$e}const ge=this.data;if(me!==-1){const $e=K.reduce((We,Se,Ne)=>Ne!==me?We*Se:We,1);K[me]=ge.length/$e}return new P(this.type,ge,K)}neg_(){const K=this.data;for(let me=0;me<K.length;++me)K[me]=-K[me];return this}neg(){return this.clone().neg_()}clamp_(K,me){const ge=this.data;for(let $e=0;$e<ge.length;++$e)ge[$e]=Math.min(Math.max(ge[$e],K),me);return this}clamp(K,me){return this.clone().clamp_(K,me)}round_(){const K=this.data;for(let me=0;me<K.length;++me)K[me]=Math.round(K[me]);return this}round(){return this.clone().round_()}mean(K=null,me=!1){return L(this,K,me)}to(K){if(this.type===K)return this;if(!v.hasOwnProperty(K))throw new Error(`Unsupported type: ${K}`);return new P(K,v[K].from(this.data),this.dims)}}function f(fe,K){const me=fe.length,ge=K.reduce((We,Se)=>We*Se);if(me!==ge)throw Error(`cannot reshape array of size ${me} into shape (${K})`);let $e=fe;for(let We=K.length-1;We>=0;We--)$e=$e.reduce((Se,Ne)=>{let He=Se[Se.length-1];return He.length<K[We]?He.push(Ne):Se.push([Ne]),Se},[[]]);return $e[0]}function b(fe,K){const[me,ge]=(0,o.permute_data)(fe.data,fe.dims,K);return new P(fe.type,me,ge)}function x(fe,[K,me],ge="bilinear",$e=!1){const We=fe.dims.at(-3)??1,Se=fe.dims.at(-2),Ne=fe.dims.at(-1);let He=(0,o.interpolate_data)(fe.data,[We,Se,Ne],[K,me],ge,$e);return new P(fe.type,He,[We,K,me])}async function k(fe,{size:K=null,mode:me="bilinear"}={}){if(fe.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!K)throw new Error("`interpolate_4d` requires a `size` argument.");let ge;if(K.length===2)ge=[...fe.dims.slice(0,2),...K];else if(K.length===3)ge=[fe.dims[0],...K];else if(K.length===4)ge=K;else throw new Error("`size` must be of length 2, 3, or 4.");let $e;if(me==="bilinear")$e=await h.TensorOpRegistry.bilinear_interpolate_4d;else if(me==="bicubic")$e=await h.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${me}`);const We=new P("int64",new BigInt64Array(ge.map(BigInt)),[ge.length]);return await $e({x:fe,s:We})}async function C(fe,K){return await(await h.TensorOpRegistry.matmul)({a:fe,b:K})}async function N(fe,K){return await(await h.TensorOpRegistry.rfft)({x:fe,a:K})}async function X(fe,K){const me=await h.TensorOpRegistry.top_k;return K===null?K=fe.dims.at(-1):K=Math.min(K,fe.dims.at(-1)),await me({x:fe,k:new P("int64",[BigInt(K)],[1])})}function oe(fe,K){const me=fe.data,ge=K.data,$e=[fe.dims[0],fe.dims[2]],We=new me.constructor($e[0]*$e[1]),[Se,Ne,He]=fe.dims;let Be=0;for(let le=0;le<Se;++le){const Fe=le*He*Ne;for(let Re=0;Re<He;++Re){let ye=0,Ae=0;const Ze=le*Ne,Ye=Fe+Re;for(let Ue=0;Ue<Ne;++Ue){const it=Number(ge[Ze+Ue]);Ae+=it,ye+=me[Ye+Ue*He]*it}const Qe=ye/Ae;We[Be++]=Qe}}return new P(fe.type,We,$e)}function re(fe,K,{eps:me=1e-5}={}){if(fe.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[ge,$e]=fe.dims;if(K.length!==1&&K[0]!==$e)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[We,Se]=E(fe,1,0,!0),Ne=We.data,He=Se.data,Be=fe.data,le=new Be.constructor(Be.length);for(let Fe=0;Fe<ge;++Fe){const Re=Fe*$e;for(let ye=0;ye<$e;++ye){const Ae=Re+ye;le[Ae]=(Be[Ae]-He[Fe])/(Ne[Fe]+me)}}return new P(fe.type,le,fe.dims)}function V(fe,K){return fe=fe.slice(),K===null?fe=fe.filter(me=>me!==1):typeof K=="number"?fe[K]===1&&fe.splice(K,1):Array.isArray(K)&&(fe=fe.filter((me,ge)=>me!==1||!K.includes(ge))),fe}function H(fe,K){return K=te(K,fe.length+1),fe=fe.slice(),fe.splice(K,0,1),fe}function te(fe,K,me=null,ge=!0){if(ge&&(fe<-K||fe>=K))throw new Error(`IndexError: index ${fe} is out of bounds for dimension${me===null?"":" "+me} with size ${K}`);return fe<0&&(fe=(fe%K+K)%K),fe}function G(fe,K=0){K=te(K,fe[0].dims.length);const me=fe[0].dims.slice();me[K]=fe.reduce((Se,Ne)=>Se+Ne.dims[K],0);const ge=me.reduce((Se,Ne)=>Se*Ne,1),$e=new fe[0].data.constructor(ge),We=fe[0].type;if(K===0){let Se=0;for(const Ne of fe){const He=Ne.data;$e.set(He,Se),Se+=He.length}}else{let Se=0;for(let Ne=0;Ne<fe.length;++Ne){const{data:He,dims:Be}=fe[Ne];for(let le=0;le<He.length;++le){let Fe=0;for(let Re=Be.length-1,ye=le,Ae=1;Re>=0;--Re){const Ze=Be[Re];let Ye=ye%Ze;Re===K&&(Ye+=Se),Fe+=Ye*Ae,Ae*=me[Re],ye=Math.floor(ye/Ze)}$e[Fe]=He[le]}Se+=Be[K]}}return new P(We,$e,me)}function D(fe,K=0){return G(fe.map(me=>me.unsqueeze(K)),K)}function E(fe,K=null,me=1,ge=!1){const $e=fe.data,We=fe.dims;if(K===null){const Re=$e.reduce((Ye,Qe)=>Ye+Qe,0)/$e.length,ye=Math.sqrt($e.reduce((Ye,Qe)=>Ye+(Qe-Re)**2,0)/($e.length-me)),Ae=new P(fe.type,[Re],[]);return[new P(fe.type,[ye],[]),Ae]}K=te(K,We.length);const Se=L(fe,K,ge),Ne=Se.data,He=We.slice();He[K]=1;const Be=new $e.constructor($e.length/We[K]);for(let Fe=0;Fe<$e.length;++Fe){let Re=0;for(let ye=We.length-1,Ae=Fe,Ze=1;ye>=0;--ye){const Ye=We[ye];if(ye!==K){const Qe=Ae%Ye;Re+=Qe*Ze,Ze*=He[ye]}Ae=Math.floor(Ae/Ye)}Be[Re]+=($e[Fe]-Ne[Re])**2}for(let Fe=0;Fe<Be.length;++Fe)Be[Fe]=Math.sqrt(Be[Fe]/(We[K]-me));return ge||He.splice(K,1),[new P(fe.type,Be,He),Se]}function L(fe,K=null,me=!1){const ge=fe.data;if(K===null){const Ne=ge.reduce((He,Be)=>He+Be,0);return new P(fe.type,[Ne/ge.length],[])}const $e=fe.dims;K=te(K,$e.length);const We=$e.slice();We[K]=1;const Se=new ge.constructor(ge.length/$e[K]);for(let Ne=0;Ne<ge.length;++Ne){let He=0;for(let Be=$e.length-1,le=Ne,Fe=1;Be>=0;--Be){const Re=$e[Be];if(Be!==K){const ye=le%Re;He+=ye*Fe,Fe*=We[Be]}le=Math.floor(le/Re)}Se[He]+=ge[Ne]}if($e[K]!==1)for(let Ne=0;Ne<Se.length;++Ne)Se[Ne]=Se[Ne]/$e[K];return me||We.splice(K,1),new P(fe.type,Se,We)}function S(fe){const K=new Array(fe.length);for(let me=fe.length-1,ge=1;me>=0;--me)K[me]=ge,ge*=fe[me];return K}function se(fe,K,me,ge){const $e=fe.reduce((We,Se)=>We*Se,1);return new P(me,new ge($e).fill(K),fe)}function ee(fe,K){let me,ge;if(typeof K=="number")me="float32",ge=Float32Array;else if(typeof K=="bigint")me="int64",ge=BigInt64Array;else if(typeof K=="boolean")me="bool",ge=Uint8Array;else throw new Error(`Unsupported data type: ${typeof K}`);return se(fe,K,me,ge)}function pe(fe,K){return ee(fe.dims,K)}function he(fe){return se(fe,1n,"int64",BigInt64Array)}function be(fe){return he(fe.dims)}function Ce(fe){return se(fe,0n,"int64",BigInt64Array)}function ke(fe){return Ce(fe.dims)}function je(fe,K){if(fe.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(fe.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(K))throw new Error("The precision must be either 'binary' or 'ubinary'");const me=K==="binary",ge=me?"int8":"uint8",$e=me?Int8Array:Uint8Array,We=fe.data,Se=new $e(We.length/8);for(let Ne=0;Ne<We.length;++Ne){const He=We[Ne]>0?1:0,Be=Math.floor(Ne/8),le=Ne%8;Se[Be]|=He<<7-le,me&&le===0&&(Se[Be]-=128)}return new P(ge,Se,[fe.dims[0],fe.dims[1]/8])}}},S1={};function Pr(t){var s=S1[t];if(s!==void 0)return s.exports;var n=S1[t]={exports:{}};return Uv[t](n,n.exports,Pr),n.exports}Pr.m=Uv;(()=>{var t=Object.getPrototypeOf?n=>Object.getPrototypeOf(n):n=>n.__proto__,s;Pr.t=function(n,o){if(o&1&&(n=this(n)),o&8||typeof n=="object"&&n&&(o&4&&n.__esModule||o&16&&typeof n.then=="function"))return n;var u=Object.create(null);Pr.r(u);var h={};s=s||[null,t({}),t([]),t(t)];for(var v=o&2&&n;typeof v=="object"&&!~s.indexOf(v);v=t(v))Object.getOwnPropertyNames(v).forEach(P=>h[P]=()=>n[P]);return h.default=()=>n,Pr.d(u,h),u}})();Pr.d=(t,s)=>{for(var n in s)Pr.o(s,n)&&!Pr.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:s[n]})};Pr.o=(t,s)=>Object.prototype.hasOwnProperty.call(t,s);Pr.r=t=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};(()=>{var t;if(typeof import.meta.url=="string"&&(t=import.meta.url),!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),Pr.p=t})();Pr.b=new URL("./",import.meta.url);var _={};/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Pr.r(_);Pr.d(_,{ASTFeatureExtractor:()=>so.ASTFeatureExtractor,ASTForAudioClassification:()=>A.ASTForAudioClassification,ASTModel:()=>A.ASTModel,ASTPreTrainedModel:()=>A.ASTPreTrainedModel,AlbertForMaskedLM:()=>A.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>A.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>A.AlbertForSequenceClassification,AlbertModel:()=>A.AlbertModel,AlbertPreTrainedModel:()=>A.AlbertPreTrainedModel,AlbertTokenizer:()=>rr.AlbertTokenizer,AudioClassificationPipeline:()=>Jr.AudioClassificationPipeline,AutoConfig:()=>d_.AutoConfig,AutoFeatureExtractor:()=>nT.AutoFeatureExtractor,AutoImageProcessor:()=>oT.AutoImageProcessor,AutoModel:()=>A.AutoModel,AutoModelForAudioClassification:()=>A.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>A.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>A.AutoModelForCTC,AutoModelForCausalLM:()=>A.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>A.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>A.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>A.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>A.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>A.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>A.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>A.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>A.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>A.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>A.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>A.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>A.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>A.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>A.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>A.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>A.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>A.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>A.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>A.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>A.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>A.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>A.AutoModelForVision2Seq,AutoModelForXVector:()=>A.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>A.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>lT.AutoProcessor,AutoTokenizer:()=>rr.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>Jr.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>A.BartForConditionalGeneration,BartForSequenceClassification:()=>A.BartForSequenceClassification,BartModel:()=>A.BartModel,BartPretrainedModel:()=>A.BartPretrainedModel,BartTokenizer:()=>rr.BartTokenizer,BaseModelOutput:()=>A.BaseModelOutput,BaseStreamer:()=>p_.BaseStreamer,BeitFeatureExtractor:()=>Zt.BeitFeatureExtractor,BeitForImageClassification:()=>A.BeitForImageClassification,BeitModel:()=>A.BeitModel,BeitPreTrainedModel:()=>A.BeitPreTrainedModel,BertForMaskedLM:()=>A.BertForMaskedLM,BertForQuestionAnswering:()=>A.BertForQuestionAnswering,BertForSequenceClassification:()=>A.BertForSequenceClassification,BertForTokenClassification:()=>A.BertForTokenClassification,BertModel:()=>A.BertModel,BertPreTrainedModel:()=>A.BertPreTrainedModel,BertTokenizer:()=>rr.BertTokenizer,BitImageProcessor:()=>Zt.BitImageProcessor,BlenderbotForConditionalGeneration:()=>A.BlenderbotForConditionalGeneration,BlenderbotModel:()=>A.BlenderbotModel,BlenderbotPreTrainedModel:()=>A.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>A.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>A.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>A.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>rr.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>rr.BlenderbotTokenizer,BloomForCausalLM:()=>A.BloomForCausalLM,BloomModel:()=>A.BloomModel,BloomPreTrainedModel:()=>A.BloomPreTrainedModel,BloomTokenizer:()=>rr.BloomTokenizer,CLIPFeatureExtractor:()=>Zt.CLIPFeatureExtractor,CLIPImageProcessor:()=>Zt.CLIPImageProcessor,CLIPModel:()=>A.CLIPModel,CLIPPreTrainedModel:()=>A.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>A.CLIPSegForImageSegmentation,CLIPSegModel:()=>A.CLIPSegModel,CLIPSegPreTrainedModel:()=>A.CLIPSegPreTrainedModel,CLIPTextModel:()=>A.CLIPTextModel,CLIPTextModelWithProjection:()=>A.CLIPTextModelWithProjection,CLIPTokenizer:()=>rr.CLIPTokenizer,CLIPVisionModel:()=>A.CLIPVisionModel,CLIPVisionModelWithProjection:()=>A.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>A.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>A.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>A.CamembertForSequenceClassification,CamembertForTokenClassification:()=>A.CamembertForTokenClassification,CamembertModel:()=>A.CamembertModel,CamembertPreTrainedModel:()=>A.CamembertPreTrainedModel,CamembertTokenizer:()=>rr.CamembertTokenizer,CausalLMOutput:()=>A.CausalLMOutput,CausalLMOutputWithPast:()=>A.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>Zt.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>A.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>A.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>A.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>so.ClapFeatureExtractor,ClapModel:()=>A.ClapModel,ClapPreTrainedModel:()=>A.ClapPreTrainedModel,ClapTextModelWithProjection:()=>A.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>Js.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>A.CodeGenForCausalLM,CodeGenModel:()=>A.CodeGenModel,CodeGenPreTrainedModel:()=>A.CodeGenPreTrainedModel,CodeGenTokenizer:()=>rr.CodeGenTokenizer,CodeLlamaTokenizer:()=>rr.CodeLlamaTokenizer,CohereForCausalLM:()=>A.CohereForCausalLM,CohereModel:()=>A.CohereModel,CoherePreTrainedModel:()=>A.CoherePreTrainedModel,CohereTokenizer:()=>rr.CohereTokenizer,ConvBertForMaskedLM:()=>A.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>A.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>A.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>A.ConvBertForTokenClassification,ConvBertModel:()=>A.ConvBertModel,ConvBertPreTrainedModel:()=>A.ConvBertPreTrainedModel,ConvBertTokenizer:()=>rr.ConvBertTokenizer,ConvNextFeatureExtractor:()=>Zt.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>A.ConvNextForImageClassification,ConvNextImageProcessor:()=>Zt.ConvNextImageProcessor,ConvNextModel:()=>A.ConvNextModel,ConvNextPreTrainedModel:()=>A.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>A.ConvNextV2ForImageClassification,ConvNextV2Model:()=>A.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>A.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>Zt.DPTFeatureExtractor,DPTForDepthEstimation:()=>A.DPTForDepthEstimation,DPTImageProcessor:()=>Zt.DPTImageProcessor,DPTModel:()=>A.DPTModel,DPTPreTrainedModel:()=>A.DPTPreTrainedModel,DebertaForMaskedLM:()=>A.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>A.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>A.DebertaForSequenceClassification,DebertaForTokenClassification:()=>A.DebertaForTokenClassification,DebertaModel:()=>A.DebertaModel,DebertaPreTrainedModel:()=>A.DebertaPreTrainedModel,DebertaTokenizer:()=>rr.DebertaTokenizer,DebertaV2ForMaskedLM:()=>A.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>A.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>A.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>A.DebertaV2ForTokenClassification,DebertaV2Model:()=>A.DebertaV2Model,DebertaV2PreTrainedModel:()=>A.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>rr.DebertaV2Tokenizer,DecisionTransformerModel:()=>A.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>A.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>Zt.DeiTFeatureExtractor,DeiTForImageClassification:()=>A.DeiTForImageClassification,DeiTImageProcessor:()=>Zt.DeiTImageProcessor,DeiTModel:()=>A.DeiTModel,DeiTPreTrainedModel:()=>A.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>A.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>A.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>Jr.DepthEstimationPipeline,DepthProForDepthEstimation:()=>A.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>A.DepthProPreTrainedModel,DetrFeatureExtractor:()=>Zt.DetrFeatureExtractor,DetrForObjectDetection:()=>A.DetrForObjectDetection,DetrForSegmentation:()=>A.DetrForSegmentation,DetrImageProcessor:()=>Zt.DetrImageProcessor,DetrModel:()=>A.DetrModel,DetrObjectDetectionOutput:()=>A.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>A.DetrPreTrainedModel,DetrSegmentationOutput:()=>A.DetrSegmentationOutput,Dinov2ForImageClassification:()=>A.Dinov2ForImageClassification,Dinov2Model:()=>A.Dinov2Model,Dinov2PreTrainedModel:()=>A.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>A.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>A.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>A.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>A.DistilBertForTokenClassification,DistilBertModel:()=>A.DistilBertModel,DistilBertPreTrainedModel:()=>A.DistilBertPreTrainedModel,DistilBertTokenizer:()=>rr.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>Jr.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>Zt.DonutFeatureExtractor,DonutImageProcessor:()=>Zt.DonutImageProcessor,DonutSwinModel:()=>A.DonutSwinModel,DonutSwinPreTrainedModel:()=>A.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>A.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>Zt.EfficientNetImageProcessor,EfficientNetModel:()=>A.EfficientNetModel,EfficientNetPreTrainedModel:()=>A.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>A.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>A.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>A.ElectraForSequenceClassification,ElectraForTokenClassification:()=>A.ElectraForTokenClassification,ElectraModel:()=>A.ElectraModel,ElectraPreTrainedModel:()=>A.ElectraPreTrainedModel,ElectraTokenizer:()=>rr.ElectraTokenizer,EosTokenCriteria:()=>Bh.EosTokenCriteria,EsmForMaskedLM:()=>A.EsmForMaskedLM,EsmForSequenceClassification:()=>A.EsmForSequenceClassification,EsmForTokenClassification:()=>A.EsmForTokenClassification,EsmModel:()=>A.EsmModel,EsmPreTrainedModel:()=>A.EsmPreTrainedModel,EsmTokenizer:()=>rr.EsmTokenizer,FFT:()=>gn.FFT,FalconForCausalLM:()=>A.FalconForCausalLM,FalconModel:()=>A.FalconModel,FalconPreTrainedModel:()=>A.FalconPreTrainedModel,FalconTokenizer:()=>rr.FalconTokenizer,FastViTForImageClassification:()=>A.FastViTForImageClassification,FastViTModel:()=>A.FastViTModel,FastViTPreTrainedModel:()=>A.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>Jr.FeatureExtractionPipeline,FeatureExtractor:()=>sT.FeatureExtractor,FillMaskPipeline:()=>Jr.FillMaskPipeline,Florence2ForConditionalGeneration:()=>A.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>A.Florence2PreTrainedModel,Florence2Processor:()=>Qn.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>Js.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>Js.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>Zt.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>A.GLPNForDepthEstimation,GLPNModel:()=>A.GLPNModel,GLPNPreTrainedModel:()=>A.GLPNPreTrainedModel,GPT2LMHeadModel:()=>A.GPT2LMHeadModel,GPT2Model:()=>A.GPT2Model,GPT2PreTrainedModel:()=>A.GPT2PreTrainedModel,GPT2Tokenizer:()=>rr.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>A.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>A.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>A.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>A.GPTJForCausalLM,GPTJModel:()=>A.GPTJModel,GPTJPreTrainedModel:()=>A.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>A.GPTNeoForCausalLM,GPTNeoModel:()=>A.GPTNeoModel,GPTNeoPreTrainedModel:()=>A.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>A.GPTNeoXForCausalLM,GPTNeoXModel:()=>A.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>A.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>rr.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>A.Gemma2ForCausalLM,Gemma2Model:()=>A.Gemma2Model,Gemma2PreTrainedModel:()=>A.Gemma2PreTrainedModel,GemmaForCausalLM:()=>A.GemmaForCausalLM,GemmaModel:()=>A.GemmaModel,GemmaPreTrainedModel:()=>A.GemmaPreTrainedModel,GemmaTokenizer:()=>rr.GemmaTokenizer,GraniteForCausalLM:()=>A.GraniteForCausalLM,GraniteModel:()=>A.GraniteModel,GranitePreTrainedModel:()=>A.GranitePreTrainedModel,Grok1Tokenizer:()=>rr.Grok1Tokenizer,GroupViTModel:()=>A.GroupViTModel,GroupViTPreTrainedModel:()=>A.GroupViTPreTrainedModel,HerbertTokenizer:()=>rr.HerbertTokenizer,HieraForImageClassification:()=>A.HieraForImageClassification,HieraModel:()=>A.HieraModel,HieraPreTrainedModel:()=>A.HieraPreTrainedModel,HubertForCTC:()=>A.HubertForCTC,HubertForSequenceClassification:()=>A.HubertForSequenceClassification,HubertModel:()=>A.HubertModel,HubertPreTrainedModel:()=>A.HubertPreTrainedModel,Idefics3ForConditionalGeneration:()=>A.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>Zt.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>A.Idefics3PreTrainedModel,Idefics3Processor:()=>Qn.Idefics3Processor,ImageClassificationPipeline:()=>Jr.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>Jr.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>so.ImageFeatureExtractor,ImageMattingOutput:()=>A.ImageMattingOutput,ImageProcessor:()=>iT.ImageProcessor,ImageSegmentationPipeline:()=>Jr.ImageSegmentationPipeline,ImageToImagePipeline:()=>Jr.ImageToImagePipeline,ImageToTextPipeline:()=>Jr.ImageToTextPipeline,InterruptableStoppingCriteria:()=>Bh.InterruptableStoppingCriteria,JAISLMHeadModel:()=>A.JAISLMHeadModel,JAISModel:()=>A.JAISModel,JAISPreTrainedModel:()=>A.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>Zt.JinaCLIPImageProcessor,JinaCLIPModel:()=>A.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>A.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>Qn.JinaCLIPProcessor,JinaCLIPTextModel:()=>A.JinaCLIPTextModel,JinaCLIPVisionModel:()=>A.JinaCLIPVisionModel,LlamaForCausalLM:()=>A.LlamaForCausalLM,LlamaModel:()=>A.LlamaModel,LlamaPreTrainedModel:()=>A.LlamaPreTrainedModel,LlamaTokenizer:()=>rr.LlamaTokenizer,LlavaForConditionalGeneration:()=>A.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>A.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>Zt.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>A.LlavaPreTrainedModel,LogitsProcessor:()=>Js.LogitsProcessor,LogitsProcessorList:()=>Js.LogitsProcessorList,LogitsWarper:()=>Js.LogitsWarper,LongT5ForConditionalGeneration:()=>A.LongT5ForConditionalGeneration,LongT5Model:()=>A.LongT5Model,LongT5PreTrainedModel:()=>A.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>A.M2M100ForConditionalGeneration,M2M100Model:()=>A.M2M100Model,M2M100PreTrainedModel:()=>A.M2M100PreTrainedModel,M2M100Tokenizer:()=>rr.M2M100Tokenizer,MBart50Tokenizer:()=>rr.MBart50Tokenizer,MBartForCausalLM:()=>A.MBartForCausalLM,MBartForConditionalGeneration:()=>A.MBartForConditionalGeneration,MBartForSequenceClassification:()=>A.MBartForSequenceClassification,MBartModel:()=>A.MBartModel,MBartPreTrainedModel:()=>A.MBartPreTrainedModel,MBartTokenizer:()=>rr.MBartTokenizer,MPNetForMaskedLM:()=>A.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>A.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>A.MPNetForSequenceClassification,MPNetForTokenClassification:()=>A.MPNetForTokenClassification,MPNetModel:()=>A.MPNetModel,MPNetPreTrainedModel:()=>A.MPNetPreTrainedModel,MPNetTokenizer:()=>rr.MPNetTokenizer,MT5ForConditionalGeneration:()=>A.MT5ForConditionalGeneration,MT5Model:()=>A.MT5Model,MT5PreTrainedModel:()=>A.MT5PreTrainedModel,MarianMTModel:()=>A.MarianMTModel,MarianModel:()=>A.MarianModel,MarianPreTrainedModel:()=>A.MarianPreTrainedModel,MarianTokenizer:()=>rr.MarianTokenizer,Mask2FormerImageProcessor:()=>Zt.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>Zt.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>A.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>Zt.MaskFormerImageProcessor,MaskFormerModel:()=>A.MaskFormerModel,MaskFormerPreTrainedModel:()=>A.MaskFormerPreTrainedModel,MaskedLMOutput:()=>A.MaskedLMOutput,MaxLengthCriteria:()=>Bh.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>A.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>A.MgpstrModelOutput,MgpstrPreTrainedModel:()=>A.MgpstrPreTrainedModel,MgpstrProcessor:()=>Qn.MgpstrProcessor,MgpstrTokenizer:()=>rr.MgpstrTokenizer,MinLengthLogitsProcessor:()=>Js.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>Js.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>A.MistralForCausalLM,MistralModel:()=>A.MistralModel,MistralPreTrainedModel:()=>A.MistralPreTrainedModel,MobileBertForMaskedLM:()=>A.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>A.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>A.MobileBertForSequenceClassification,MobileBertModel:()=>A.MobileBertModel,MobileBertPreTrainedModel:()=>A.MobileBertPreTrainedModel,MobileBertTokenizer:()=>rr.MobileBertTokenizer,MobileLLMForCausalLM:()=>A.MobileLLMForCausalLM,MobileLLMModel:()=>A.MobileLLMModel,MobileLLMPreTrainedModel:()=>A.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>Zt.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>A.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>Zt.MobileNetV1ImageProcessor,MobileNetV1Model:()=>A.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>A.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>Zt.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>A.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>Zt.MobileNetV2ImageProcessor,MobileNetV2Model:()=>A.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>A.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>Zt.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>A.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>Zt.MobileNetV3ImageProcessor,MobileNetV3Model:()=>A.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>A.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>Zt.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>A.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>Zt.MobileNetV4ImageProcessor,MobileNetV4Model:()=>A.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>A.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>Zt.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>A.MobileViTForImageClassification,MobileViTImageProcessor:()=>Zt.MobileViTImageProcessor,MobileViTModel:()=>A.MobileViTModel,MobileViTPreTrainedModel:()=>A.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>A.MobileViTV2ForImageClassification,MobileViTV2Model:()=>A.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>A.MobileViTV2PreTrainedModel,ModelOutput:()=>A.ModelOutput,Moondream1ForConditionalGeneration:()=>A.Moondream1ForConditionalGeneration,MptForCausalLM:()=>A.MptForCausalLM,MptModel:()=>A.MptModel,MptPreTrainedModel:()=>A.MptPreTrainedModel,MultiModalityCausalLM:()=>A.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>A.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>A.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>A.MusicgenForConditionalGeneration,MusicgenModel:()=>A.MusicgenModel,MusicgenPreTrainedModel:()=>A.MusicgenPreTrainedModel,NllbTokenizer:()=>rr.NllbTokenizer,NoBadWordsLogitsProcessor:()=>Js.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>Js.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>A.NomicBertModel,NomicBertPreTrainedModel:()=>A.NomicBertPreTrainedModel,NougatImageProcessor:()=>Zt.NougatImageProcessor,NougatTokenizer:()=>rr.NougatTokenizer,OPTForCausalLM:()=>A.OPTForCausalLM,OPTModel:()=>A.OPTModel,OPTPreTrainedModel:()=>A.OPTPreTrainedModel,ObjectDetectionPipeline:()=>Jr.ObjectDetectionPipeline,OlmoForCausalLM:()=>A.OlmoForCausalLM,OlmoModel:()=>A.OlmoModel,OlmoPreTrainedModel:()=>A.OlmoPreTrainedModel,OpenELMForCausalLM:()=>A.OpenELMForCausalLM,OpenELMModel:()=>A.OpenELMModel,OpenELMPreTrainedModel:()=>A.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>Zt.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>A.OwlViTForObjectDetection,OwlViTImageProcessor:()=>Zt.OwlViTImageProcessor,OwlViTModel:()=>A.OwlViTModel,OwlViTPreTrainedModel:()=>A.OwlViTPreTrainedModel,OwlViTProcessor:()=>Qn.OwlViTProcessor,Owlv2ForObjectDetection:()=>A.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>Zt.Owlv2ImageProcessor,Owlv2Model:()=>A.Owlv2Model,Owlv2PreTrainedModel:()=>A.Owlv2PreTrainedModel,PatchTSMixerForPrediction:()=>A.PatchTSMixerForPrediction,PatchTSMixerModel:()=>A.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>A.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>A.PatchTSTForPrediction,PatchTSTModel:()=>A.PatchTSTModel,PatchTSTPreTrainedModel:()=>A.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>A.Phi3ForCausalLM,Phi3Model:()=>A.Phi3Model,Phi3PreTrainedModel:()=>A.Phi3PreTrainedModel,PhiForCausalLM:()=>A.PhiForCausalLM,PhiModel:()=>A.PhiModel,PhiPreTrainedModel:()=>A.PhiPreTrainedModel,Pipeline:()=>Jr.Pipeline,PreTrainedModel:()=>A.PreTrainedModel,PreTrainedTokenizer:()=>rr.PreTrainedTokenizer,PretrainedConfig:()=>d_.PretrainedConfig,PretrainedMixin:()=>A.PretrainedMixin,Processor:()=>aT.Processor,PvtForImageClassification:()=>A.PvtForImageClassification,PvtImageProcessor:()=>Zt.PvtImageProcessor,PvtModel:()=>A.PvtModel,PvtPreTrainedModel:()=>A.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>so.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>A.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>A.PyAnnoteModel,PyAnnotePreTrainedModel:()=>A.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>Qn.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>A.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>Jr.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>A.Qwen2ForCausalLM,Qwen2Model:()=>A.Qwen2Model,Qwen2PreTrainedModel:()=>A.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>rr.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>A.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>Zt.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>A.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>Qn.Qwen2VLProcessor,RTDetrForObjectDetection:()=>A.RTDetrForObjectDetection,RTDetrImageProcessor:()=>Zt.RTDetrImageProcessor,RTDetrModel:()=>A.RTDetrModel,RTDetrObjectDetectionOutput:()=>A.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>A.RTDetrPreTrainedModel,RawImage:()=>A1.RawImage,RepetitionPenaltyLogitsProcessor:()=>Js.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>A.ResNetForImageClassification,ResNetModel:()=>A.ResNetModel,ResNetPreTrainedModel:()=>A.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>A.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>A.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>A.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>A.RoFormerForTokenClassification,RoFormerModel:()=>A.RoFormerModel,RoFormerPreTrainedModel:()=>A.RoFormerPreTrainedModel,RoFormerTokenizer:()=>rr.RoFormerTokenizer,RobertaForMaskedLM:()=>A.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>A.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>A.RobertaForSequenceClassification,RobertaForTokenClassification:()=>A.RobertaForTokenClassification,RobertaModel:()=>A.RobertaModel,RobertaPreTrainedModel:()=>A.RobertaPreTrainedModel,RobertaTokenizer:()=>rr.RobertaTokenizer,SamImageProcessor:()=>Zt.SamImageProcessor,SamImageSegmentationOutput:()=>A.SamImageSegmentationOutput,SamModel:()=>A.SamModel,SamPreTrainedModel:()=>A.SamPreTrainedModel,SamProcessor:()=>Qn.SamProcessor,SapiensForDepthEstimation:()=>A.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>A.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>A.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>A.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>so.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>Zt.SegformerFeatureExtractor,SegformerForImageClassification:()=>A.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>A.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>Zt.SegformerImageProcessor,SegformerModel:()=>A.SegformerModel,SegformerPreTrainedModel:()=>A.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>A.Seq2SeqLMOutput,SequenceClassifierOutput:()=>A.SequenceClassifierOutput,SiglipImageProcessor:()=>Zt.SiglipImageProcessor,SiglipModel:()=>A.SiglipModel,SiglipPreTrainedModel:()=>A.SiglipPreTrainedModel,SiglipTextModel:()=>A.SiglipTextModel,SiglipTokenizer:()=>rr.SiglipTokenizer,SiglipVisionModel:()=>A.SiglipVisionModel,SpeechT5FeatureExtractor:()=>so.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>A.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>A.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>A.SpeechT5HifiGan,SpeechT5Model:()=>A.SpeechT5Model,SpeechT5PreTrainedModel:()=>A.SpeechT5PreTrainedModel,SpeechT5Processor:()=>Qn.SpeechT5Processor,SpeechT5Tokenizer:()=>rr.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>A.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>A.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>A.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>A.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>A.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>rr.SqueezeBertTokenizer,StableLmForCausalLM:()=>A.StableLmForCausalLM,StableLmModel:()=>A.StableLmModel,StableLmPreTrainedModel:()=>A.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>A.Starcoder2ForCausalLM,Starcoder2Model:()=>A.Starcoder2Model,Starcoder2PreTrainedModel:()=>A.Starcoder2PreTrainedModel,StoppingCriteria:()=>Bh.StoppingCriteria,StoppingCriteriaList:()=>Bh.StoppingCriteriaList,SummarizationPipeline:()=>Jr.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>Js.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>A.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>Zt.Swin2SRImageProcessor,Swin2SRModel:()=>A.Swin2SRModel,Swin2SRPreTrainedModel:()=>A.Swin2SRPreTrainedModel,SwinForImageClassification:()=>A.SwinForImageClassification,SwinModel:()=>A.SwinModel,SwinPreTrainedModel:()=>A.SwinPreTrainedModel,T5ForConditionalGeneration:()=>A.T5ForConditionalGeneration,T5Model:()=>A.T5Model,T5PreTrainedModel:()=>A.T5PreTrainedModel,T5Tokenizer:()=>rr.T5Tokenizer,TableTransformerForObjectDetection:()=>A.TableTransformerForObjectDetection,TableTransformerModel:()=>A.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>A.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>A.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>Js.TemperatureLogitsWarper,Tensor:()=>Ss.Tensor,Text2TextGenerationPipeline:()=>Jr.Text2TextGenerationPipeline,TextClassificationPipeline:()=>Jr.TextClassificationPipeline,TextGenerationPipeline:()=>Jr.TextGenerationPipeline,TextStreamer:()=>p_.TextStreamer,TextToAudioPipeline:()=>Jr.TextToAudioPipeline,TokenClassificationPipeline:()=>Jr.TokenClassificationPipeline,TokenClassifierOutput:()=>A.TokenClassifierOutput,TokenizerModel:()=>rr.TokenizerModel,TopKLogitsWarper:()=>Js.TopKLogitsWarper,TopPLogitsWarper:()=>Js.TopPLogitsWarper,TrOCRForCausalLM:()=>A.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>A.TrOCRPreTrainedModel,TranslationPipeline:()=>Jr.TranslationPipeline,UniSpeechForCTC:()=>A.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>A.UniSpeechForSequenceClassification,UniSpeechModel:()=>A.UniSpeechModel,UniSpeechPreTrainedModel:()=>A.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>A.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>A.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>A.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>A.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>A.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>Qn.VLChatProcessor,VLMImageProcessor:()=>Zt.VLMImageProcessor,ViTFeatureExtractor:()=>Zt.ViTFeatureExtractor,ViTForImageClassification:()=>A.ViTForImageClassification,ViTImageProcessor:()=>Zt.ViTImageProcessor,ViTMAEModel:()=>A.ViTMAEModel,ViTMAEPreTrainedModel:()=>A.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>A.ViTMSNForImageClassification,ViTMSNModel:()=>A.ViTMSNModel,ViTMSNPreTrainedModel:()=>A.ViTMSNPreTrainedModel,ViTModel:()=>A.ViTModel,ViTPreTrainedModel:()=>A.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>A.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>A.VitMatteForImageMatting,VitMatteImageProcessor:()=>Zt.VitMatteImageProcessor,VitMattePreTrainedModel:()=>A.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>A.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>Zt.VitPoseImageProcessor,VitPosePreTrainedModel:()=>A.VitPosePreTrainedModel,VitsModel:()=>A.VitsModel,VitsModelOutput:()=>A.VitsModelOutput,VitsPreTrainedModel:()=>A.VitsPreTrainedModel,VitsTokenizer:()=>rr.VitsTokenizer,Wav2Vec2BertForCTC:()=>A.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>A.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>A.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>A.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>rr.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>so.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>A.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>A.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>A.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>A.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>A.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>Qn.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>A.WavLMForAudioFrameClassification,WavLMForCTC:()=>A.WavLMForCTC,WavLMForSequenceClassification:()=>A.WavLMForSequenceClassification,WavLMForXVector:()=>A.WavLMForXVector,WavLMModel:()=>A.WavLMModel,WavLMPreTrainedModel:()=>A.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>so.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>A.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>A.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>so.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>A.WhisperForConditionalGeneration,WhisperModel:()=>A.WhisperModel,WhisperPreTrainedModel:()=>A.WhisperPreTrainedModel,WhisperProcessor:()=>Qn.WhisperProcessor,WhisperTextStreamer:()=>p_.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>Js.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>rr.WhisperTokenizer,XLMForQuestionAnswering:()=>A.XLMForQuestionAnswering,XLMForSequenceClassification:()=>A.XLMForSequenceClassification,XLMForTokenClassification:()=>A.XLMForTokenClassification,XLMModel:()=>A.XLMModel,XLMPreTrainedModel:()=>A.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>A.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>A.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>A.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>A.XLMRobertaForTokenClassification,XLMRobertaModel:()=>A.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>A.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>rr.XLMRobertaTokenizer,XLMTokenizer:()=>rr.XLMTokenizer,XLMWithLMHeadModel:()=>A.XLMWithLMHeadModel,XVectorOutput:()=>A.XVectorOutput,YolosFeatureExtractor:()=>Zt.YolosFeatureExtractor,YolosForObjectDetection:()=>A.YolosForObjectDetection,YolosImageProcessor:()=>Zt.YolosImageProcessor,YolosModel:()=>A.YolosModel,YolosObjectDetectionOutput:()=>A.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>A.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>Jr.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>Jr.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>Jr.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>Jr.ZeroShotObjectDetectionPipeline,bankers_round:()=>gn.bankers_round,cat:()=>Ss.cat,cos_sim:()=>gn.cos_sim,dot:()=>gn.dot,dynamic_time_warping:()=>gn.dynamic_time_warping,env:()=>rT.env,full:()=>Ss.full,full_like:()=>Ss.full_like,getKeyValueShapes:()=>d_.getKeyValueShapes,hamming:()=>Fc.hamming,hanning:()=>Fc.hanning,interpolate:()=>Ss.interpolate,interpolate_4d:()=>Ss.interpolate_4d,interpolate_data:()=>gn.interpolate_data,is_chinese_char:()=>rr.is_chinese_char,layer_norm:()=>Ss.layer_norm,load_image:()=>A1.load_image,log_softmax:()=>gn.log_softmax,magnitude:()=>gn.magnitude,matmul:()=>Ss.matmul,max:()=>gn.max,mean:()=>Ss.mean,mean_pooling:()=>Ss.mean_pooling,medianFilter:()=>gn.medianFilter,mel_filter_bank:()=>Fc.mel_filter_bank,min:()=>gn.min,ones:()=>Ss.ones,ones_like:()=>Ss.ones_like,permute:()=>Ss.permute,permute_data:()=>gn.permute_data,pipeline:()=>Jr.pipeline,quantize_embeddings:()=>Ss.quantize_embeddings,read_audio:()=>Fc.read_audio,rfft:()=>Ss.rfft,round:()=>gn.round,softmax:()=>gn.softmax,spectrogram:()=>Fc.spectrogram,stack:()=>Ss.stack,std_mean:()=>Ss.std_mean,topk:()=>Ss.topk,window_function:()=>Fc.window_function,zeros:()=>Ss.zeros,zeros_like:()=>Ss.zeros_like});var rT=Pr("./src/env.js"),Jr=Pr("./src/pipelines.js"),A=Pr("./src/models.js"),rr=Pr("./src/tokenizers.js"),d_=Pr("./src/configs.js"),Fc=Pr("./src/utils/audio.js"),A1=Pr("./src/utils/image.js"),Ss=Pr("./src/utils/tensor.js"),gn=Pr("./src/utils/maths.js"),sT=Pr("./src/base/feature_extraction_utils.js"),so=Pr("./src/models/feature_extractors.js"),nT=Pr("./src/models/auto/feature_extraction_auto.js"),iT=Pr("./src/base/image_processors_utils.js"),Zt=Pr("./src/models/image_processors.js"),oT=Pr("./src/models/auto/image_processing_auto.js"),aT=Pr("./src/base/processing_utils.js"),Qn=Pr("./src/models/processors.js"),lT=Pr("./src/models/auto/processing_auto.js"),p_=Pr("./src/generation/streamers.js"),Bh=Pr("./src/generation/stopping_criteria.js"),Js=Pr("./src/generation/logits_process.js");_.ASTFeatureExtractor;_.ASTForAudioClassification;_.ASTModel;_.ASTPreTrainedModel;_.AlbertForMaskedLM;_.AlbertForQuestionAnswering;_.AlbertForSequenceClassification;_.AlbertModel;_.AlbertPreTrainedModel;_.AlbertTokenizer;_.AudioClassificationPipeline;_.AutoConfig;_.AutoFeatureExtractor;_.AutoImageProcessor;_.AutoModel;_.AutoModelForAudioClassification;_.AutoModelForAudioFrameClassification;_.AutoModelForCTC;_.AutoModelForCausalLM;_.AutoModelForDepthEstimation;_.AutoModelForDocumentQuestionAnswering;_.AutoModelForImageClassification;_.AutoModelForImageFeatureExtraction;_.AutoModelForImageMatting;_.AutoModelForImageSegmentation;_.AutoModelForImageToImage;_.AutoModelForMaskGeneration;_.AutoModelForMaskedLM;_.AutoModelForNormalEstimation;_.AutoModelForObjectDetection;_.AutoModelForPoseEstimation;_.AutoModelForQuestionAnswering;_.AutoModelForSemanticSegmentation;_.AutoModelForSeq2SeqLM;_.AutoModelForSequenceClassification;_.AutoModelForSpeechSeq2Seq;_.AutoModelForTextToSpectrogram;_.AutoModelForTextToWaveform;_.AutoModelForTokenClassification;_.AutoModelForUniversalSegmentation;_.AutoModelForVision2Seq;_.AutoModelForXVector;_.AutoModelForZeroShotObjectDetection;_.AutoProcessor;var cT=_.AutoTokenizer;_.AutomaticSpeechRecognitionPipeline;_.BartForConditionalGeneration;_.BartForSequenceClassification;_.BartModel;_.BartPretrainedModel;_.BartTokenizer;_.BaseModelOutput;_.BaseStreamer;_.BeitFeatureExtractor;_.BeitForImageClassification;_.BeitModel;_.BeitPreTrainedModel;_.BertForMaskedLM;_.BertForQuestionAnswering;_.BertForSequenceClassification;_.BertForTokenClassification;_.BertModel;_.BertPreTrainedModel;_.BertTokenizer;_.BitImageProcessor;_.BlenderbotForConditionalGeneration;_.BlenderbotModel;_.BlenderbotPreTrainedModel;_.BlenderbotSmallForConditionalGeneration;_.BlenderbotSmallModel;_.BlenderbotSmallPreTrainedModel;_.BlenderbotSmallTokenizer;_.BlenderbotTokenizer;_.BloomForCausalLM;_.BloomModel;_.BloomPreTrainedModel;_.BloomTokenizer;_.CLIPFeatureExtractor;_.CLIPImageProcessor;_.CLIPModel;_.CLIPPreTrainedModel;_.CLIPSegForImageSegmentation;_.CLIPSegModel;_.CLIPSegPreTrainedModel;_.CLIPTextModel;_.CLIPTextModelWithProjection;_.CLIPTokenizer;_.CLIPVisionModel;_.CLIPVisionModelWithProjection;_.CamembertForMaskedLM;_.CamembertForQuestionAnswering;_.CamembertForSequenceClassification;_.CamembertForTokenClassification;_.CamembertModel;_.CamembertPreTrainedModel;_.CamembertTokenizer;_.CausalLMOutput;_.CausalLMOutputWithPast;_.ChineseCLIPFeatureExtractor;_.ChineseCLIPModel;_.ChineseCLIPPreTrainedModel;_.ClapAudioModelWithProjection;_.ClapFeatureExtractor;_.ClapModel;_.ClapPreTrainedModel;_.ClapTextModelWithProjection;_.ClassifierFreeGuidanceLogitsProcessor;_.CodeGenForCausalLM;_.CodeGenModel;_.CodeGenPreTrainedModel;_.CodeGenTokenizer;_.CodeLlamaTokenizer;_.CohereForCausalLM;_.CohereModel;_.CoherePreTrainedModel;_.CohereTokenizer;_.ConvBertForMaskedLM;_.ConvBertForQuestionAnswering;_.ConvBertForSequenceClassification;_.ConvBertForTokenClassification;_.ConvBertModel;_.ConvBertPreTrainedModel;_.ConvBertTokenizer;_.ConvNextFeatureExtractor;_.ConvNextForImageClassification;_.ConvNextImageProcessor;_.ConvNextModel;_.ConvNextPreTrainedModel;_.ConvNextV2ForImageClassification;_.ConvNextV2Model;_.ConvNextV2PreTrainedModel;_.DPTFeatureExtractor;_.DPTForDepthEstimation;_.DPTImageProcessor;_.DPTModel;_.DPTPreTrainedModel;_.DebertaForMaskedLM;_.DebertaForQuestionAnswering;_.DebertaForSequenceClassification;_.DebertaForTokenClassification;_.DebertaModel;_.DebertaPreTrainedModel;_.DebertaTokenizer;_.DebertaV2ForMaskedLM;_.DebertaV2ForQuestionAnswering;_.DebertaV2ForSequenceClassification;_.DebertaV2ForTokenClassification;_.DebertaV2Model;_.DebertaV2PreTrainedModel;_.DebertaV2Tokenizer;_.DecisionTransformerModel;_.DecisionTransformerPreTrainedModel;_.DeiTFeatureExtractor;_.DeiTForImageClassification;_.DeiTImageProcessor;_.DeiTModel;_.DeiTPreTrainedModel;_.DepthAnythingForDepthEstimation;_.DepthAnythingPreTrainedModel;_.DepthEstimationPipeline;_.DepthProForDepthEstimation;_.DepthProPreTrainedModel;_.DetrFeatureExtractor;_.DetrForObjectDetection;_.DetrForSegmentation;_.DetrImageProcessor;_.DetrModel;_.DetrObjectDetectionOutput;_.DetrPreTrainedModel;_.DetrSegmentationOutput;_.Dinov2ForImageClassification;_.Dinov2Model;_.Dinov2PreTrainedModel;_.DistilBertForMaskedLM;_.DistilBertForQuestionAnswering;_.DistilBertForSequenceClassification;_.DistilBertForTokenClassification;_.DistilBertModel;_.DistilBertPreTrainedModel;_.DistilBertTokenizer;_.DocumentQuestionAnsweringPipeline;_.DonutFeatureExtractor;_.DonutImageProcessor;_.DonutSwinModel;_.DonutSwinPreTrainedModel;_.EfficientNetForImageClassification;_.EfficientNetImageProcessor;_.EfficientNetModel;_.EfficientNetPreTrainedModel;_.ElectraForMaskedLM;_.ElectraForQuestionAnswering;_.ElectraForSequenceClassification;_.ElectraForTokenClassification;_.ElectraModel;_.ElectraPreTrainedModel;_.ElectraTokenizer;_.EosTokenCriteria;_.EsmForMaskedLM;_.EsmForSequenceClassification;_.EsmForTokenClassification;_.EsmModel;_.EsmPreTrainedModel;_.EsmTokenizer;_.FFT;_.FalconForCausalLM;_.FalconModel;_.FalconPreTrainedModel;_.FalconTokenizer;_.FastViTForImageClassification;_.FastViTModel;_.FastViTPreTrainedModel;_.FeatureExtractionPipeline;_.FeatureExtractor;_.FillMaskPipeline;_.Florence2ForConditionalGeneration;_.Florence2PreTrainedModel;_.Florence2Processor;_.ForcedBOSTokenLogitsProcessor;_.ForcedEOSTokenLogitsProcessor;_.GLPNFeatureExtractor;_.GLPNForDepthEstimation;_.GLPNModel;_.GLPNPreTrainedModel;_.GPT2LMHeadModel;_.GPT2Model;_.GPT2PreTrainedModel;_.GPT2Tokenizer;_.GPTBigCodeForCausalLM;_.GPTBigCodeModel;_.GPTBigCodePreTrainedModel;_.GPTJForCausalLM;_.GPTJModel;_.GPTJPreTrainedModel;_.GPTNeoForCausalLM;_.GPTNeoModel;_.GPTNeoPreTrainedModel;_.GPTNeoXForCausalLM;_.GPTNeoXModel;_.GPTNeoXPreTrainedModel;_.GPTNeoXTokenizer;_.Gemma2ForCausalLM;_.Gemma2Model;_.Gemma2PreTrainedModel;_.GemmaForCausalLM;_.GemmaModel;_.GemmaPreTrainedModel;_.GemmaTokenizer;_.GraniteForCausalLM;_.GraniteModel;_.GranitePreTrainedModel;_.Grok1Tokenizer;_.GroupViTModel;_.GroupViTPreTrainedModel;_.HerbertTokenizer;_.HieraForImageClassification;_.HieraModel;_.HieraPreTrainedModel;_.HubertForCTC;_.HubertForSequenceClassification;_.HubertModel;_.HubertPreTrainedModel;_.Idefics3ForConditionalGeneration;_.Idefics3ImageProcessor;_.Idefics3PreTrainedModel;_.Idefics3Processor;_.ImageClassificationPipeline;_.ImageFeatureExtractionPipeline;_.ImageFeatureExtractor;_.ImageMattingOutput;_.ImageProcessor;_.ImageSegmentationPipeline;_.ImageToImagePipeline;_.ImageToTextPipeline;_.InterruptableStoppingCriteria;_.JAISLMHeadModel;_.JAISModel;_.JAISPreTrainedModel;_.JinaCLIPImageProcessor;_.JinaCLIPModel;_.JinaCLIPPreTrainedModel;_.JinaCLIPProcessor;_.JinaCLIPTextModel;_.JinaCLIPVisionModel;_.LlamaForCausalLM;_.LlamaModel;_.LlamaPreTrainedModel;_.LlamaTokenizer;_.LlavaForConditionalGeneration;_.LlavaOnevisionForConditionalGeneration;_.LlavaOnevisionImageProcessor;_.LlavaPreTrainedModel;_.LogitsProcessor;_.LogitsProcessorList;_.LogitsWarper;_.LongT5ForConditionalGeneration;_.LongT5Model;_.LongT5PreTrainedModel;_.M2M100ForConditionalGeneration;_.M2M100Model;_.M2M100PreTrainedModel;_.M2M100Tokenizer;_.MBart50Tokenizer;_.MBartForCausalLM;_.MBartForConditionalGeneration;_.MBartForSequenceClassification;_.MBartModel;_.MBartPreTrainedModel;_.MBartTokenizer;_.MPNetForMaskedLM;_.MPNetForQuestionAnswering;_.MPNetForSequenceClassification;_.MPNetForTokenClassification;_.MPNetModel;_.MPNetPreTrainedModel;_.MPNetTokenizer;_.MT5ForConditionalGeneration;_.MT5Model;_.MT5PreTrainedModel;_.MarianMTModel;_.MarianModel;_.MarianPreTrainedModel;_.MarianTokenizer;_.Mask2FormerImageProcessor;_.MaskFormerFeatureExtractor;_.MaskFormerForInstanceSegmentation;_.MaskFormerImageProcessor;_.MaskFormerModel;_.MaskFormerPreTrainedModel;_.MaskedLMOutput;_.MaxLengthCriteria;_.MgpstrForSceneTextRecognition;_.MgpstrModelOutput;_.MgpstrPreTrainedModel;_.MgpstrProcessor;_.MgpstrTokenizer;_.MinLengthLogitsProcessor;_.MinNewTokensLengthLogitsProcessor;_.MistralForCausalLM;_.MistralModel;_.MistralPreTrainedModel;_.MobileBertForMaskedLM;_.MobileBertForQuestionAnswering;_.MobileBertForSequenceClassification;_.MobileBertModel;_.MobileBertPreTrainedModel;_.MobileBertTokenizer;_.MobileLLMForCausalLM;_.MobileLLMModel;_.MobileLLMPreTrainedModel;_.MobileNetV1FeatureExtractor;_.MobileNetV1ForImageClassification;_.MobileNetV1ImageProcessor;_.MobileNetV1Model;_.MobileNetV1PreTrainedModel;_.MobileNetV2FeatureExtractor;_.MobileNetV2ForImageClassification;_.MobileNetV2ImageProcessor;_.MobileNetV2Model;_.MobileNetV2PreTrainedModel;_.MobileNetV3FeatureExtractor;_.MobileNetV3ForImageClassification;_.MobileNetV3ImageProcessor;_.MobileNetV3Model;_.MobileNetV3PreTrainedModel;_.MobileNetV4FeatureExtractor;_.MobileNetV4ForImageClassification;_.MobileNetV4ImageProcessor;_.MobileNetV4Model;_.MobileNetV4PreTrainedModel;_.MobileViTFeatureExtractor;_.MobileViTForImageClassification;_.MobileViTImageProcessor;_.MobileViTModel;_.MobileViTPreTrainedModel;_.MobileViTV2ForImageClassification;_.MobileViTV2Model;_.MobileViTV2PreTrainedModel;_.ModelOutput;_.Moondream1ForConditionalGeneration;_.MptForCausalLM;_.MptModel;_.MptPreTrainedModel;_.MultiModalityCausalLM;_.MultiModalityPreTrainedModel;_.MusicgenForCausalLM;_.MusicgenForConditionalGeneration;_.MusicgenModel;_.MusicgenPreTrainedModel;_.NllbTokenizer;_.NoBadWordsLogitsProcessor;_.NoRepeatNGramLogitsProcessor;_.NomicBertModel;_.NomicBertPreTrainedModel;_.NougatImageProcessor;_.NougatTokenizer;_.OPTForCausalLM;_.OPTModel;_.OPTPreTrainedModel;_.ObjectDetectionPipeline;_.OlmoForCausalLM;_.OlmoModel;_.OlmoPreTrainedModel;_.OpenELMForCausalLM;_.OpenELMModel;_.OpenELMPreTrainedModel;_.OwlViTFeatureExtractor;_.OwlViTForObjectDetection;_.OwlViTImageProcessor;_.OwlViTModel;_.OwlViTPreTrainedModel;_.OwlViTProcessor;_.Owlv2ForObjectDetection;_.Owlv2ImageProcessor;_.Owlv2Model;_.Owlv2PreTrainedModel;_.PatchTSMixerForPrediction;_.PatchTSMixerModel;_.PatchTSMixerPreTrainedModel;_.PatchTSTForPrediction;_.PatchTSTModel;_.PatchTSTPreTrainedModel;_.Phi3ForCausalLM;_.Phi3Model;_.Phi3PreTrainedModel;_.PhiForCausalLM;_.PhiModel;_.PhiPreTrainedModel;_.Pipeline;_.PreTrainedModel;_.PreTrainedTokenizer;_.PretrainedConfig;_.PretrainedMixin;_.Processor;_.PvtForImageClassification;_.PvtImageProcessor;_.PvtModel;_.PvtPreTrainedModel;_.PyAnnoteFeatureExtractor;_.PyAnnoteForAudioFrameClassification;_.PyAnnoteModel;_.PyAnnotePreTrainedModel;_.PyAnnoteProcessor;_.QuestionAnsweringModelOutput;_.QuestionAnsweringPipeline;_.Qwen2ForCausalLM;_.Qwen2Model;_.Qwen2PreTrainedModel;_.Qwen2Tokenizer;_.Qwen2VLForConditionalGeneration;_.Qwen2VLImageProcessor;_.Qwen2VLPreTrainedModel;_.Qwen2VLProcessor;_.RTDetrForObjectDetection;_.RTDetrImageProcessor;_.RTDetrModel;_.RTDetrObjectDetectionOutput;_.RTDetrPreTrainedModel;_.RawImage;_.RepetitionPenaltyLogitsProcessor;_.ResNetForImageClassification;_.ResNetModel;_.ResNetPreTrainedModel;_.RoFormerForMaskedLM;_.RoFormerForQuestionAnswering;_.RoFormerForSequenceClassification;_.RoFormerForTokenClassification;_.RoFormerModel;_.RoFormerPreTrainedModel;_.RoFormerTokenizer;_.RobertaForMaskedLM;_.RobertaForQuestionAnswering;_.RobertaForSequenceClassification;_.RobertaForTokenClassification;_.RobertaModel;_.RobertaPreTrainedModel;_.RobertaTokenizer;_.SamImageProcessor;_.SamImageSegmentationOutput;_.SamModel;_.SamPreTrainedModel;_.SamProcessor;_.SapiensForDepthEstimation;_.SapiensForNormalEstimation;_.SapiensForSemanticSegmentation;_.SapiensPreTrainedModel;_.SeamlessM4TFeatureExtractor;_.SegformerFeatureExtractor;_.SegformerForImageClassification;_.SegformerForSemanticSegmentation;_.SegformerImageProcessor;_.SegformerModel;_.SegformerPreTrainedModel;_.Seq2SeqLMOutput;_.SequenceClassifierOutput;_.SiglipImageProcessor;_.SiglipModel;_.SiglipPreTrainedModel;_.SiglipTextModel;_.SiglipTokenizer;_.SiglipVisionModel;_.SpeechT5FeatureExtractor;_.SpeechT5ForSpeechToText;_.SpeechT5ForTextToSpeech;_.SpeechT5HifiGan;_.SpeechT5Model;_.SpeechT5PreTrainedModel;_.SpeechT5Processor;_.SpeechT5Tokenizer;_.SqueezeBertForMaskedLM;_.SqueezeBertForQuestionAnswering;_.SqueezeBertForSequenceClassification;_.SqueezeBertModel;_.SqueezeBertPreTrainedModel;_.SqueezeBertTokenizer;_.StableLmForCausalLM;_.StableLmModel;_.StableLmPreTrainedModel;_.Starcoder2ForCausalLM;_.Starcoder2Model;_.Starcoder2PreTrainedModel;_.StoppingCriteria;_.StoppingCriteriaList;_.SummarizationPipeline;_.SuppressTokensAtBeginLogitsProcessor;_.Swin2SRForImageSuperResolution;_.Swin2SRImageProcessor;_.Swin2SRModel;_.Swin2SRPreTrainedModel;_.SwinForImageClassification;_.SwinModel;_.SwinPreTrainedModel;_.T5ForConditionalGeneration;_.T5Model;_.T5PreTrainedModel;_.T5Tokenizer;_.TableTransformerForObjectDetection;_.TableTransformerModel;_.TableTransformerObjectDetectionOutput;_.TableTransformerPreTrainedModel;_.TemperatureLogitsWarper;_.Tensor;_.Text2TextGenerationPipeline;_.TextClassificationPipeline;_.TextGenerationPipeline;_.TextStreamer;_.TextToAudioPipeline;_.TokenClassificationPipeline;_.TokenClassifierOutput;_.TokenizerModel;_.TopKLogitsWarper;_.TopPLogitsWarper;_.TrOCRForCausalLM;_.TrOCRPreTrainedModel;_.TranslationPipeline;_.UniSpeechForCTC;_.UniSpeechForSequenceClassification;_.UniSpeechModel;_.UniSpeechPreTrainedModel;_.UniSpeechSatForAudioFrameClassification;_.UniSpeechSatForCTC;_.UniSpeechSatForSequenceClassification;_.UniSpeechSatModel;_.UniSpeechSatPreTrainedModel;_.VLChatProcessor;_.VLMImageProcessor;_.ViTFeatureExtractor;_.ViTForImageClassification;_.ViTImageProcessor;_.ViTMAEModel;_.ViTMAEPreTrainedModel;_.ViTMSNForImageClassification;_.ViTMSNModel;_.ViTMSNPreTrainedModel;_.ViTModel;_.ViTPreTrainedModel;_.VisionEncoderDecoderModel;_.VitMatteForImageMatting;_.VitMatteImageProcessor;_.VitMattePreTrainedModel;_.VitPoseForPoseEstimation;_.VitPoseImageProcessor;_.VitPosePreTrainedModel;_.VitsModel;_.VitsModelOutput;_.VitsPreTrainedModel;_.VitsTokenizer;_.Wav2Vec2BertForCTC;_.Wav2Vec2BertForSequenceClassification;_.Wav2Vec2BertModel;_.Wav2Vec2BertPreTrainedModel;_.Wav2Vec2CTCTokenizer;_.Wav2Vec2FeatureExtractor;_.Wav2Vec2ForAudioFrameClassification;_.Wav2Vec2ForCTC;_.Wav2Vec2ForSequenceClassification;_.Wav2Vec2Model;_.Wav2Vec2PreTrainedModel;_.Wav2Vec2ProcessorWithLM;_.WavLMForAudioFrameClassification;_.WavLMForCTC;_.WavLMForSequenceClassification;_.WavLMForXVector;_.WavLMModel;_.WavLMPreTrainedModel;_.WeSpeakerFeatureExtractor;_.WeSpeakerResNetModel;_.WeSpeakerResNetPreTrainedModel;_.WhisperFeatureExtractor;_.WhisperForConditionalGeneration;_.WhisperModel;_.WhisperPreTrainedModel;_.WhisperProcessor;_.WhisperTextStreamer;_.WhisperTimeStampLogitsProcessor;_.WhisperTokenizer;_.XLMForQuestionAnswering;_.XLMForSequenceClassification;_.XLMForTokenClassification;_.XLMModel;_.XLMPreTrainedModel;_.XLMRobertaForMaskedLM;_.XLMRobertaForQuestionAnswering;_.XLMRobertaForSequenceClassification;_.XLMRobertaForTokenClassification;_.XLMRobertaModel;_.XLMRobertaPreTrainedModel;_.XLMRobertaTokenizer;_.XLMTokenizer;_.XLMWithLMHeadModel;_.XVectorOutput;_.YolosFeatureExtractor;_.YolosForObjectDetection;_.YolosImageProcessor;_.YolosModel;_.YolosObjectDetectionOutput;_.YolosPreTrainedModel;_.ZeroShotAudioClassificationPipeline;_.ZeroShotClassificationPipeline;_.ZeroShotImageClassificationPipeline;_.ZeroShotObjectDetectionPipeline;_.bankers_round;_.cat;_.cos_sim;_.dot;_.dynamic_time_warping;var uT=_.env;_.full;_.full_like;_.getKeyValueShapes;_.hamming;_.hanning;_.interpolate;_.interpolate_4d;_.interpolate_data;_.is_chinese_char;_.layer_norm;_.load_image;_.log_softmax;_.magnitude;_.matmul;_.max;_.mean;_.mean_pooling;_.medianFilter;_.mel_filter_bank;_.min;_.ones;_.ones_like;_.permute;_.permute_data;_.pipeline;_.quantize_embeddings;_.read_audio;_.rfft;_.round;_.softmax;_.spectrogram;_.stack;_.std_mean;_.topk;_.window_function;_.zeros;_.zeros_like;var I1=xM(()=>uT),dT=F1('<!> <div class="flex flex-col"><div class="text-2xl font-bold"> </div> <div> </div> <div class="text-2xl font-bold"> </div></div> <canvas id="canvas" class="w-[6000px] h-[6000px]"></canvas>',1);function wT(t,s){z1(s,!1);const n=_n(),o=_n();I1(I1().allowLocalModels=!0);let u={},h=800,v=60,P=14,f=1.4,b=_n(60),x=performance.now();const k=.99;let C,N,X,oe,re=_n({prior:0,likelihood:0,children:[],prior_ill:0,ever_visible_parent:!1});Ns(re,Pt(re).val="."),Ns(re,Pt(re).val=`Text entry research typically pits one entry method against another. Thus,
entry method is the controlled variable, and it is manipulated over two or more levels,
for example, Multitap vs. Letterwise in an experiment comparing text entry techniques for
mobile phones [2], or Qwerty vs. Opti in an experiment comparing soft keyboard layouts [3].

Allowing`),Ns(re,Pt(re).val="."),Ns(re,Pt(re).force_space=!0),Ns(re,Pt(re).letter=Pt(re).val[Pt(re).val.length-1]),Ns(re,Pt(re).period=f),Ns(re,Pt(re).offset=Math.random()*Pt(re).period),Ns(re,Pt(re).height=0),Ns(re,Pt(re).y_relative_bottom=0),Ns(re,Pt(re).y_relative_top=1),Ns(re,Pt(re).trie=Pt(re)),Ns(re,Pt(re).registry={}),Ns(re,Pt(re).registry[Pt(re).val]=Pt(re)),Ns(re,Pt(re).timer_fracs=[]);let V=uf(0,{duration:4e3,easing:h_});function H(Se){if(D!==void 0&&Se.tweened_location&&us(Se.tweened_size_height)>.99*h){let He=us(Se.tweened_location).x-400;He>us(V)&&V.set(He)}if(Se.children.length===0)return Se;let Ne=Se.children[0];for(const He of Se.children)He.post_Z>Ne.post_Z&&(Ne=He);return H(Ne)}function te(Se){console.log("Blink event:",Se),be()}let G=Math.log(.03),D=0;const E=300,L=h_;function S(Se,Ne=null,He=h,Be=v){Ne===null&&(Ne={x:0,y:0}),Se.location={...Ne},Se.tweened_location?(Se.tweened_location.set(Ne),Se.tweened_size_height.set(He),Se.tweened_size_width.set(Be)):(Se.tweened_location=uf(Ne,{duration:E,easing:L}),Se.tweened_size_height=uf(He,{duration:E,easing:L}),Se.tweened_size_width=uf(Be,{duration:E,easing:L})),Se.size_height=He,Se.size_width=Be,Se.is_visible=!0;let le=Se.children.filter(Fe=>Fe.is_visible);if(le.length>0){Se.ever_visible_parent=!0;const Fe=le.length,Re=.5+Math.log(Fe);le.forEach((ye,Ae)=>{S(ye,{x:Se.location.x+Se.size_width,y:Se.location.y+Se.size_height*ye.y_relative_bottom},Se.size_height*(ye.y_relative_top-ye.y_relative_bottom),Re*v)})}Se.height===0&&Ws(re,Pt(re))}S(Pt(re));function se(){return Date.now()/1e3}let ee=(Se,Ne)=>(Ne-Se.offset+Se.period)%Se.period/Se.period;function pe(){let Se=se();if(!N)return;const Ne=performance.now(),Be=1e3/(Ne-x);Ws(b,Pt(b)*k+Be*(1-k)),Ws(b,Math.min(100,Pt(b))),x=Ne,N.clearRect(0,0,C.width,C.height);const le=Object.values(Pt(re).registry).filter(Fe=>Fe.is_visible);le.forEach(Fe=>{N.beginPath(),N.rect(us(Fe.tweened_location).x-us(V),us(Fe.tweened_location).y,us(Fe.tweened_size_width),us(Fe.tweened_size_height)),N.fillStyle="lightblue",N.fill(),N.strokeStyle="black",N.lineWidth=2,N.stroke(),N.closePath()}),le.forEach(Fe=>{Fe.parent&&(N.beginPath(),N.moveTo(us(Fe.tweened_location).x+us(Fe.tweened_size_width)/2-us(V),us(Fe.tweened_location).y+us(Fe.tweened_size_height)/2),N.lineTo(us(Fe.parent.tweened_location).x+us(Fe.parent.tweened_size_width)/2-us(V),us(Fe.parent.tweened_location).y+us(Fe.parent.tweened_size_height)/2),N.strokeStyle="black",N.lineWidth=2,N.stroke(),N.closePath())}),le.forEach(Fe=>{const Re=us(Fe.tweened_location).x+us(Fe.tweened_size_width)/2-us(V),ye=us(Fe.tweened_location).y+us(Fe.tweened_size_height)/2;N.beginPath(),N.arc(Re,ye,P,0,2*Math.PI),N.fillStyle="lightblue",N.fill(),N.strokeStyle="black",N.lineWidth=2,N.stroke(),N.closePath(),N.beginPath(),N.arc(Re,ye,P,0,2*Math.PI*ee(Fe,Se)),N.strokeStyle="red",N.lineWidth=4,N.stroke(),N.closePath(),N.beginPath(),N.fillStyle="black",N.font="20px sans-serif",N.textAlign="center",N.textBaseline="middle",N.fillText(Fe.letter,Re,ye),N.closePath()}),X=requestAnimationFrame(pe)}let he;function be(){let Se=se();if(!he){console.log("No socket; can't click");return}Object.values(Pt(re).registry).forEach(He=>{if(He.is_visible){let Be=ee(He,Se);Be=(Be+.5)%1;const le=.57,Fe=.044,Re=3/100;let ye=Be-le,Ae=-Math.log(Math.sqrt(2*Math.PI)*Fe)-ye*ye/(2*Fe*Fe);const Ze=Math.log(Re);let Ye=Math.max(Ae,Ze);Rv(He,Ye,Be),He.offset=Math.random()*He.period}});let Ne=[];console.log("updating trie after updating likelihoods"),u_(Df,[Pt(re),!1,0,Ne,D,u,G,oe]),u_(tT,[Pt(re)]),D=Pt(re).post_Z,Ne.sort((He,Be)=>Be[1]-He[1]),console.log("Queue:",Ne),he.send(JSON.stringify({type:"set_queue",content:Ne.map(He=>He[0])}));for(let He of Object.values(Pt(re).registry))He.is_visible=He.post_Z-D>G;S(Pt(re))}j1(async()=>(oe=await cT.from_pretrained("llama/llama",{local_files_only:!0}),console.log("Tokenizer loaded"),Ns(re,Pt(re).tokenization=O_(Pt(re).val,oe)),console.log("Tokenization for root:",Pt(re).tokenization),C=document.getElementById("canvas"),N=C.getContext("2d"),C.width=6e3,C.height=6e3,pe(),window.addEventListener("keydown",Se=>{Se.code==="Space"&&(be(),Se.preventDefault())}),he=new WebSocket("ws://38.224.253.4:20801/ws"),he.addEventListener("open",Se=>{console.log("WebSocket connection established"),he.send(JSON.stringify({type:"set_queue",content:[Pt(re).val]})),setTimeout(()=>{he.send(JSON.stringify({type:"echo",content:"Hello, World!"}))},200)}),he.addEventListener("message",async Se=>{let Ne=performance.now(),He=JSON.parse(Se.data),Be=performance.now();if(He.type==="processed"){console.log("JSON parsing took",Be-Ne,"ms"),await new Promise(Fe=>setTimeout(Fe,5)),u[He.ftp]={probs:He.probs,cum:He.cum},Ns(re,Pt(re).registry[He.ftp].in_character_model=!0);let le=[];u_(Df,[Pt(re).registry[He.ftp],!0,0,le,D,u,G,oe]),D=Pt(re).post_Z,S(Pt(re)),le.sort((Fe,Re)=>Re[1]-Fe[1]),console.log("--------------------------------"),console.log("FTP:",He.ftp),console.log("ROOT:",Pt(re)),console.log("Queue:",le),console.log("--------------------------------"),he.send(JSON.stringify({type:"set_queue",content:le.map(Fe=>Fe[0])}))}}),he.addEventListener("close",Se=>{console.log("WebSocket connection closed")}),he.addEventListener("error",Se=>{console.error("WebSocket error:",Se)}),()=>{X&&cancelAnimationFrame(X)})),Ro(()=>Pt(re),()=>{Ws(n,H(Pt(re)))}),Ro(()=>Pt(n),()=>{Ws(o,Pt(n).val)}),L1(),O1();var Ce=dT(),ke=gM(Ce);Hx(ke,{$$events:{blink:te}});var je=Xg(ke,2),fe=lf(je),K=lf(fe);Hg(()=>Qg(K,`${Math.round(Pt(b))??""} FPS`)),cf(fe);var me=Xg(fe,2),ge=lf(me,!0);Hg(()=>Qg(ge,JSON.stringify(Pt(n).timer_fracs))),cf(me);var $e=Xg(me,2),We=lf($e,!0);cf($e),cf(je),_M(2),Hg(()=>Qg(We,Pt(o))),$1(t,Ce),D1()}export{wT as component};
